{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/temp.sh","path":"temp.sh","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0001-1.png","path":"uploads/0001-1.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0001-vm-monitoring.png","path":"uploads/0001-vm-monitoring.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-archi-zabbix.png","path":"uploads/0002-archi-zabbix.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-dockbix-agent-xxl-schema.png","path":"uploads/0002-dockbix-agent-xxl-schema.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-group-1.png","path":"uploads/0002-group-1.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-group-2.png","path":"uploads/0002-group-2.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-zabbix-discovery.png","path":"uploads/0002-zabbix-discovery.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0002-zabbix-login.png","path":"uploads/0002-zabbix-login.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0003-archi-prometheus-on-docker.png","path":"uploads/0003-archi-prometheus-on-docker.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/0008cgroup1.png","path":"uploads/0008cgroup1.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/11-0.png","path":"uploads/11-0.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/11-1.png","path":"uploads/11-1.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/11111.jpg","path":"uploads/11111.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/chatu.jpg","path":"uploads/chatu.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/tencentDocker.jpg","path":"uploads/tencentDocker.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/2018-02-01-1.jpg","path":"uploads/2018-02-01-1.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/2018-02-01-2.png","path":"uploads/2018-02-01-2.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/qcode.jpg","path":"uploads/qcode.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/cAdvisor.png","path":"uploads/cAdvisor.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/temp.sh","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949150},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1529681949158},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1529681949158},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1529681949158},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1529681949158},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1529681949158},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1529681949158},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1529681949158},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1529681949158},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1529681949158},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1529681949158},{"_id":"themes/next/_config.yml","hash":"9a8103ee65c357c94c24bb1f2d71b4a36fe3c549","modified":1529681949162},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1529681949162},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1529681949162},{"_id":"themes/next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1529681949162},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1529681949162},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1529681949162},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1529681949162},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1529681949162},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1529681949162},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1529681949162},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1529681949162},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1529681949162},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1529681949162},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1529681949162},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1529681949162},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1529681949162},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1529681949162},{"_id":"themes/next/layout/_layout.swig","hash":"a44305f8fa7fe9c80eb50c0696a704424b589750","modified":1529681949162},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1529681949162},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1529681949162},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1529681949162},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1529681949162},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1529681949162},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1529681949162},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1529681949162},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1529681949162},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1529681949162},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1529681949194},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1529681949194},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1529681949194},{"_id":"source/_posts/0001supervisorDockerSystem.md","hash":"bdfa1b67dee2bcb4dd2e804161f95eb7fe80cd28","modified":1529681949146},{"_id":"source/_posts/0002complexSolutionsForMonitoring.md","hash":"14ee156404084b68649ea5314f93247a664bdec1","modified":1529681949146},{"_id":"source/_posts/0003PrometheusSuite.md","hash":"654f1ab1f6813be2ec6b001413bdf0e03570f3a8","modified":1529681949146},{"_id":"source/_posts/0004DockerEssential.md","hash":"b90133dc5edd60deafe236362a4124d64c227779","modified":1529681949146},{"_id":"source/_posts/0005StringInBash.md","hash":"1788afff51eee251b1c2455f427da2b287abdeaa","modified":1529681949146},{"_id":"source/_posts/0006VimArrangement.md","hash":"6d2f5789527c559f070c57210ba863c73b39134f","modified":1529681949146},{"_id":"source/_posts/0007DockerNameSpace.md","hash":"c6d31374db439ec85cc561ca678c0cccf7f1c6eb","modified":1529681949146},{"_id":"source/_posts/0008CGroup.md","hash":"983b399cbf127ddb9253ab76c8b4ae19b70fa45a","modified":1529681949146},{"_id":"source/_posts/0009SpellingInVim.md","hash":"36992893f79989fce29de7f3976fdc1501d2f562","modified":1529681949146},{"_id":"source/_posts/0010logger.md","hash":"6c38318f10de67b3b513042326c4ebc7c8deda05","modified":1529681949146},{"_id":"source/_posts/0011Java8Basic.md","hash":"0306f05d0962b4da604877e10fcd65bd6f816935","modified":1529681949146},{"_id":"source/_posts/2018-01-25.md","hash":"35fbb3a4e025e73d96c9540904e95f54f72ea913","modified":1529681949146},{"_id":"source/_posts/2018-02-01-bracelet.md","hash":"d3afbfd8e33185aa9fe1dd841282b8632a1c3edd","modified":1529681949146},{"_id":"source/_posts/2018-02-09-sshd.md","hash":"ea556c110b9c5e4b05bf28a15ea835ec529563c5","modified":1529681949146},{"_id":"source/_posts/chef01.md","hash":"37dba71d7e243d8b640bceb3ec86366789653524","modified":1529681949146},{"_id":"source/_posts/d0001-20170701.md","hash":"6306c42c2b3d19e66a8cc7c8150cc671601e3d63","modified":1529681949146},{"_id":"source/_posts/d0002-20170703.md","hash":"e478d3bb91cdd60524306053bdaea9a6f47f792f","modified":1529681949146},{"_id":"source/_posts/model.md","hash":"029c63515fc150bcd488e11da5c1b2578e259520","modified":1529681949146},{"_id":"source/favicon.ico","hash":"14746920977713dc94585e08da1fc86908579275","modified":1529681949150},{"_id":"source/categories/index.md","hash":"50c817f178a64b613507f7fc0af557f4a84ff8c9","modified":1529681949146},{"_id":"source/tags/index.md","hash":"7e17044367523fe2b2aa7fdf07a8765f545d289f","modified":1529681949150},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949170},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1529681949162},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1529681949162},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1529681949162},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1529681949162},{"_id":"themes/next/layout/_macro/post.swig","hash":"9481f43ed356e00df7b519e92ad0becebc9e1505","modified":1529681949162},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1529681949162},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a2b213c1a7c37cd6e4749f2018371f4c1f4f0d23","modified":1529681949162},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1529681949162},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1529681949162},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1529681949162},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1529681949162},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1529681949162},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1529681949162},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1529681949162},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1529681949162},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1529681949162},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1529681949162},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1529681949162},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1529681949162},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1529681949162},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1529681949162},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1529681949162},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1529681949162},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1529681949162},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1529681949162},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1529681949162},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1529681949162},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1529681949166},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1529681949166},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1529681949166},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1529681949166},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1529681949166},{"_id":"themes/next/source/favicon.ico","hash":"14746920977713dc94585e08da1fc86908579275","modified":1529681949170},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1529681949170},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1529681949170},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1529681949170},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1529681949170},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1529681949170},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1529681949170},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1529681949170},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1529681949170},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1529681949170},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529681949170},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529681949170},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1529681949170},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1529681949170},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1529681949170},{"_id":"themes/next/source/uploads/0001-1.png","hash":"36531baf43f49a66f514bf569a30a9b2b09cb332","modified":1529681949186},{"_id":"themes/next/source/uploads/0001-vm-monitoring.png","hash":"b7926824b101095d92071a28d0b6a4270527f915","modified":1529681949186},{"_id":"themes/next/source/uploads/0002-archi-zabbix.png","hash":"ed6fcf2de1002384aef0af8b39d553508e113670","modified":1529681949186},{"_id":"themes/next/source/uploads/0002-dockbix-agent-xxl-schema.png","hash":"033c67e6e93e03bd9500f68f2d745bd961b3f909","modified":1529681949186},{"_id":"themes/next/source/uploads/0002-group-1.png","hash":"79c510944968076eb1a0117b7d030de444e0676a","modified":1529681949186},{"_id":"themes/next/source/uploads/0002-group-2.png","hash":"a597d7337bf058e29d1ed71961fd7eb9f9dad612","modified":1529681949186},{"_id":"themes/next/source/uploads/0002-zabbix-discovery.png","hash":"fde20b2899a70848002cd18e28e526b05be51834","modified":1529681949190},{"_id":"themes/next/source/uploads/0002-zabbix-login.png","hash":"ca957522f7124f88f9831bdd0dbb87f33c1b1fee","modified":1529681949190},{"_id":"themes/next/source/uploads/0003-archi-prometheus-on-docker.png","hash":"2c9e1909bbab1ac4b1ad0f3ce856f3f4393a2469","modified":1529681949190},{"_id":"themes/next/source/uploads/0008cgroup1.png","hash":"4c7fae39deef75c6ea0beaf3ed4cdf48bfe26c1f","modified":1529681949190},{"_id":"themes/next/source/uploads/11-0.png","hash":"87c01b90fcf204cf3253c5d37daf9947a1dbf60a","modified":1529681949190},{"_id":"themes/next/source/uploads/11-1.png","hash":"ce0b939a227cdb0d5728b3d07b0b74bccfe4ae40","modified":1529681949190},{"_id":"themes/next/source/uploads/11111.jpg","hash":"3202bfd69151dd49cc857797bfff24792fc20c13","modified":1529681949190},{"_id":"themes/next/source/uploads/chatu.jpg","hash":"8e5d5f206a7fbf124a9ee6f5170446ee880e6bd1","modified":1529681949194},{"_id":"themes/next/source/uploads/tencentDocker.jpg","hash":"c2fb54721dbdffc8a0927941436310eaedff858a","modified":1529681949194},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949162},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949162},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949166},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949166},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949166},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949166},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529681949166},{"_id":"themes/next/source/uploads/2018-02-01-1.jpg","hash":"1d1eded4621381c3a0098974c2e89cd3490c3a4f","modified":1529681949190},{"_id":"themes/next/source/uploads/2018-02-01-2.png","hash":"45ae8056b814ae184fb65d59e761209174c5e174","modified":1529681949190},{"_id":"themes/next/source/uploads/qcode.jpg","hash":"a49a7831fec5b5496ad78ad98f43f2eca05047d6","modified":1529681949194},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1529681949162},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1529681949162},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1529681949162},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1529681949162},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1529681949162},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1529681949162},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1529681949162},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1529681949162},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1529681949162},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1529681949162},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1529681949162},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1529681949162},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1529681949162},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1529681949162},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1529681949162},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1529681949162},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1529681949162},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1529681949166},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1529681949166},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1529681949166},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1529681949166},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1529681949166},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1529681949166},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1529681949170},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1529681949170},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1529681949170},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1529681949170},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1529681949170},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1529681949170},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1529681949170},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1529681949170},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1529681949170},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1529681949170},{"_id":"themes/next/source/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1529681949170},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1529681949170},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1529681949174},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529681949174},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1529681949178},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1529681949174},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1529681949178},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1529681949182},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1529681949182},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1529681949182},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1529681949182},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1529681949182},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1529681949182},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1529681949186},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1529681949186},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1529681949186},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1529681949186},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1529681949186},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1529681949182},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1529681949182},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1529681949182},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1529681949182},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1529681949182},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1529681949182},{"_id":"themes/next/source/uploads/cAdvisor.png","hash":"47af625a59df436b2295e5c525c1c23c829df915","modified":1529681949194},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1529681949162},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1529681949162},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1529681949166},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1529681949166},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1529681949166},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1529681949166},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1529681949166},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1529681949166},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1529681949166},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1529681949170},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1529681949174},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1529681949178},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1529681949186},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1529681949186},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1529681949170},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529681949178},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1529681949186},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1529681949166},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1529681949166},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1529681949166},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1529681949170},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1529681949170},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1529681949174},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1529681949174},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529681949178},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529681949178},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1529681949174},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1529681949186},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1529681949178}],"Category":[{"name":"Docker","_id":"cjir8d0ag0004c5cc0igkpuqm"},{"name":"Supervisor","_id":"cjir8d0b00009c5cc1q9jbca2"},{"name":"Shell","_id":"cjir8d0br000kc5cc9thgn9ii"},{"name":"Vim","_id":"cjir8d0c0000sc5cckt836szq"},{"name":"Java","_id":"cjir8d0cj0015c5ccqe1g139h"},{"name":"vim","_id":"cjir8d0db001hc5cc5kn22344"},{"name":"Life","_id":"cjir8d0de001kc5ccym5qp0dr"},{"name":"linux","_id":"cjir8d0df001nc5cc2bvstlvr"},{"name":"Cloud","_id":"cjir8d0dh001qc5ccmhpushly"},{"name":"Diary","_id":"cjir8d0dk001wc5ccsbsvnvu1"},{"name":"Testing","_id":"cjir8d0dq0026c5ccof6kbe4y"}],"Data":[],"Page":[{"title":"categories","date":"2017-06-28T16:22:25.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-06-28 16:22:25\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-06-22T15:39:09.146Z","path":"categories/index.html","layout":"page","_id":"cjir8d09w0001c5cc77skd49f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-06-28T16:28:02.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-28 16:28:02\ntype: \"tags\"\n---\n","updated":"2018-06-22T15:39:09.150Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjir8d0ad0003c5ccg65q4kol","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Simple Solutions for Monitoring Docker Containers","_content":"\n\n# 1. Introduction\n\nOur but is to supervise the functionality of the native machine running docker daemon, to prevent the insufficient system sources distributed.\n\n## 1.1 The Aims\n\n- Reduce down time\n- Extensibility\n- Control the Performance\n- Ressources Monitoring\n- Catch exceptions\n\n## 1.2 The Challenges Monitoring Docker\n\n- It looked like a host machine, but not exactly the same.\n- A LOT OF informations\n- life circle is SHORT\n- have point mort\n- Micro Service\n- Clustering\n- VM Host + Services + Containers + Apps Multi-layers\n\n# 2. Two layers Monitoring\n\n## 2.0 Monitoring on VM\n\n![VM Monitoring](/uploads/0001-vm-monitoring.png)\n\n- Application Layer: Supervise the error in application layer\n- Machine Layer: CPU, MEM etc.\n\n## 2.1 The Host Machine\n\nWe want to catch the following information:\n\n- System Information : CPU, MEM, Disk IO, Network etc.\n- All Containers Names\n- Running Containers\n- Dead Containers\n- Docker Informations : Storage Driver、Data Space Used、Data Space Total、Metadata Space Total、Metadata Space Used、client version、client api version、server version、servier api version\n\n## 2.2 The Containers\n\nIn the container, we want to catch :\n\n- Container's information : Name, IP, Image, Command etc.\n- The status : Running / Stopped\n- CPU\n- Memory Usage\n- Memory Limit\n- Network IO\n- Disk\n\n# 3. How to get Container Informations\n\n## 3.1 Basic\n\n- Namespace: Separation here\n- cgroup : ressources\n\n\n\n### Cpu Memory FS\n\n#### CPU:\n\n/sys/fs/cgroup/{memory,cpuacct,blkio}/system.slice/${docker ps --no-trunc}.scope\n> Standard: /sys/fs/cgroup/:cgroup/docker/:container_id\n> Systemd:  /sys/fs/cgroup/:cgroup/system.slice/docker-#{id}.scope\n\n#### Memory :\n\n/sys/fs/cgroup/memory/\n\n> looking for memory.stat file.\n\n![Memory Metrics](/uploads/0001-1.png)\n\n# Simple Solutions\n\n## The Original Docker\n\n~~~bash\n$ docker stats\nCONTAINER           CPU %               MEM USAGE / LIMIT       MEM %               NET I/O             BLOCK I/O           PIDS\n7a91dbda43e4        4.20%               52.06 MiB / 15.66 GiB   0.32%               70.7 MB / 3.47 GB   352 kB / 0 B        17\n~~~\n\n## The most simple : cAdvisor google\n\n\n### how to run cAdvisor\n\n~~~bash\nsudo docker run \\\n  --volume=/:/rootfs:ro \\\n  --volume=/var/run:/var/run:rw \\\n  --volume=/sys:/sys:ro \\\n  --volume=/var/lib/docker/:/var/lib/docker:ro \\\n  --publish=4001:8080 \\\n  --detach=true \\\n  --name=cadvisor \\\n  google/cadvisor\n~~~\n\nThen we connect to the\n\n> http://<ip host>:4001\n\nThe report graphic is already there.\n\n### Pros and Cons\n\nSimple and fast, but not poorly personalized, restricted in Linux machine.\n","source":"_posts/0001supervisorDockerSystem.md","raw":"---\n  title: Simple Solutions for Monitoring Docker Containers\n  categories: Docker\n  tags:\n    - docker\n    - supervisor\n    - monitoring\n---\n\n\n# 1. Introduction\n\nOur but is to supervise the functionality of the native machine running docker daemon, to prevent the insufficient system sources distributed.\n\n## 1.1 The Aims\n\n- Reduce down time\n- Extensibility\n- Control the Performance\n- Ressources Monitoring\n- Catch exceptions\n\n## 1.2 The Challenges Monitoring Docker\n\n- It looked like a host machine, but not exactly the same.\n- A LOT OF informations\n- life circle is SHORT\n- have point mort\n- Micro Service\n- Clustering\n- VM Host + Services + Containers + Apps Multi-layers\n\n# 2. Two layers Monitoring\n\n## 2.0 Monitoring on VM\n\n![VM Monitoring](/uploads/0001-vm-monitoring.png)\n\n- Application Layer: Supervise the error in application layer\n- Machine Layer: CPU, MEM etc.\n\n## 2.1 The Host Machine\n\nWe want to catch the following information:\n\n- System Information : CPU, MEM, Disk IO, Network etc.\n- All Containers Names\n- Running Containers\n- Dead Containers\n- Docker Informations : Storage Driver、Data Space Used、Data Space Total、Metadata Space Total、Metadata Space Used、client version、client api version、server version、servier api version\n\n## 2.2 The Containers\n\nIn the container, we want to catch :\n\n- Container's information : Name, IP, Image, Command etc.\n- The status : Running / Stopped\n- CPU\n- Memory Usage\n- Memory Limit\n- Network IO\n- Disk\n\n# 3. How to get Container Informations\n\n## 3.1 Basic\n\n- Namespace: Separation here\n- cgroup : ressources\n\n\n\n### Cpu Memory FS\n\n#### CPU:\n\n/sys/fs/cgroup/{memory,cpuacct,blkio}/system.slice/${docker ps --no-trunc}.scope\n> Standard: /sys/fs/cgroup/:cgroup/docker/:container_id\n> Systemd:  /sys/fs/cgroup/:cgroup/system.slice/docker-#{id}.scope\n\n#### Memory :\n\n/sys/fs/cgroup/memory/\n\n> looking for memory.stat file.\n\n![Memory Metrics](/uploads/0001-1.png)\n\n# Simple Solutions\n\n## The Original Docker\n\n~~~bash\n$ docker stats\nCONTAINER           CPU %               MEM USAGE / LIMIT       MEM %               NET I/O             BLOCK I/O           PIDS\n7a91dbda43e4        4.20%               52.06 MiB / 15.66 GiB   0.32%               70.7 MB / 3.47 GB   352 kB / 0 B        17\n~~~\n\n## The most simple : cAdvisor google\n\n\n### how to run cAdvisor\n\n~~~bash\nsudo docker run \\\n  --volume=/:/rootfs:ro \\\n  --volume=/var/run:/var/run:rw \\\n  --volume=/sys:/sys:ro \\\n  --volume=/var/lib/docker/:/var/lib/docker:ro \\\n  --publish=4001:8080 \\\n  --detach=true \\\n  --name=cadvisor \\\n  google/cadvisor\n~~~\n\nThen we connect to the\n\n> http://<ip host>:4001\n\nThe report graphic is already there.\n\n### Pros and Cons\n\nSimple and fast, but not poorly personalized, restricted in Linux machine.\n","slug":"0001supervisorDockerSystem","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d09k0000c5ccii5klppg","content":"<h1 id=\"1-Introduction\"><a href=\"#1-Introduction\" class=\"headerlink\" title=\"1. Introduction\"></a>1. Introduction</h1><p>Our but is to supervise the functionality of the native machine running docker daemon, to prevent the insufficient system sources distributed.</p>\n<h2 id=\"1-1-The-Aims\"><a href=\"#1-1-The-Aims\" class=\"headerlink\" title=\"1.1 The Aims\"></a>1.1 The Aims</h2><ul>\n<li>Reduce down time</li>\n<li>Extensibility</li>\n<li>Control the Performance</li>\n<li>Ressources Monitoring</li>\n<li>Catch exceptions</li>\n</ul>\n<h2 id=\"1-2-The-Challenges-Monitoring-Docker\"><a href=\"#1-2-The-Challenges-Monitoring-Docker\" class=\"headerlink\" title=\"1.2 The Challenges Monitoring Docker\"></a>1.2 The Challenges Monitoring Docker</h2><ul>\n<li>It looked like a host machine, but not exactly the same.</li>\n<li>A LOT OF informations</li>\n<li>life circle is SHORT</li>\n<li>have point mort</li>\n<li>Micro Service</li>\n<li>Clustering</li>\n<li>VM Host + Services + Containers + Apps Multi-layers</li>\n</ul>\n<h1 id=\"2-Two-layers-Monitoring\"><a href=\"#2-Two-layers-Monitoring\" class=\"headerlink\" title=\"2. Two layers Monitoring\"></a>2. Two layers Monitoring</h1><h2 id=\"2-0-Monitoring-on-VM\"><a href=\"#2-0-Monitoring-on-VM\" class=\"headerlink\" title=\"2.0 Monitoring on VM\"></a>2.0 Monitoring on VM</h2><p><img src=\"/uploads/0001-vm-monitoring.png\" alt=\"VM Monitoring\"></p>\n<ul>\n<li>Application Layer: Supervise the error in application layer</li>\n<li>Machine Layer: CPU, MEM etc.</li>\n</ul>\n<h2 id=\"2-1-The-Host-Machine\"><a href=\"#2-1-The-Host-Machine\" class=\"headerlink\" title=\"2.1 The Host Machine\"></a>2.1 The Host Machine</h2><p>We want to catch the following information:</p>\n<ul>\n<li>System Information : CPU, MEM, Disk IO, Network etc.</li>\n<li>All Containers Names</li>\n<li>Running Containers</li>\n<li>Dead Containers</li>\n<li>Docker Informations : Storage Driver、Data Space Used、Data Space Total、Metadata Space Total、Metadata Space Used、client version、client api version、server version、servier api version</li>\n</ul>\n<h2 id=\"2-2-The-Containers\"><a href=\"#2-2-The-Containers\" class=\"headerlink\" title=\"2.2 The Containers\"></a>2.2 The Containers</h2><p>In the container, we want to catch :</p>\n<ul>\n<li>Container’s information : Name, IP, Image, Command etc.</li>\n<li>The status : Running / Stopped</li>\n<li>CPU</li>\n<li>Memory Usage</li>\n<li>Memory Limit</li>\n<li>Network IO</li>\n<li>Disk</li>\n</ul>\n<h1 id=\"3-How-to-get-Container-Informations\"><a href=\"#3-How-to-get-Container-Informations\" class=\"headerlink\" title=\"3. How to get Container Informations\"></a>3. How to get Container Informations</h1><h2 id=\"3-1-Basic\"><a href=\"#3-1-Basic\" class=\"headerlink\" title=\"3.1 Basic\"></a>3.1 Basic</h2><ul>\n<li>Namespace: Separation here</li>\n<li>cgroup : ressources</li>\n</ul>\n<h3 id=\"Cpu-Memory-FS\"><a href=\"#Cpu-Memory-FS\" class=\"headerlink\" title=\"Cpu Memory FS\"></a>Cpu Memory FS</h3><h4 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU:\"></a>CPU:</h4><p>/sys/fs/cgroup/{memory,cpuacct,blkio}/system.slice/${docker ps –no-trunc}.scope</p>\n<blockquote>\n<p>Standard: /sys/fs/cgroup/:cgroup/docker/:container_id<br>Systemd:  /sys/fs/cgroup/:cgroup/system.slice/docker-#{id}.scope</p>\n</blockquote>\n<h4 id=\"Memory\"><a href=\"#Memory\" class=\"headerlink\" title=\"Memory :\"></a>Memory :</h4><p>/sys/fs/cgroup/memory/</p>\n<blockquote>\n<p>looking for memory.stat file.</p>\n</blockquote>\n<p><img src=\"/uploads/0001-1.png\" alt=\"Memory Metrics\"></p>\n<h1 id=\"Simple-Solutions\"><a href=\"#Simple-Solutions\" class=\"headerlink\" title=\"Simple Solutions\"></a>Simple Solutions</h1><h2 id=\"The-Original-Docker\"><a href=\"#The-Original-Docker\" class=\"headerlink\" title=\"The Original Docker\"></a>The Original Docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker stats</div><div class=\"line\">CONTAINER           CPU %               MEM USAGE / LIMIT       MEM %               NET I/O             BLOCK I/O           PIDS</div><div class=\"line\">7a91dbda43e4        4.20%               52.06 MiB / 15.66 GiB   0.32%               70.7 MB / 3.47 GB   352 kB / 0 B        17</div></pre></td></tr></table></figure>\n<h2 id=\"The-most-simple-cAdvisor-google\"><a href=\"#The-most-simple-cAdvisor-google\" class=\"headerlink\" title=\"The most simple : cAdvisor google\"></a>The most simple : cAdvisor google</h2><h3 id=\"how-to-run-cAdvisor\"><a href=\"#how-to-run-cAdvisor\" class=\"headerlink\" title=\"how to run cAdvisor\"></a>how to run cAdvisor</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run \\</div><div class=\"line\">  --volume=/:/rootfs:ro \\</div><div class=\"line\">  --volume=/var/run:/var/run:rw \\</div><div class=\"line\">  --volume=/sys:/sys:ro \\</div><div class=\"line\">  --volume=/var/lib/docker/:/var/lib/docker:ro \\</div><div class=\"line\">  --publish=4001:8080 \\</div><div class=\"line\">  --detach=<span class=\"literal\">true</span> \\</div><div class=\"line\">  --name=cadvisor \\</div><div class=\"line\">  google/cadvisor</div></pre></td></tr></table></figure>\n<p>Then we connect to the</p>\n<blockquote>\n<p>http://<ip host=\"\">:4001</ip></p>\n</blockquote>\n<p>The report graphic is already there.</p>\n<h3 id=\"Pros-and-Cons\"><a href=\"#Pros-and-Cons\" class=\"headerlink\" title=\"Pros and Cons\"></a>Pros and Cons</h3><p>Simple and fast, but not poorly personalized, restricted in Linux machine.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-Introduction\"><a href=\"#1-Introduction\" class=\"headerlink\" title=\"1. Introduction\"></a>1. Introduction</h1><p>Our but is to supervise the functionality of the native machine running docker daemon, to prevent the insufficient system sources distributed.</p>\n<h2 id=\"1-1-The-Aims\"><a href=\"#1-1-The-Aims\" class=\"headerlink\" title=\"1.1 The Aims\"></a>1.1 The Aims</h2><ul>\n<li>Reduce down time</li>\n<li>Extensibility</li>\n<li>Control the Performance</li>\n<li>Ressources Monitoring</li>\n<li>Catch exceptions</li>\n</ul>\n<h2 id=\"1-2-The-Challenges-Monitoring-Docker\"><a href=\"#1-2-The-Challenges-Monitoring-Docker\" class=\"headerlink\" title=\"1.2 The Challenges Monitoring Docker\"></a>1.2 The Challenges Monitoring Docker</h2><ul>\n<li>It looked like a host machine, but not exactly the same.</li>\n<li>A LOT OF informations</li>\n<li>life circle is SHORT</li>\n<li>have point mort</li>\n<li>Micro Service</li>\n<li>Clustering</li>\n<li>VM Host + Services + Containers + Apps Multi-layers</li>\n</ul>\n<h1 id=\"2-Two-layers-Monitoring\"><a href=\"#2-Two-layers-Monitoring\" class=\"headerlink\" title=\"2. Two layers Monitoring\"></a>2. Two layers Monitoring</h1><h2 id=\"2-0-Monitoring-on-VM\"><a href=\"#2-0-Monitoring-on-VM\" class=\"headerlink\" title=\"2.0 Monitoring on VM\"></a>2.0 Monitoring on VM</h2><p><img src=\"/uploads/0001-vm-monitoring.png\" alt=\"VM Monitoring\"></p>\n<ul>\n<li>Application Layer: Supervise the error in application layer</li>\n<li>Machine Layer: CPU, MEM etc.</li>\n</ul>\n<h2 id=\"2-1-The-Host-Machine\"><a href=\"#2-1-The-Host-Machine\" class=\"headerlink\" title=\"2.1 The Host Machine\"></a>2.1 The Host Machine</h2><p>We want to catch the following information:</p>\n<ul>\n<li>System Information : CPU, MEM, Disk IO, Network etc.</li>\n<li>All Containers Names</li>\n<li>Running Containers</li>\n<li>Dead Containers</li>\n<li>Docker Informations : Storage Driver、Data Space Used、Data Space Total、Metadata Space Total、Metadata Space Used、client version、client api version、server version、servier api version</li>\n</ul>\n<h2 id=\"2-2-The-Containers\"><a href=\"#2-2-The-Containers\" class=\"headerlink\" title=\"2.2 The Containers\"></a>2.2 The Containers</h2><p>In the container, we want to catch :</p>\n<ul>\n<li>Container’s information : Name, IP, Image, Command etc.</li>\n<li>The status : Running / Stopped</li>\n<li>CPU</li>\n<li>Memory Usage</li>\n<li>Memory Limit</li>\n<li>Network IO</li>\n<li>Disk</li>\n</ul>\n<h1 id=\"3-How-to-get-Container-Informations\"><a href=\"#3-How-to-get-Container-Informations\" class=\"headerlink\" title=\"3. How to get Container Informations\"></a>3. How to get Container Informations</h1><h2 id=\"3-1-Basic\"><a href=\"#3-1-Basic\" class=\"headerlink\" title=\"3.1 Basic\"></a>3.1 Basic</h2><ul>\n<li>Namespace: Separation here</li>\n<li>cgroup : ressources</li>\n</ul>\n<h3 id=\"Cpu-Memory-FS\"><a href=\"#Cpu-Memory-FS\" class=\"headerlink\" title=\"Cpu Memory FS\"></a>Cpu Memory FS</h3><h4 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU:\"></a>CPU:</h4><p>/sys/fs/cgroup/{memory,cpuacct,blkio}/system.slice/${docker ps –no-trunc}.scope</p>\n<blockquote>\n<p>Standard: /sys/fs/cgroup/:cgroup/docker/:container_id<br>Systemd:  /sys/fs/cgroup/:cgroup/system.slice/docker-#{id}.scope</p>\n</blockquote>\n<h4 id=\"Memory\"><a href=\"#Memory\" class=\"headerlink\" title=\"Memory :\"></a>Memory :</h4><p>/sys/fs/cgroup/memory/</p>\n<blockquote>\n<p>looking for memory.stat file.</p>\n</blockquote>\n<p><img src=\"/uploads/0001-1.png\" alt=\"Memory Metrics\"></p>\n<h1 id=\"Simple-Solutions\"><a href=\"#Simple-Solutions\" class=\"headerlink\" title=\"Simple Solutions\"></a>Simple Solutions</h1><h2 id=\"The-Original-Docker\"><a href=\"#The-Original-Docker\" class=\"headerlink\" title=\"The Original Docker\"></a>The Original Docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker stats</div><div class=\"line\">CONTAINER           CPU %               MEM USAGE / LIMIT       MEM %               NET I/O             BLOCK I/O           PIDS</div><div class=\"line\">7a91dbda43e4        4.20%               52.06 MiB / 15.66 GiB   0.32%               70.7 MB / 3.47 GB   352 kB / 0 B        17</div></pre></td></tr></table></figure>\n<h2 id=\"The-most-simple-cAdvisor-google\"><a href=\"#The-most-simple-cAdvisor-google\" class=\"headerlink\" title=\"The most simple : cAdvisor google\"></a>The most simple : cAdvisor google</h2><h3 id=\"how-to-run-cAdvisor\"><a href=\"#how-to-run-cAdvisor\" class=\"headerlink\" title=\"how to run cAdvisor\"></a>how to run cAdvisor</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run \\</div><div class=\"line\">  --volume=/:/rootfs:ro \\</div><div class=\"line\">  --volume=/var/run:/var/run:rw \\</div><div class=\"line\">  --volume=/sys:/sys:ro \\</div><div class=\"line\">  --volume=/var/lib/docker/:/var/lib/docker:ro \\</div><div class=\"line\">  --publish=4001:8080 \\</div><div class=\"line\">  --detach=<span class=\"literal\">true</span> \\</div><div class=\"line\">  --name=cadvisor \\</div><div class=\"line\">  google/cadvisor</div></pre></td></tr></table></figure>\n<p>Then we connect to the</p>\n<blockquote>\n<p>http://<ip host=\"\">:4001</ip></p>\n</blockquote>\n<p>The report graphic is already there.</p>\n<h3 id=\"Pros-and-Cons\"><a href=\"#Pros-and-Cons\" class=\"headerlink\" title=\"Pros and Cons\"></a>Pros and Cons</h3><p>Simple and fast, but not poorly personalized, restricted in Linux machine.</p>\n"},{"title":"Complex Monitoring Solutions","_content":"\n# 1. Complex Solutions For Monitoring\n\nTill now I have collected the following solutions:\n\n- cAdvisor + influxDB + grafana\n- collectd + influxDB + grafana\n- Prometheus\n- Cloud Insight\n- Graphite\n- Zabbix\n- Fluentd\n- heapster (k8s sub-project)\n\n# 2. Zabbix\n\n{% note info %}\n\nZabbix 是由 Alexei Vladishev 开发的一种网络监视、管理系统，基于 Server-Client 架构。可用于监视各种网络服务、服务器和网络机器等状态。\n\n<a href=\"https://github.com/monitoringartist/zabbix-docker-monitoring\">Ref: Zabbix Docker Monitoring</a>\n\n{% endnote %}\n\n\n## 2.1 What to supervise\n\n1. Available CPU\n2. MEM\n3. blkio\n4. net container metrics\n5. containers config details: ip address, host name, etc.\n\n## 2.2 Zabbix Architecture\n\n![Zabbix Architecture](/uploads/0002-archi-zabbix.png)\n\n\n## 2.3 Deployment\n\n### 2.3.1 Create Data volume\n\n~~~bash\ndocker run -d -v /var/lib/mysql --name zabbix-db-storage busybox:latest\n~~~\n\n### 2.3.2 Start Maria DB for Zabbix\n\n{% note info %} default 1GB innodb_buffer_pool_size is used {% endnote %}\n\n~~~bash\ndocker run \\\n    -d \\\n    --name zabbix-db \\\n    -v /backups:/backups \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    --volumes-from zabbix-db-storage \\\n    --env=\"MARIADB_USER=zabbix\" \\\n    --env=\"MARIADB_PASS=zabbix\" \\\n    monitoringartist/zabbix-db-mariadb\n~~~\n\n### 2.3.3 Start Zabbix linked to started DB\n\n~~~bash\ndocker run \\\n    -d \\\n    --name zabbix \\\n    -p 8888:80 \\\n    -p 10051:10051 \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    --link zabbix-db:zabbix.db \\\n    --env=\"ZS_DBHost=zabbix.db\" \\\n    --env=\"ZS_DBUser=zabbix\" \\\n    --env=\"ZS_DBPassword=zabbix\" \\\n    monitoringartist/zabbix-xxl:latest\n~~~\n\n### 2.3.4 Verify Login\n\n![Zabbix Login](0002-zabbix-login.png)\n\nNormally we can see this page on http://<ip address>:8888 now, and the login information as follows:\n\n{% note success %}\nUsername: admin\nPassword: zabbix\n{% endnote %}\n\n### 2.3.5 Get Server done with docker-compose\n\nTo automatise the listing process we created a docker-compose.yml:\n\n~~~yaml\n\nversion: '2'\nservices:\n  zabbix-server:\n    image: monitoringartist/zabbix-xxl:latest\n    container_name: zabbix\n    networks:\n      zabbix_net:\n        ipv4_address: 10.0.78.10\n    environment:\n      - ZS_DBHost=10.0.78.9\n      - ZS_DBUser=zabbix\n      - ZS_DBPassword=zabbix\n    depends_on:\n      - zabbix-db\n    volumes:\n      - /etc/localtime:/etc/localtime\n    ports:\n      - 8888:80\n      - 10051:10051\n  zabbix-db:\n    image: monitoringartist/zabbix-db-mariadb\n    container_name: zabbix-db\n    volumes_from:\n      - zabbix-db-storage\n    depends_on:\n      - zabbix-db-storage\n    environment:\n      - MARIADB_USER=zabbix\n      - MARIADB_PASS=zabbix\n    volumes:\n      - /backups:/backups\n      - /etc/localtime:/etc/localtime\n    networks:\n      zabbix_net:\n        ipv4_address: 10.0.78.9\n  zabbix-db-storage:\n    image: busybox:latest\n    container_name: zabbix-db-storage\n    volumes:\n      - /var/lib/mysql\n\n\nnetworks:\n  zabbix_net:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.0.78.0/24\n          gateway: 10.0.78.1\n\n#docker-compose.yml\n~~~\n\n###2.3.6 Other functions of Server side\n\n~~~bash\n# Backup of DB Zabbix - configuration data only, no item history/trends\ndocker exec \\\n    -ti zabbix-db \\\n    /zabbix-backup/zabbix-mariadb-dump -u zabbix -p my_password -o /backups\n\n# Full backup of Zabbix DB\ndocker exec \\\n    -ti zabbix-db \\\n    bash -c \"\\\n    mysqldump -u zabbix -pmy_password zabbix | \\\n    bzip2 -cq9 > /backups/zabbix_db_dump_$(date +%Y-%m-%d-%H.%M.%S).sql.bz2\"\n\n# Restore Zabbix DB\n# remove zabbix server container\ndocker rm -f zabbix\n# restore data from dump (all current data will be dropped!!!)\ndocker exec -i zabbix-db sh -c 'bunzip2 -dc /backups/zabbix_db_dump_2016-05-25-02.57.46.sql.bz2 \\\n | mysql -uzabbix -p --password=my_password zabbix'\n# run zabbix server again\ndocker run ...\n~~~\n\n### 2.3.6 Zabbix Agent\n\nThis figure show how it works:\n\n![Zabbix Dockbix agent](/uploads/0002-dockbix-agent-xxl-schema.png)\n\n~~~bash\ndocker run \\\n  --name=dockbix-agent-xxl \\\n  --net=host \\\n  --privileged \\\n  -v /:/rootfs \\\n  -v /var/run:/var/run \\\n  --restart unless-stopped \\\n  -e \"ZA_Server=10.9.41.131\" \\\n  -e \"ZA_ServerActive=10.9.41.131\" \\\n  -d monitoringartist/dockbix-agent-xxl-limited:latest\n~~~\n\n### 2.3.7 Discovery\n\n![Zabbix Server discovery](/uploads/0002-zabbix-discovery.png)\n\nThen:\n![](/uploads/0002-group-1.png)\n![](/uploads/0002-group-2.png)\n","source":"_posts/0002complexSolutionsForMonitoring.md","raw":"---\n  title: Complex Monitoring Solutions\n  categories: Supervisor\n  tags:\n    - docker\n    - supervisor\n    - monitoring\n---\n\n# 1. Complex Solutions For Monitoring\n\nTill now I have collected the following solutions:\n\n- cAdvisor + influxDB + grafana\n- collectd + influxDB + grafana\n- Prometheus\n- Cloud Insight\n- Graphite\n- Zabbix\n- Fluentd\n- heapster (k8s sub-project)\n\n# 2. Zabbix\n\n{% note info %}\n\nZabbix 是由 Alexei Vladishev 开发的一种网络监视、管理系统，基于 Server-Client 架构。可用于监视各种网络服务、服务器和网络机器等状态。\n\n<a href=\"https://github.com/monitoringartist/zabbix-docker-monitoring\">Ref: Zabbix Docker Monitoring</a>\n\n{% endnote %}\n\n\n## 2.1 What to supervise\n\n1. Available CPU\n2. MEM\n3. blkio\n4. net container metrics\n5. containers config details: ip address, host name, etc.\n\n## 2.2 Zabbix Architecture\n\n![Zabbix Architecture](/uploads/0002-archi-zabbix.png)\n\n\n## 2.3 Deployment\n\n### 2.3.1 Create Data volume\n\n~~~bash\ndocker run -d -v /var/lib/mysql --name zabbix-db-storage busybox:latest\n~~~\n\n### 2.3.2 Start Maria DB for Zabbix\n\n{% note info %} default 1GB innodb_buffer_pool_size is used {% endnote %}\n\n~~~bash\ndocker run \\\n    -d \\\n    --name zabbix-db \\\n    -v /backups:/backups \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    --volumes-from zabbix-db-storage \\\n    --env=\"MARIADB_USER=zabbix\" \\\n    --env=\"MARIADB_PASS=zabbix\" \\\n    monitoringartist/zabbix-db-mariadb\n~~~\n\n### 2.3.3 Start Zabbix linked to started DB\n\n~~~bash\ndocker run \\\n    -d \\\n    --name zabbix \\\n    -p 8888:80 \\\n    -p 10051:10051 \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    --link zabbix-db:zabbix.db \\\n    --env=\"ZS_DBHost=zabbix.db\" \\\n    --env=\"ZS_DBUser=zabbix\" \\\n    --env=\"ZS_DBPassword=zabbix\" \\\n    monitoringartist/zabbix-xxl:latest\n~~~\n\n### 2.3.4 Verify Login\n\n![Zabbix Login](0002-zabbix-login.png)\n\nNormally we can see this page on http://<ip address>:8888 now, and the login information as follows:\n\n{% note success %}\nUsername: admin\nPassword: zabbix\n{% endnote %}\n\n### 2.3.5 Get Server done with docker-compose\n\nTo automatise the listing process we created a docker-compose.yml:\n\n~~~yaml\n\nversion: '2'\nservices:\n  zabbix-server:\n    image: monitoringartist/zabbix-xxl:latest\n    container_name: zabbix\n    networks:\n      zabbix_net:\n        ipv4_address: 10.0.78.10\n    environment:\n      - ZS_DBHost=10.0.78.9\n      - ZS_DBUser=zabbix\n      - ZS_DBPassword=zabbix\n    depends_on:\n      - zabbix-db\n    volumes:\n      - /etc/localtime:/etc/localtime\n    ports:\n      - 8888:80\n      - 10051:10051\n  zabbix-db:\n    image: monitoringartist/zabbix-db-mariadb\n    container_name: zabbix-db\n    volumes_from:\n      - zabbix-db-storage\n    depends_on:\n      - zabbix-db-storage\n    environment:\n      - MARIADB_USER=zabbix\n      - MARIADB_PASS=zabbix\n    volumes:\n      - /backups:/backups\n      - /etc/localtime:/etc/localtime\n    networks:\n      zabbix_net:\n        ipv4_address: 10.0.78.9\n  zabbix-db-storage:\n    image: busybox:latest\n    container_name: zabbix-db-storage\n    volumes:\n      - /var/lib/mysql\n\n\nnetworks:\n  zabbix_net:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.0.78.0/24\n          gateway: 10.0.78.1\n\n#docker-compose.yml\n~~~\n\n###2.3.6 Other functions of Server side\n\n~~~bash\n# Backup of DB Zabbix - configuration data only, no item history/trends\ndocker exec \\\n    -ti zabbix-db \\\n    /zabbix-backup/zabbix-mariadb-dump -u zabbix -p my_password -o /backups\n\n# Full backup of Zabbix DB\ndocker exec \\\n    -ti zabbix-db \\\n    bash -c \"\\\n    mysqldump -u zabbix -pmy_password zabbix | \\\n    bzip2 -cq9 > /backups/zabbix_db_dump_$(date +%Y-%m-%d-%H.%M.%S).sql.bz2\"\n\n# Restore Zabbix DB\n# remove zabbix server container\ndocker rm -f zabbix\n# restore data from dump (all current data will be dropped!!!)\ndocker exec -i zabbix-db sh -c 'bunzip2 -dc /backups/zabbix_db_dump_2016-05-25-02.57.46.sql.bz2 \\\n | mysql -uzabbix -p --password=my_password zabbix'\n# run zabbix server again\ndocker run ...\n~~~\n\n### 2.3.6 Zabbix Agent\n\nThis figure show how it works:\n\n![Zabbix Dockbix agent](/uploads/0002-dockbix-agent-xxl-schema.png)\n\n~~~bash\ndocker run \\\n  --name=dockbix-agent-xxl \\\n  --net=host \\\n  --privileged \\\n  -v /:/rootfs \\\n  -v /var/run:/var/run \\\n  --restart unless-stopped \\\n  -e \"ZA_Server=10.9.41.131\" \\\n  -e \"ZA_ServerActive=10.9.41.131\" \\\n  -d monitoringartist/dockbix-agent-xxl-limited:latest\n~~~\n\n### 2.3.7 Discovery\n\n![Zabbix Server discovery](/uploads/0002-zabbix-discovery.png)\n\nThen:\n![](/uploads/0002-group-1.png)\n![](/uploads/0002-group-2.png)\n","slug":"0002complexSolutionsForMonitoring","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0a70002c5cc3l0syg1l","content":"<h1 id=\"1-Complex-Solutions-For-Monitoring\"><a href=\"#1-Complex-Solutions-For-Monitoring\" class=\"headerlink\" title=\"1. Complex Solutions For Monitoring\"></a>1. Complex Solutions For Monitoring</h1><p>Till now I have collected the following solutions:</p>\n<ul>\n<li>cAdvisor + influxDB + grafana</li>\n<li>collectd + influxDB + grafana</li>\n<li>Prometheus</li>\n<li>Cloud Insight</li>\n<li>Graphite</li>\n<li>Zabbix</li>\n<li>Fluentd</li>\n<li>heapster (k8s sub-project)</li>\n</ul>\n<h1 id=\"2-Zabbix\"><a href=\"#2-Zabbix\" class=\"headerlink\" title=\"2. Zabbix\"></a>2. Zabbix</h1><div class=\"note info\"><p>Zabbix 是由 Alexei Vladishev 开发的一种网络监视、管理系统，基于 Server-Client 架构。可用于监视各种网络服务、服务器和网络机器等状态。</p>\n<p><a href=\"https://github.com/monitoringartist/zabbix-docker-monitoring\" target=\"_blank\" rel=\"external\">Ref: Zabbix Docker Monitoring</a></p>\n</div>\n<h2 id=\"2-1-What-to-supervise\"><a href=\"#2-1-What-to-supervise\" class=\"headerlink\" title=\"2.1 What to supervise\"></a>2.1 What to supervise</h2><ol>\n<li>Available CPU</li>\n<li>MEM</li>\n<li>blkio</li>\n<li>net container metrics</li>\n<li>containers config details: ip address, host name, etc.</li>\n</ol>\n<h2 id=\"2-2-Zabbix-Architecture\"><a href=\"#2-2-Zabbix-Architecture\" class=\"headerlink\" title=\"2.2 Zabbix Architecture\"></a>2.2 Zabbix Architecture</h2><p><img src=\"/uploads/0002-archi-zabbix.png\" alt=\"Zabbix Architecture\"></p>\n<h2 id=\"2-3-Deployment\"><a href=\"#2-3-Deployment\" class=\"headerlink\" title=\"2.3 Deployment\"></a>2.3 Deployment</h2><h3 id=\"2-3-1-Create-Data-volume\"><a href=\"#2-3-1-Create-Data-volume\" class=\"headerlink\" title=\"2.3.1 Create Data volume\"></a>2.3.1 Create Data volume</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -d -v /var/lib/mysql --name zabbix-db-storage busybox:latest</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-2-Start-Maria-DB-for-Zabbix\"><a href=\"#2-3-2-Start-Maria-DB-for-Zabbix\" class=\"headerlink\" title=\"2.3.2 Start Maria DB for Zabbix\"></a>2.3.2 Start Maria DB for Zabbix</h3><div class=\"note info\"><p>default 1GB innodb_buffer_pool_size is used </p>\n</div>\n\nundefined\n\n### 2.3.3 Start Zabbix linked to started DB\n\nundefined\n\n### 2.3.4 Verify Login\n\n![Zabbix Login](0002-zabbix-login.png)\n\nNormally we can see this page on http://<ip address=\"\">:8888 now, and the login information as follows:\n\n<div class=\"note success\"><p>Username: admin<br>Password: zabbix</p>\n</div>\n<h3 id=\"2-3-5-Get-Server-done-with-docker-compose\"><a href=\"#2-3-5-Get-Server-done-with-docker-compose\" class=\"headerlink\" title=\"2.3.5 Get Server done with docker-compose\"></a>2.3.5 Get Server done with docker-compose</h3><p>To automatise the listing process we created a docker-compose.yml:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'2'</span></div><div class=\"line\"><span class=\"attr\">services:</span></div><div class=\"line\"><span class=\"attr\">  zabbix-server:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">monitoringartist/zabbix-xxl:latest</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix</span></div><div class=\"line\"><span class=\"attr\">    networks:</span></div><div class=\"line\"><span class=\"attr\">      zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">        ipv4_address:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.10</span></div><div class=\"line\"><span class=\"attr\">    environment:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBHost=10.0.78.9</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBUser=zabbix</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBPassword=zabbix</span></div><div class=\"line\"><span class=\"attr\">    depends_on:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/localtime:/etc/localtime</span></div><div class=\"line\"><span class=\"attr\">    ports:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8888</span><span class=\"string\">:80</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">10051</span><span class=\"string\">:10051</span></div><div class=\"line\"><span class=\"attr\">  zabbix-db:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">monitoringartist/zabbix-db-mariadb</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix-db</span></div><div class=\"line\"><span class=\"attr\">    volumes_from:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    depends_on:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    environment:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">MARIADB_USER=zabbix</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">MARIADB_PASS=zabbix</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/backups:/backups</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/localtime:/etc/localtime</span></div><div class=\"line\"><span class=\"attr\">    networks:</span></div><div class=\"line\"><span class=\"attr\">      zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">        ipv4_address:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"attr\">  zabbix-db-storage:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"attr\">busybox:latest</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/var/lib/mysql</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">networks:</span></div><div class=\"line\"><span class=\"attr\">  zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">    driver:</span> <span class=\"string\">bridge</span></div><div class=\"line\"><span class=\"attr\">    ipam:</span></div><div class=\"line\"><span class=\"attr\">      driver:</span> <span class=\"string\">default</span></div><div class=\"line\"><span class=\"attr\">      config:</span></div><div class=\"line\"><span class=\"attr\">        - subnet:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.0</span><span class=\"string\">/24</span></div><div class=\"line\"><span class=\"attr\">          gateway:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#docker-compose.yml</span></div></pre></td></tr></table></figure>\n<p>###2.3.6 Other functions of Server side</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Backup of DB Zabbix - configuration data only, no item history/trends</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> \\</div><div class=\"line\">    -ti zabbix-db \\</div><div class=\"line\">    /zabbix-backup/zabbix-mariadb-dump -u zabbix -p my_password -o /backups</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Full backup of Zabbix DB</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> \\</div><div class=\"line\">    -ti zabbix-db \\</div><div class=\"line\">    bash -c <span class=\"string\">\"\\</span></div><div class=\"line\">    mysqldump -u zabbix -pmy_password zabbix | \\</div><div class=\"line\">    bzip2 -cq9 &gt; /backups/zabbix_db_dump_<span class=\"variable\">$(date +%Y-%m-%d-%H.%M.%S)</span>.sql.bz2\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Restore Zabbix DB</span></div><div class=\"line\"><span class=\"comment\"># remove zabbix server container</span></div><div class=\"line\">docker rm -f zabbix</div><div class=\"line\"><span class=\"comment\"># restore data from dump (all current data will be dropped!!!)</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> -i zabbix-db sh -c <span class=\"string\">'bunzip2 -dc /backups/zabbix_db_dump_2016-05-25-02.57.46.sql.bz2 \\</span></div><div class=\"line\"> | mysql -uzabbix -p --password=my_password zabbix'</div><div class=\"line\"><span class=\"comment\"># run zabbix server again</span></div><div class=\"line\">docker run ...</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-6-Zabbix-Agent\"><a href=\"#2-3-6-Zabbix-Agent\" class=\"headerlink\" title=\"2.3.6 Zabbix Agent\"></a>2.3.6 Zabbix Agent</h3><p>This figure show how it works:</p>\n<p><img src=\"/uploads/0002-dockbix-agent-xxl-schema.png\" alt=\"Zabbix Dockbix agent\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run \\</div><div class=\"line\">  --name=dockbix-agent-xxl \\</div><div class=\"line\">  --net=host \\</div><div class=\"line\">  --privileged \\</div><div class=\"line\">  -v /:/rootfs \\</div><div class=\"line\">  -v /var/run:/var/run \\</div><div class=\"line\">  --restart unless-stopped \\</div><div class=\"line\">  -e <span class=\"string\">\"ZA_Server=10.9.41.131\"</span> \\</div><div class=\"line\">  -e <span class=\"string\">\"ZA_ServerActive=10.9.41.131\"</span> \\</div><div class=\"line\">  -d monitoringartist/dockbix-agent-xxl-limited:latest</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-7-Discovery\"><a href=\"#2-3-7-Discovery\" class=\"headerlink\" title=\"2.3.7 Discovery\"></a>2.3.7 Discovery</h3><p><img src=\"/uploads/0002-zabbix-discovery.png\" alt=\"Zabbix Server discovery\"></p>\n<p>Then:<br><img src=\"/uploads/0002-group-1.png\" alt=\"\"><br><img src=\"/uploads/0002-group-2.png\" alt=\"\"></p>\n</ip>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-Complex-Solutions-For-Monitoring\"><a href=\"#1-Complex-Solutions-For-Monitoring\" class=\"headerlink\" title=\"1. Complex Solutions For Monitoring\"></a>1. Complex Solutions For Monitoring</h1><p>Till now I have collected the following solutions:</p>\n<ul>\n<li>cAdvisor + influxDB + grafana</li>\n<li>collectd + influxDB + grafana</li>\n<li>Prometheus</li>\n<li>Cloud Insight</li>\n<li>Graphite</li>\n<li>Zabbix</li>\n<li>Fluentd</li>\n<li>heapster (k8s sub-project)</li>\n</ul>\n<h1 id=\"2-Zabbix\"><a href=\"#2-Zabbix\" class=\"headerlink\" title=\"2. Zabbix\"></a>2. Zabbix</h1><div class=\"note info\"><p>Zabbix 是由 Alexei Vladishev 开发的一种网络监视、管理系统，基于 Server-Client 架构。可用于监视各种网络服务、服务器和网络机器等状态。</p>\n<p><a href=\"https://github.com/monitoringartist/zabbix-docker-monitoring\" target=\"_blank\" rel=\"external\">Ref: Zabbix Docker Monitoring</a></p>\n</div>\n<h2 id=\"2-1-What-to-supervise\"><a href=\"#2-1-What-to-supervise\" class=\"headerlink\" title=\"2.1 What to supervise\"></a>2.1 What to supervise</h2><ol>\n<li>Available CPU</li>\n<li>MEM</li>\n<li>blkio</li>\n<li>net container metrics</li>\n<li>containers config details: ip address, host name, etc.</li>\n</ol>\n<h2 id=\"2-2-Zabbix-Architecture\"><a href=\"#2-2-Zabbix-Architecture\" class=\"headerlink\" title=\"2.2 Zabbix Architecture\"></a>2.2 Zabbix Architecture</h2><p><img src=\"/uploads/0002-archi-zabbix.png\" alt=\"Zabbix Architecture\"></p>\n<h2 id=\"2-3-Deployment\"><a href=\"#2-3-Deployment\" class=\"headerlink\" title=\"2.3 Deployment\"></a>2.3 Deployment</h2><h3 id=\"2-3-1-Create-Data-volume\"><a href=\"#2-3-1-Create-Data-volume\" class=\"headerlink\" title=\"2.3.1 Create Data volume\"></a>2.3.1 Create Data volume</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -d -v /var/lib/mysql --name zabbix-db-storage busybox:latest</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-2-Start-Maria-DB-for-Zabbix\"><a href=\"#2-3-2-Start-Maria-DB-for-Zabbix\" class=\"headerlink\" title=\"2.3.2 Start Maria DB for Zabbix\"></a>2.3.2 Start Maria DB for Zabbix</h3><div class=\"note info\"><p>default 1GB innodb_buffer_pool_size is used </p>\n</div>\n\nundefined\n\n### 2.3.3 Start Zabbix linked to started DB\n\nundefined\n\n### 2.3.4 Verify Login\n\n![Zabbix Login](0002-zabbix-login.png)\n\nNormally we can see this page on http://<ip address=\"\">:8888 now, and the login information as follows:\n\n<div class=\"note success\"><p>Username: admin<br>Password: zabbix</p>\n</div>\n<h3 id=\"2-3-5-Get-Server-done-with-docker-compose\"><a href=\"#2-3-5-Get-Server-done-with-docker-compose\" class=\"headerlink\" title=\"2.3.5 Get Server done with docker-compose\"></a>2.3.5 Get Server done with docker-compose</h3><p>To automatise the listing process we created a docker-compose.yml:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'2'</span></div><div class=\"line\"><span class=\"attr\">services:</span></div><div class=\"line\"><span class=\"attr\">  zabbix-server:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">monitoringartist/zabbix-xxl:latest</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix</span></div><div class=\"line\"><span class=\"attr\">    networks:</span></div><div class=\"line\"><span class=\"attr\">      zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">        ipv4_address:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.10</span></div><div class=\"line\"><span class=\"attr\">    environment:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBHost=10.0.78.9</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBUser=zabbix</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">ZS_DBPassword=zabbix</span></div><div class=\"line\"><span class=\"attr\">    depends_on:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/localtime:/etc/localtime</span></div><div class=\"line\"><span class=\"attr\">    ports:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8888</span><span class=\"string\">:80</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">10051</span><span class=\"string\">:10051</span></div><div class=\"line\"><span class=\"attr\">  zabbix-db:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">monitoringartist/zabbix-db-mariadb</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix-db</span></div><div class=\"line\"><span class=\"attr\">    volumes_from:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    depends_on:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    environment:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">MARIADB_USER=zabbix</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">MARIADB_PASS=zabbix</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/backups:/backups</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/localtime:/etc/localtime</span></div><div class=\"line\"><span class=\"attr\">    networks:</span></div><div class=\"line\"><span class=\"attr\">      zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">        ipv4_address:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"attr\">  zabbix-db-storage:</span></div><div class=\"line\"><span class=\"attr\">    image:</span> <span class=\"attr\">busybox:latest</span></div><div class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">zabbix-db-storage</span></div><div class=\"line\"><span class=\"attr\">    volumes:</span></div><div class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/var/lib/mysql</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">networks:</span></div><div class=\"line\"><span class=\"attr\">  zabbix_net:</span></div><div class=\"line\"><span class=\"attr\">    driver:</span> <span class=\"string\">bridge</span></div><div class=\"line\"><span class=\"attr\">    ipam:</span></div><div class=\"line\"><span class=\"attr\">      driver:</span> <span class=\"string\">default</span></div><div class=\"line\"><span class=\"attr\">      config:</span></div><div class=\"line\"><span class=\"attr\">        - subnet:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.0</span><span class=\"string\">/24</span></div><div class=\"line\"><span class=\"attr\">          gateway:</span> <span class=\"number\">10.0</span><span class=\"number\">.78</span><span class=\"number\">.1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#docker-compose.yml</span></div></pre></td></tr></table></figure>\n<p>###2.3.6 Other functions of Server side</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Backup of DB Zabbix - configuration data only, no item history/trends</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> \\</div><div class=\"line\">    -ti zabbix-db \\</div><div class=\"line\">    /zabbix-backup/zabbix-mariadb-dump -u zabbix -p my_password -o /backups</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Full backup of Zabbix DB</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> \\</div><div class=\"line\">    -ti zabbix-db \\</div><div class=\"line\">    bash -c <span class=\"string\">\"\\</span></div><div class=\"line\">    mysqldump -u zabbix -pmy_password zabbix | \\</div><div class=\"line\">    bzip2 -cq9 &gt; /backups/zabbix_db_dump_<span class=\"variable\">$(date +%Y-%m-%d-%H.%M.%S)</span>.sql.bz2\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Restore Zabbix DB</span></div><div class=\"line\"><span class=\"comment\"># remove zabbix server container</span></div><div class=\"line\">docker rm -f zabbix</div><div class=\"line\"><span class=\"comment\"># restore data from dump (all current data will be dropped!!!)</span></div><div class=\"line\">docker <span class=\"built_in\">exec</span> -i zabbix-db sh -c <span class=\"string\">'bunzip2 -dc /backups/zabbix_db_dump_2016-05-25-02.57.46.sql.bz2 \\</span></div><div class=\"line\"> | mysql -uzabbix -p --password=my_password zabbix'</div><div class=\"line\"><span class=\"comment\"># run zabbix server again</span></div><div class=\"line\">docker run ...</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-6-Zabbix-Agent\"><a href=\"#2-3-6-Zabbix-Agent\" class=\"headerlink\" title=\"2.3.6 Zabbix Agent\"></a>2.3.6 Zabbix Agent</h3><p>This figure show how it works:</p>\n<p><img src=\"/uploads/0002-dockbix-agent-xxl-schema.png\" alt=\"Zabbix Dockbix agent\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run \\</div><div class=\"line\">  --name=dockbix-agent-xxl \\</div><div class=\"line\">  --net=host \\</div><div class=\"line\">  --privileged \\</div><div class=\"line\">  -v /:/rootfs \\</div><div class=\"line\">  -v /var/run:/var/run \\</div><div class=\"line\">  --restart unless-stopped \\</div><div class=\"line\">  -e <span class=\"string\">\"ZA_Server=10.9.41.131\"</span> \\</div><div class=\"line\">  -e <span class=\"string\">\"ZA_ServerActive=10.9.41.131\"</span> \\</div><div class=\"line\">  -d monitoringartist/dockbix-agent-xxl-limited:latest</div></pre></td></tr></table></figure>\n<h3 id=\"2-3-7-Discovery\"><a href=\"#2-3-7-Discovery\" class=\"headerlink\" title=\"2.3.7 Discovery\"></a>2.3.7 Discovery</h3><p><img src=\"/uploads/0002-zabbix-discovery.png\" alt=\"Zabbix Server discovery\"></p>\n<p>Then:<br><img src=\"/uploads/0002-group-1.png\" alt=\"\"><br><img src=\"/uploads/0002-group-2.png\" alt=\"\"></p>\n</ip>"},{"title":"A Try on Dockprom","_content":"\n# Architecture\n\n![Archi](/uploads/0003-archi-prometheus-on-docker.png)\n\n# Running Tutorial\n\n{% note info %}\n\nhttps://github.com/stefanprodan/dockprom\nhttps://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/\n {% endnote %}\n\n\n\nhttp://blog.opskumu.com/docker-io-limit.html\nhttps://kknews.cc/tech/2aoxamg.html\n","source":"_posts/0003PrometheusSuite.md","raw":"---\n  title: A Try on Dockprom\n  categories: Supervisor\n  tags:\n    - docker\n    - supervisor\n    - monitoring\n    - prometheus\n    - grafana\n---\n\n# Architecture\n\n![Archi](/uploads/0003-archi-prometheus-on-docker.png)\n\n# Running Tutorial\n\n{% note info %}\n\nhttps://github.com/stefanprodan/dockprom\nhttps://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/\n {% endnote %}\n\n\n\nhttp://blog.opskumu.com/docker-io-limit.html\nhttps://kknews.cc/tech/2aoxamg.html\n","slug":"0003PrometheusSuite","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0as0006c5cc9tb7a1nv","content":"<h1 id=\"Architecture\"><a href=\"#Architecture\" class=\"headerlink\" title=\"Architecture\"></a>Architecture</h1><p><img src=\"/uploads/0003-archi-prometheus-on-docker.png\" alt=\"Archi\"></p>\n<h1 id=\"Running-Tutorial\"><a href=\"#Running-Tutorial\" class=\"headerlink\" title=\"Running Tutorial\"></a>Running Tutorial</h1><div class=\"note info\"><p><a href=\"https://github.com/stefanprodan/dockprom\" target=\"_blank\" rel=\"external\">https://github.com/stefanprodan/dockprom</a><br><a href=\"https://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/\" target=\"_blank\" rel=\"external\">https://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/</a></p>\n</div>\n<p><a href=\"http://blog.opskumu.com/docker-io-limit.html\" target=\"_blank\" rel=\"external\">http://blog.opskumu.com/docker-io-limit.html</a><br><a href=\"https://kknews.cc/tech/2aoxamg.html\" target=\"_blank\" rel=\"external\">https://kknews.cc/tech/2aoxamg.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Architecture\"><a href=\"#Architecture\" class=\"headerlink\" title=\"Architecture\"></a>Architecture</h1><p><img src=\"/uploads/0003-archi-prometheus-on-docker.png\" alt=\"Archi\"></p>\n<h1 id=\"Running-Tutorial\"><a href=\"#Running-Tutorial\" class=\"headerlink\" title=\"Running Tutorial\"></a>Running Tutorial</h1><div class=\"note info\"><p><a href=\"https://github.com/stefanprodan/dockprom\" target=\"_blank\" rel=\"external\">https://github.com/stefanprodan/dockprom</a><br><a href=\"https://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/\" target=\"_blank\" rel=\"external\">https://stefanprodan.com/2016/a-monitoring-solution-for-docker-hosts-containers-and-containerized-services/</a></p>\n</div>\n<p><a href=\"http://blog.opskumu.com/docker-io-limit.html\" target=\"_blank\" rel=\"external\">http://blog.opskumu.com/docker-io-limit.html</a><br><a href=\"https://kknews.cc/tech/2aoxamg.html\" target=\"_blank\" rel=\"external\">https://kknews.cc/tech/2aoxamg.html</a></p>\n"},{"title":"What is Namespace","_content":"\n# 1 Linux Namespace\n\n<a href=\"https://lwn.net/Articles/531114/\">Ref: Namespaces in operation</a>\n\nTo be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of *LXC* is **container**. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:\n\n | Namespace | Parameter | isolated Content |\n |:----------------|:----------------|:--------:|\n | pid namespace | CLONE_NEWPID | Process ID |\n | net namespace | CLONE_NEWNET | Network, port |\n | ipc namespace | CLONE_NEWIPC | 信号量, 消息队列, 共享内存 |\n | mnt namespace | CLONE_NEWNS | file system Mount |\n | uts namespace | CLONE_NEWUTS | host and DNS |\n | user namespace | CLONE_NEWUSER | User and group |\n\nIn fact the purpose of **namespace** is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.\n\n# 2 API of namespace\n\nThe API of namespace includes:\n\n- clone()\n- setns()\n- unshare()\n- some files in */proc*\n\nTo make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.\n\n## 2.1 What is clone() looked like\n\n~~~cpp\nint clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);\n~~~\n\n- child_func : indicate where is the main function of child function\n- child_stack : the stack which will be used by a child function.\n- flags: which CLONE_* are used?\n- args : the user's parameters\n\n\n## 2.2 /proc/[pid]/ns\n\n~~~bash\nroot@mo-e33e22ea6:/proc/57/ns# ls\ncgroup  ipc  mnt  net  pid  user  uts\n\nroot@mo-e33e22ea6:/proc/57/ns# ls -l\ntotal 0\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -> cgroup:[4026531835]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -> ipc:[4026531839]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -> mnt:[4026531840]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 net -> net:[4026531957]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -> pid:[4026531836]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 user -> user:[4026531837]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -> uts:[4026531838]\n~~~\n\nIf two pids pointed to the same series number, means that they are in the same namespace.\n\n一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?\n\n~~~bash\ntouch ~/uts\nmount --bind /proc/27514/ns/uts ~/uts\n~~~\n\n## 2.3 Join a namespace with setns()\n\nFrom 2.2, we can see that with **mount** operation, we can keep a namespace living. We can join this living namespace with function **setns()**\n\n~~~cpp\nint setns(int fd, int nstype);\n~~~\n\n- int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns\n- int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.\n\n~~~go\nfd = open(argv[1], O_RDONLY);   /* 获取namespace文件描述符 */\nsetns(fd, 0);                   /* 加入新的namespace */\nexecvp(argv[2], &argv[2]);      /* 执行程序 */\n~~~\n\nexecvp() can execute the command from user. Assume the programme has a name of setns :\n\n~~~bash\n./setns ~/uts /bin/bash\n~~~\n\nThis will allow us running bash commands in the namespace indicated.\n\n## 2.4 Using unshare()\n\n~~~cpp\nint unshare(int flags);\n~~~\n不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a **unshare** command, it is originated from the unshare() function.\n\n## 2.5 fork()\n\n这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.\n\nfork的特点是:*被调用一次, 但是返回两次*. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:\n\n1. 在父进程中,fork返回子进程的进程ID\n2. 子进程之中, fork返回0\n3. 如果出现错误, fork返回一个负值.\n\n~~~cpp\n#include <unistd.h>\n#include <stdio.h>\nint main (){\n    pid_t fpid; //fpid表示fork函数返回的值\n    int count=0;\n    fpid=fork();\n    if (fpid < 0)printf(\"error in fork!\");\n    else if (fpid == 0) {\n        printf(\"I am child. Process id is %d/n\",getpid());\n    }\n    else {\n        printf(\"i am parent. Process id is %d/n\",getpid());\n    }\n    return 0;\n}\n\nroot@local:~# gcc -Wall fork_example.c && ./a.out\nI am parent. Process id is 28365\nI am child. Process id is 28366\n~~~\n\n\n# 3 Six types Namespace\n\n## 3.1 UTS Unix Time-sharing System Namespace\n\n\n~~~cpp\n#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <stdio.h>\n#include <sched.h>\n#include <signal.h>\n#include <unistd.h>\n\n#define STACK_SIZE (1024 * 1024)\n\nstatic char child_stack[STACK_SIZE];\nchar* const child_args[] = {\n        \"/bin/bash\",\n        NULL\n};\n\nint child_main(void* args) {\n        printf(\"In the Child Process!\\n\");\n        sethostname(\"Changed Namespace\",12);\n        execv(child_args[0], child_args);\n        return 1;\n}\n\nint main() {\n        printf(\"In the parent Process, BEGIN! \\n\");\n        int child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, NULL);\n        waitpid(child_pid, NULL, 0);\n        printf(\"Over\\n\");\n        return 0;\n}\n~~~\n\n~~~bash\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# gcc -Wall uts.c -o utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ls\nuts.c  utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ./utsNamespace\nIn the parent Process, BEGIN!\nIn the Child Process!\nroot@Changed Name:/home/i340738/NameSpaceLearning# exit\nexit\nOver\n~~~\n\n通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.\n\n# Reference\n\n## Links :\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\">Namespace Isolation</a>\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\">Cgroup resource isolation</a>\n\n## Code\n\n### Join\n\n~~~cpp\n/* ns_exec.c\n\n   Copyright 2013, Michael Kerrisk\n   Licensed under GNU General Public License v2 or later\n\n   Join a namespace and execute a command in the namespace\n*/\n#define _GNU_SOURCE\n#include <fcntl.h>\n#include <sched.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n/* A simple error-handling function: print an error message based\n   on the value in 'errno' and terminate the calling process */\n\n#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\\n                        } while (0)\n\nint main(int argc, char *argv[])\n{\n    int fd;\n\n    if (argc < 3) {\n        fprintf(stderr, \"%s /proc/PID/ns/FILE cmd [arg...]\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    fd = open(argv[1], O_RDONLY);   /* Get descriptor for namespace */\n    if (fd == -1)\n        errExit(\"open\");\n\n    if (setns(fd, 0) == -1)         /* Join that namespace */\n        errExit(\"setns\");\n\n    execvp(argv[2], &argv[2]);      /* Execute a command in namespace */\n    errExit(\"execvp\");\n}\n~~~\n","source":"_posts/0004DockerEssential.md","raw":"---\n  title: What is Namespace\n  categories: Docker\n  tags:\n    - docker\n    - supervisor\n    - monitoring\n---\n\n# 1 Linux Namespace\n\n<a href=\"https://lwn.net/Articles/531114/\">Ref: Namespaces in operation</a>\n\nTo be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of *LXC* is **container**. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:\n\n | Namespace | Parameter | isolated Content |\n |:----------------|:----------------|:--------:|\n | pid namespace | CLONE_NEWPID | Process ID |\n | net namespace | CLONE_NEWNET | Network, port |\n | ipc namespace | CLONE_NEWIPC | 信号量, 消息队列, 共享内存 |\n | mnt namespace | CLONE_NEWNS | file system Mount |\n | uts namespace | CLONE_NEWUTS | host and DNS |\n | user namespace | CLONE_NEWUSER | User and group |\n\nIn fact the purpose of **namespace** is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.\n\n# 2 API of namespace\n\nThe API of namespace includes:\n\n- clone()\n- setns()\n- unshare()\n- some files in */proc*\n\nTo make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.\n\n## 2.1 What is clone() looked like\n\n~~~cpp\nint clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);\n~~~\n\n- child_func : indicate where is the main function of child function\n- child_stack : the stack which will be used by a child function.\n- flags: which CLONE_* are used?\n- args : the user's parameters\n\n\n## 2.2 /proc/[pid]/ns\n\n~~~bash\nroot@mo-e33e22ea6:/proc/57/ns# ls\ncgroup  ipc  mnt  net  pid  user  uts\n\nroot@mo-e33e22ea6:/proc/57/ns# ls -l\ntotal 0\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -> cgroup:[4026531835]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -> ipc:[4026531839]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -> mnt:[4026531840]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 net -> net:[4026531957]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -> pid:[4026531836]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 user -> user:[4026531837]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -> uts:[4026531838]\n~~~\n\nIf two pids pointed to the same series number, means that they are in the same namespace.\n\n一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?\n\n~~~bash\ntouch ~/uts\nmount --bind /proc/27514/ns/uts ~/uts\n~~~\n\n## 2.3 Join a namespace with setns()\n\nFrom 2.2, we can see that with **mount** operation, we can keep a namespace living. We can join this living namespace with function **setns()**\n\n~~~cpp\nint setns(int fd, int nstype);\n~~~\n\n- int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns\n- int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.\n\n~~~go\nfd = open(argv[1], O_RDONLY);   /* 获取namespace文件描述符 */\nsetns(fd, 0);                   /* 加入新的namespace */\nexecvp(argv[2], &argv[2]);      /* 执行程序 */\n~~~\n\nexecvp() can execute the command from user. Assume the programme has a name of setns :\n\n~~~bash\n./setns ~/uts /bin/bash\n~~~\n\nThis will allow us running bash commands in the namespace indicated.\n\n## 2.4 Using unshare()\n\n~~~cpp\nint unshare(int flags);\n~~~\n不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a **unshare** command, it is originated from the unshare() function.\n\n## 2.5 fork()\n\n这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.\n\nfork的特点是:*被调用一次, 但是返回两次*. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:\n\n1. 在父进程中,fork返回子进程的进程ID\n2. 子进程之中, fork返回0\n3. 如果出现错误, fork返回一个负值.\n\n~~~cpp\n#include <unistd.h>\n#include <stdio.h>\nint main (){\n    pid_t fpid; //fpid表示fork函数返回的值\n    int count=0;\n    fpid=fork();\n    if (fpid < 0)printf(\"error in fork!\");\n    else if (fpid == 0) {\n        printf(\"I am child. Process id is %d/n\",getpid());\n    }\n    else {\n        printf(\"i am parent. Process id is %d/n\",getpid());\n    }\n    return 0;\n}\n\nroot@local:~# gcc -Wall fork_example.c && ./a.out\nI am parent. Process id is 28365\nI am child. Process id is 28366\n~~~\n\n\n# 3 Six types Namespace\n\n## 3.1 UTS Unix Time-sharing System Namespace\n\n\n~~~cpp\n#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <stdio.h>\n#include <sched.h>\n#include <signal.h>\n#include <unistd.h>\n\n#define STACK_SIZE (1024 * 1024)\n\nstatic char child_stack[STACK_SIZE];\nchar* const child_args[] = {\n        \"/bin/bash\",\n        NULL\n};\n\nint child_main(void* args) {\n        printf(\"In the Child Process!\\n\");\n        sethostname(\"Changed Namespace\",12);\n        execv(child_args[0], child_args);\n        return 1;\n}\n\nint main() {\n        printf(\"In the parent Process, BEGIN! \\n\");\n        int child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, NULL);\n        waitpid(child_pid, NULL, 0);\n        printf(\"Over\\n\");\n        return 0;\n}\n~~~\n\n~~~bash\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# gcc -Wall uts.c -o utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ls\nuts.c  utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ./utsNamespace\nIn the parent Process, BEGIN!\nIn the Child Process!\nroot@Changed Name:/home/i340738/NameSpaceLearning# exit\nexit\nOver\n~~~\n\n通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.\n\n# Reference\n\n## Links :\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\">Namespace Isolation</a>\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\">Cgroup resource isolation</a>\n\n## Code\n\n### Join\n\n~~~cpp\n/* ns_exec.c\n\n   Copyright 2013, Michael Kerrisk\n   Licensed under GNU General Public License v2 or later\n\n   Join a namespace and execute a command in the namespace\n*/\n#define _GNU_SOURCE\n#include <fcntl.h>\n#include <sched.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n/* A simple error-handling function: print an error message based\n   on the value in 'errno' and terminate the calling process */\n\n#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\\n                        } while (0)\n\nint main(int argc, char *argv[])\n{\n    int fd;\n\n    if (argc < 3) {\n        fprintf(stderr, \"%s /proc/PID/ns/FILE cmd [arg...]\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    fd = open(argv[1], O_RDONLY);   /* Get descriptor for namespace */\n    if (fd == -1)\n        errExit(\"open\");\n\n    if (setns(fd, 0) == -1)         /* Join that namespace */\n        errExit(\"setns\");\n\n    execvp(argv[2], &argv[2]);      /* Execute a command in namespace */\n    errExit(\"execvp\");\n}\n~~~\n","slug":"0004DockerEssential","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0av0007c5cce8ydb5jo","content":"<h1 id=\"1-Linux-Namespace\"><a href=\"#1-Linux-Namespace\" class=\"headerlink\" title=\"1 Linux Namespace\"></a>1 Linux Namespace</h1><p><a href=\"https://lwn.net/Articles/531114/\" target=\"_blank\" rel=\"external\">Ref: Namespaces in operation</a></p>\n<p>To be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of <em>LXC</em> is <strong>container</strong>. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Namespace</th>\n<th style=\"text-align:left\">Parameter</th>\n<th style=\"text-align:center\">isolated Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pid namespace</td>\n<td style=\"text-align:left\">CLONE_NEWPID</td>\n<td style=\"text-align:center\">Process ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">net namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNET</td>\n<td style=\"text-align:center\">Network, port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ipc namespace</td>\n<td style=\"text-align:left\">CLONE_NEWIPC</td>\n<td style=\"text-align:center\">信号量, 消息队列, 共享内存</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNS</td>\n<td style=\"text-align:center\">file system Mount</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uts namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUTS</td>\n<td style=\"text-align:center\">host and DNS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUSER</td>\n<td style=\"text-align:center\">User and group</td>\n</tr>\n</tbody>\n</table>\n<p>In fact the purpose of <strong>namespace</strong> is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.</p>\n<h1 id=\"2-API-of-namespace\"><a href=\"#2-API-of-namespace\" class=\"headerlink\" title=\"2 API of namespace\"></a>2 API of namespace</h1><p>The API of namespace includes:</p>\n<ul>\n<li>clone()</li>\n<li>setns()</li>\n<li>unshare()</li>\n<li>some files in <em>/proc</em></li>\n</ul>\n<p>To make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.</p>\n<h2 id=\"2-1-What-is-clone-looked-like\"><a href=\"#2-1-What-is-clone-looked-like\" class=\"headerlink\" title=\"2.1 What is clone() looked like\"></a>2.1 What is clone() looked like</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">int clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);</div></pre></td></tr></table></figure>\n<ul>\n<li>child_func : indicate where is the main function of child function</li>\n<li>child_stack : the stack which will be used by a child function.</li>\n<li>flags: which CLONE_* are used?</li>\n<li>args : the user’s parameters</li>\n</ul>\n<h2 id=\"2-2-proc-pid-ns\"><a href=\"#2-2-proc-pid-ns\" class=\"headerlink\" title=\"2.2 /proc/[pid]/ns\"></a>2.2 /proc/[pid]/ns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls</span></div><div class=\"line\">cgroup  ipc  mnt  net  pid  user  uts</div><div class=\"line\"></div><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls -l</span></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -&gt; cgroup:[4026531835]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -&gt; ipc:[4026531839]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -&gt; mnt:[4026531840]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 net -&gt; net:[4026531957]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -&gt; pid:[4026531836]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 user -&gt; user:[4026531837]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -&gt; uts:[4026531838]</div></pre></td></tr></table></figure>\n<p>If two pids pointed to the same series number, means that they are in the same namespace.</p>\n<p>一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch ~/uts</div><div class=\"line\">mount --<span class=\"built_in\">bind</span> /proc/27514/ns/uts ~/uts</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-Join-a-namespace-with-setns\"><a href=\"#2-3-Join-a-namespace-with-setns\" class=\"headerlink\" title=\"2.3 Join a namespace with setns()\"></a>2.3 Join a namespace with setns()</h2><p>From 2.2, we can see that with <strong>mount</strong> operation, we can keep a namespace living. We can join this living namespace with function <strong>setns()</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">setns</span><span class=\"params\">(<span class=\"keyword\">int</span> fd, <span class=\"keyword\">int</span> nstype)</span></span>;</div></pre></td></tr></table></figure>\n<ul>\n<li>int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns</li>\n<li>int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* 获取namespace文件描述符 */</span></div><div class=\"line\">setns(fd, <span class=\"number\">0</span>);                   <span class=\"comment\">/* 加入新的namespace */</span></div><div class=\"line\">execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* 执行程序 */</span></div></pre></td></tr></table></figure>\n<p>execvp() can execute the command from user. Assume the programme has a name of setns :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./setns ~/uts /bin/bash</div></pre></td></tr></table></figure>\n<p>This will allow us running bash commands in the namespace indicated.</p>\n<h2 id=\"2-4-Using-unshare\"><a href=\"#2-4-Using-unshare\" class=\"headerlink\" title=\"2.4 Using unshare()\"></a>2.4 Using unshare()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">unshare</span><span class=\"params\">(<span class=\"keyword\">int</span> flags)</span></span>;</div></pre></td></tr></table></figure>\n<p>不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a <strong>unshare</strong> command, it is originated from the unshare() function.</p>\n<h2 id=\"2-5-fork\"><a href=\"#2-5-fork\" class=\"headerlink\" title=\"2.5 fork()\"></a>2.5 fork()</h2><p>这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.</p>\n<p>fork的特点是:<em>被调用一次, 但是返回两次</em>. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:</p>\n<ol>\n<li>在父进程中,fork返回子进程的进程ID</li>\n<li>子进程之中, fork返回0</li>\n<li>如果出现错误, fork返回一个负值.</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">pid_t</span> fpid; <span class=\"comment\">//fpid表示fork函数返回的值</span></div><div class=\"line\">    <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</div><div class=\"line\">    fpid=fork();</div><div class=\"line\">    <span class=\"keyword\">if</span> (fpid &lt; <span class=\"number\">0</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">\"error in fork!\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fpid == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"I am child. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i am parent. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">root@local:~<span class=\"meta\"># gcc -Wall fork_example.c &amp;&amp; ./a.out</span></div><div class=\"line\">I am parent. Process id is <span class=\"number\">28365</span></div><div class=\"line\">I am child. Process id is <span class=\"number\">28366</span></div></pre></td></tr></table></figure>\n<h1 id=\"3-Six-types-Namespace\"><a href=\"#3-Six-types-Namespace\" class=\"headerlink\" title=\"3 Six types Namespace\"></a>3 Six types Namespace</h1><h2 id=\"3-1-UTS-Unix-Time-sharing-System-Namespace\"><a href=\"#3-1-UTS-Unix-Time-sharing-System-Namespace\" class=\"headerlink\" title=\"3.1 UTS Unix Time-sharing System Namespace\"></a>3.1 UTS Unix Time-sharing System Namespace</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;signal.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_SIZE (1024 * 1024)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> child_stack[STACK_SIZE];</div><div class=\"line\"><span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> child_args[] = &#123;</div><div class=\"line\">        <span class=\"string\">\"/bin/bash\"</span>,</div><div class=\"line\">        <span class=\"literal\">NULL</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">child_main</span><span class=\"params\">(<span class=\"keyword\">void</span>* args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the Child Process!\\n\"</span>);</div><div class=\"line\">        sethostname(<span class=\"string\">\"Changed Namespace\"</span>,<span class=\"number\">12</span>);</div><div class=\"line\">        execv(child_args[<span class=\"number\">0</span>], child_args);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the parent Process, BEGIN! \\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, <span class=\"literal\">NULL</span>);</div><div class=\"line\">        waitpid(child_pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Over\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># gcc -Wall uts.c -o utsNamespace</span></div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ls</span></div><div class=\"line\">uts.c  utsNamespace</div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ./utsNamespace</span></div><div class=\"line\">In the parent Process, BEGIN!</div><div class=\"line\">In the Child Process!</div><div class=\"line\">root@Changed Name:/home/i340738/NameSpaceLearning<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">exit</span></div><div class=\"line\">Over</div></pre></td></tr></table></figure>\n<p>通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Links\"><a href=\"#Links\" class=\"headerlink\" title=\"Links :\"></a>Links :</h2><p><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\" target=\"_blank\" rel=\"external\">Namespace Isolation</a><br><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\" target=\"_blank\" rel=\"external\">Cgroup resource isolation</a></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><h3 id=\"Join\"><a href=\"#Join\" class=\"headerlink\" title=\"Join\"></a>Join</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* ns_exec.c</span></div><div class=\"line\"></div><div class=\"line\">   Copyright 2013, Michael Kerrisk</div><div class=\"line\">   Licensed under GNU General Public License v2 or later</div><div class=\"line\"></div><div class=\"line\">   Join a namespace and execute a command in the namespace</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* A simple error-handling function: print an error message based</span></div><div class=\"line\">   on the value in 'errno' and terminate the calling process */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> errExit(msg)    do &#123; perror(msg); exit(EXIT_FAILURE); \\</span></div><div class=\"line\">                        &#125; while (0)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> fd;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (argc &lt; <span class=\"number\">3</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"%s /proc/PID/ns/FILE cmd [arg...]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* Get descriptor for namespace */</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (fd == <span class=\"number\">-1</span>)</div><div class=\"line\">        errExit(<span class=\"string\">\"open\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (setns(fd, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)         <span class=\"comment\">/* Join that namespace */</span></div><div class=\"line\">        errExit(<span class=\"string\">\"setns\"</span>);</div><div class=\"line\"></div><div class=\"line\">    execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* Execute a command in namespace */</span></div><div class=\"line\">    errExit(<span class=\"string\">\"execvp\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-Linux-Namespace\"><a href=\"#1-Linux-Namespace\" class=\"headerlink\" title=\"1 Linux Namespace\"></a>1 Linux Namespace</h1><p><a href=\"https://lwn.net/Articles/531114/\" target=\"_blank\" rel=\"external\">Ref: Namespaces in operation</a></p>\n<p>To be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of <em>LXC</em> is <strong>container</strong>. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Namespace</th>\n<th style=\"text-align:left\">Parameter</th>\n<th style=\"text-align:center\">isolated Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pid namespace</td>\n<td style=\"text-align:left\">CLONE_NEWPID</td>\n<td style=\"text-align:center\">Process ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">net namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNET</td>\n<td style=\"text-align:center\">Network, port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ipc namespace</td>\n<td style=\"text-align:left\">CLONE_NEWIPC</td>\n<td style=\"text-align:center\">信号量, 消息队列, 共享内存</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNS</td>\n<td style=\"text-align:center\">file system Mount</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uts namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUTS</td>\n<td style=\"text-align:center\">host and DNS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUSER</td>\n<td style=\"text-align:center\">User and group</td>\n</tr>\n</tbody>\n</table>\n<p>In fact the purpose of <strong>namespace</strong> is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.</p>\n<h1 id=\"2-API-of-namespace\"><a href=\"#2-API-of-namespace\" class=\"headerlink\" title=\"2 API of namespace\"></a>2 API of namespace</h1><p>The API of namespace includes:</p>\n<ul>\n<li>clone()</li>\n<li>setns()</li>\n<li>unshare()</li>\n<li>some files in <em>/proc</em></li>\n</ul>\n<p>To make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.</p>\n<h2 id=\"2-1-What-is-clone-looked-like\"><a href=\"#2-1-What-is-clone-looked-like\" class=\"headerlink\" title=\"2.1 What is clone() looked like\"></a>2.1 What is clone() looked like</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">int clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);</div></pre></td></tr></table></figure>\n<ul>\n<li>child_func : indicate where is the main function of child function</li>\n<li>child_stack : the stack which will be used by a child function.</li>\n<li>flags: which CLONE_* are used?</li>\n<li>args : the user’s parameters</li>\n</ul>\n<h2 id=\"2-2-proc-pid-ns\"><a href=\"#2-2-proc-pid-ns\" class=\"headerlink\" title=\"2.2 /proc/[pid]/ns\"></a>2.2 /proc/[pid]/ns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls</span></div><div class=\"line\">cgroup  ipc  mnt  net  pid  user  uts</div><div class=\"line\"></div><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls -l</span></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -&gt; cgroup:[4026531835]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -&gt; ipc:[4026531839]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -&gt; mnt:[4026531840]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 net -&gt; net:[4026531957]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -&gt; pid:[4026531836]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 user -&gt; user:[4026531837]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -&gt; uts:[4026531838]</div></pre></td></tr></table></figure>\n<p>If two pids pointed to the same series number, means that they are in the same namespace.</p>\n<p>一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch ~/uts</div><div class=\"line\">mount --<span class=\"built_in\">bind</span> /proc/27514/ns/uts ~/uts</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-Join-a-namespace-with-setns\"><a href=\"#2-3-Join-a-namespace-with-setns\" class=\"headerlink\" title=\"2.3 Join a namespace with setns()\"></a>2.3 Join a namespace with setns()</h2><p>From 2.2, we can see that with <strong>mount</strong> operation, we can keep a namespace living. We can join this living namespace with function <strong>setns()</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">setns</span><span class=\"params\">(<span class=\"keyword\">int</span> fd, <span class=\"keyword\">int</span> nstype)</span></span>;</div></pre></td></tr></table></figure>\n<ul>\n<li>int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns</li>\n<li>int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* 获取namespace文件描述符 */</span></div><div class=\"line\">setns(fd, <span class=\"number\">0</span>);                   <span class=\"comment\">/* 加入新的namespace */</span></div><div class=\"line\">execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* 执行程序 */</span></div></pre></td></tr></table></figure>\n<p>execvp() can execute the command from user. Assume the programme has a name of setns :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./setns ~/uts /bin/bash</div></pre></td></tr></table></figure>\n<p>This will allow us running bash commands in the namespace indicated.</p>\n<h2 id=\"2-4-Using-unshare\"><a href=\"#2-4-Using-unshare\" class=\"headerlink\" title=\"2.4 Using unshare()\"></a>2.4 Using unshare()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">unshare</span><span class=\"params\">(<span class=\"keyword\">int</span> flags)</span></span>;</div></pre></td></tr></table></figure>\n<p>不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a <strong>unshare</strong> command, it is originated from the unshare() function.</p>\n<h2 id=\"2-5-fork\"><a href=\"#2-5-fork\" class=\"headerlink\" title=\"2.5 fork()\"></a>2.5 fork()</h2><p>这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.</p>\n<p>fork的特点是:<em>被调用一次, 但是返回两次</em>. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:</p>\n<ol>\n<li>在父进程中,fork返回子进程的进程ID</li>\n<li>子进程之中, fork返回0</li>\n<li>如果出现错误, fork返回一个负值.</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">pid_t</span> fpid; <span class=\"comment\">//fpid表示fork函数返回的值</span></div><div class=\"line\">    <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</div><div class=\"line\">    fpid=fork();</div><div class=\"line\">    <span class=\"keyword\">if</span> (fpid &lt; <span class=\"number\">0</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">\"error in fork!\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fpid == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"I am child. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i am parent. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">root@local:~<span class=\"meta\"># gcc -Wall fork_example.c &amp;&amp; ./a.out</span></div><div class=\"line\">I am parent. Process id is <span class=\"number\">28365</span></div><div class=\"line\">I am child. Process id is <span class=\"number\">28366</span></div></pre></td></tr></table></figure>\n<h1 id=\"3-Six-types-Namespace\"><a href=\"#3-Six-types-Namespace\" class=\"headerlink\" title=\"3 Six types Namespace\"></a>3 Six types Namespace</h1><h2 id=\"3-1-UTS-Unix-Time-sharing-System-Namespace\"><a href=\"#3-1-UTS-Unix-Time-sharing-System-Namespace\" class=\"headerlink\" title=\"3.1 UTS Unix Time-sharing System Namespace\"></a>3.1 UTS Unix Time-sharing System Namespace</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;signal.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_SIZE (1024 * 1024)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> child_stack[STACK_SIZE];</div><div class=\"line\"><span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> child_args[] = &#123;</div><div class=\"line\">        <span class=\"string\">\"/bin/bash\"</span>,</div><div class=\"line\">        <span class=\"literal\">NULL</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">child_main</span><span class=\"params\">(<span class=\"keyword\">void</span>* args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the Child Process!\\n\"</span>);</div><div class=\"line\">        sethostname(<span class=\"string\">\"Changed Namespace\"</span>,<span class=\"number\">12</span>);</div><div class=\"line\">        execv(child_args[<span class=\"number\">0</span>], child_args);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the parent Process, BEGIN! \\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, <span class=\"literal\">NULL</span>);</div><div class=\"line\">        waitpid(child_pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Over\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># gcc -Wall uts.c -o utsNamespace</span></div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ls</span></div><div class=\"line\">uts.c  utsNamespace</div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ./utsNamespace</span></div><div class=\"line\">In the parent Process, BEGIN!</div><div class=\"line\">In the Child Process!</div><div class=\"line\">root@Changed Name:/home/i340738/NameSpaceLearning<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">exit</span></div><div class=\"line\">Over</div></pre></td></tr></table></figure>\n<p>通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Links\"><a href=\"#Links\" class=\"headerlink\" title=\"Links :\"></a>Links :</h2><p><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\" target=\"_blank\" rel=\"external\">Namespace Isolation</a><br><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\" target=\"_blank\" rel=\"external\">Cgroup resource isolation</a></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><h3 id=\"Join\"><a href=\"#Join\" class=\"headerlink\" title=\"Join\"></a>Join</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* ns_exec.c</span></div><div class=\"line\"></div><div class=\"line\">   Copyright 2013, Michael Kerrisk</div><div class=\"line\">   Licensed under GNU General Public License v2 or later</div><div class=\"line\"></div><div class=\"line\">   Join a namespace and execute a command in the namespace</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* A simple error-handling function: print an error message based</span></div><div class=\"line\">   on the value in 'errno' and terminate the calling process */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> errExit(msg)    do &#123; perror(msg); exit(EXIT_FAILURE); \\</span></div><div class=\"line\">                        &#125; while (0)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> fd;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (argc &lt; <span class=\"number\">3</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"%s /proc/PID/ns/FILE cmd [arg...]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* Get descriptor for namespace */</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (fd == <span class=\"number\">-1</span>)</div><div class=\"line\">        errExit(<span class=\"string\">\"open\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (setns(fd, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)         <span class=\"comment\">/* Join that namespace */</span></div><div class=\"line\">        errExit(<span class=\"string\">\"setns\"</span>);</div><div class=\"line\"></div><div class=\"line\">    execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* Execute a command in namespace */</span></div><div class=\"line\">    errExit(<span class=\"string\">\"execvp\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"The Basic String Operations in Bash Shell","_content":"\n\n# 1. 一些老司机才知道的 *原来还可以这样*的操作.\n\n | Expression  | Meaning |\n |:----------------:|:----------------:|\n |${var}| 单纯的取值没什么特别的|\n |${var-$var2}| 如果var不存在, 那就返回var2的值|\n |${var:-$var2}| 如果var不存在, 或者为空, 那就返回var2的值这个主要是把空的字符串当做不存在. |\n |${var1=$var2}| 如果var1不存在, 把var2赋值给var1, 然后返回var2的值 |\n |${var1:=$var2}| 如果var1不存在, 或者var1为空, 把var2赋值给var1, 然后返回var2的值 |\n |${var1+$var2} | 如果var1不存在, 输出 null, 如果存在输出var2, 这里var1的值不变|\n |${var1:+$var2} | 如果var1不存在或者为空, 则输出null, 否则输出var2的值, var1的值不会变 |\n |${!var*} / ${!var@} | 匹配以var开头声明的变量, 注意返回的是变量名 |\n\n~~~bash\n####聚个栗子\nvar2=helloworld\necho ${var-$var2}\n#返回 helloworld\nvar=\"\"\necho ${var-$var2}\n#return : \"\"\necho ${var:-$var2}\n#return helloworld\n#-------------------------------------\n#$var1 do not exist\necho ${var1=$var2}\n#return helloworld\necho ${var1}\n#return helloworld\n#-----------------------------------\n> var2=\"helloworld\"\n> var1=\"\"\n> echo ${var1:=$var2}\nhelloworld\n> echo $var1\nhelloworld\n#-----------------------------------\n> var1=\"\"\n> echo ${var1+$var2}\nhelloworld\n> echo $var1\n\n> var1=\"kkk\"\n> echo ${var1+$var2}\nhelloworld\n> echo $var1\nkkk\n> echo ${var3+$var2}\n\n#var3 does not exist,  the output is null.\n#-----------------------------------------\n> ErrorMessage=\"\\033[31m [Error] \\033[0m The Variable Does not Existe\"\n> echo -e ${var4:-$ErrorMessage}\n [Error]  The Variable Does not Existe\n#这样达到了, 如果这个值不存在或者是空, 返回错误消息.\n\n#------------------------------------------\n#匹配所有以var开头的变量名\n> echo ${!var@}\nvar1 var2\n> echo ${!var*}\nvar1 var2\n~~~\n\n\n# 2 字符串的长度读取和替换\n\n## 2.1 字符串的长度\n\n~~~bash\n> var3=\"1234567\"\n> echo ${#var3}\n7\n~~~\n\n## 2.2 截取第x位之后的字符\n\n~~~bash\n> echo ${var3:3}\n4567\n~~~\n\n## 2.3 定位子串的位置\n\n~~~bash\n\n> str=abcdefgab\n> expr index $str \"a\"\n1\n> expr index $str \"x\"\n0\n~~~\n\n## 2.4 截取其中的一部分\n\n~~~bash\n> sample=1234567890\n> echo ${sample:3:3}\n456\n# 也可以逆向操作\n> str=abcdefgab\n> echo ${str:(-3):2}\nga\n\n~~~\n\n\n## 2.5 加入一点点正则表达式的CUT!\n\n两种情况 (使用正则表达式的时候)\n\n- 截取最短匹配 :一个符号 \\#\n- 截取最长匹配 :两个符号 \\#\\#\n\n有关符号的记忆方法:\n\n- \\# 是从前面开始数, 键盘上\\#也是在%的前面的\n- % 是从后面开始数. 键盘layout上面%是在#后面的\n\n\n~~~bash\n> sample=123123456456789789123\n> echo ${sample#123}\n123456456789789123\n\n> echo ${sample#12*56}\n456789789123\n> echo ${sample##12*56}\n789789123\n\n> str=\"abbc,def,ghi,abcjkl\"\n> echo ${str#d*f}\nabbc,def,ghi,abcjkl\n> echo ${str#*d*f}\n,ghi,abcjkl\n> echo ${str%a*l}\nabbc,def,ghi,\n> echo ${str%%a*l}\n\n>\n~~~\n\n\n\n## 2.6 简单的字符替换\n\n~~~bash\nstr=\"apple, tree, apple tree\"\necho ${str/apple/APPLE}   # 替换第一次出现的apple\necho ${str//apple/APPLE}  # 替换所有apple\necho ${str/#apple/APPLE}  # 如果字符串str以apple开头，则用APPLE替换它\necho ${str/%apple/APPLE}  # 如果字符串str以apple结尾，则用APPLE替换它\n\n> str=\"apple, tree, apple tree\"\n> echo ${str/apple/Apple}\nApple, tree, apple tree\n> echo ${str//apple/ApplePie}\nApplePie, tree, ApplePie tree\n> echo ${str/#apple/ApplePie}\nApplePie, tree, apple tree\n> echo ${str/%tree/ApplePie}\napple, tree, apple ApplePie\n\n~~~\n\n## 2.7 比较\n\n~~~bash\n1.[[ \"a.txt\" == a* ]]        # 逻辑真 (pattern matching)\n2.[[ \"a.txt\" =~ .*\\.txt ]]   # 逻辑真 (regex matching)\n3.[[ \"abc\" == \"abc\" ]]       # 逻辑真 (string comparision)\n4.[[ \"11\" < \"2\" ]]           # 逻辑真 (string comparision), 按ascii值比较\n~~~\n","source":"_posts/0005StringInBash.md","raw":"---\n  title: The Basic String Operations in Bash Shell\n  categories: Shell\n  tags:\n    - bash\n    - string\n---\n\n\n# 1. 一些老司机才知道的 *原来还可以这样*的操作.\n\n | Expression  | Meaning |\n |:----------------:|:----------------:|\n |${var}| 单纯的取值没什么特别的|\n |${var-$var2}| 如果var不存在, 那就返回var2的值|\n |${var:-$var2}| 如果var不存在, 或者为空, 那就返回var2的值这个主要是把空的字符串当做不存在. |\n |${var1=$var2}| 如果var1不存在, 把var2赋值给var1, 然后返回var2的值 |\n |${var1:=$var2}| 如果var1不存在, 或者var1为空, 把var2赋值给var1, 然后返回var2的值 |\n |${var1+$var2} | 如果var1不存在, 输出 null, 如果存在输出var2, 这里var1的值不变|\n |${var1:+$var2} | 如果var1不存在或者为空, 则输出null, 否则输出var2的值, var1的值不会变 |\n |${!var*} / ${!var@} | 匹配以var开头声明的变量, 注意返回的是变量名 |\n\n~~~bash\n####聚个栗子\nvar2=helloworld\necho ${var-$var2}\n#返回 helloworld\nvar=\"\"\necho ${var-$var2}\n#return : \"\"\necho ${var:-$var2}\n#return helloworld\n#-------------------------------------\n#$var1 do not exist\necho ${var1=$var2}\n#return helloworld\necho ${var1}\n#return helloworld\n#-----------------------------------\n> var2=\"helloworld\"\n> var1=\"\"\n> echo ${var1:=$var2}\nhelloworld\n> echo $var1\nhelloworld\n#-----------------------------------\n> var1=\"\"\n> echo ${var1+$var2}\nhelloworld\n> echo $var1\n\n> var1=\"kkk\"\n> echo ${var1+$var2}\nhelloworld\n> echo $var1\nkkk\n> echo ${var3+$var2}\n\n#var3 does not exist,  the output is null.\n#-----------------------------------------\n> ErrorMessage=\"\\033[31m [Error] \\033[0m The Variable Does not Existe\"\n> echo -e ${var4:-$ErrorMessage}\n [Error]  The Variable Does not Existe\n#这样达到了, 如果这个值不存在或者是空, 返回错误消息.\n\n#------------------------------------------\n#匹配所有以var开头的变量名\n> echo ${!var@}\nvar1 var2\n> echo ${!var*}\nvar1 var2\n~~~\n\n\n# 2 字符串的长度读取和替换\n\n## 2.1 字符串的长度\n\n~~~bash\n> var3=\"1234567\"\n> echo ${#var3}\n7\n~~~\n\n## 2.2 截取第x位之后的字符\n\n~~~bash\n> echo ${var3:3}\n4567\n~~~\n\n## 2.3 定位子串的位置\n\n~~~bash\n\n> str=abcdefgab\n> expr index $str \"a\"\n1\n> expr index $str \"x\"\n0\n~~~\n\n## 2.4 截取其中的一部分\n\n~~~bash\n> sample=1234567890\n> echo ${sample:3:3}\n456\n# 也可以逆向操作\n> str=abcdefgab\n> echo ${str:(-3):2}\nga\n\n~~~\n\n\n## 2.5 加入一点点正则表达式的CUT!\n\n两种情况 (使用正则表达式的时候)\n\n- 截取最短匹配 :一个符号 \\#\n- 截取最长匹配 :两个符号 \\#\\#\n\n有关符号的记忆方法:\n\n- \\# 是从前面开始数, 键盘上\\#也是在%的前面的\n- % 是从后面开始数. 键盘layout上面%是在#后面的\n\n\n~~~bash\n> sample=123123456456789789123\n> echo ${sample#123}\n123456456789789123\n\n> echo ${sample#12*56}\n456789789123\n> echo ${sample##12*56}\n789789123\n\n> str=\"abbc,def,ghi,abcjkl\"\n> echo ${str#d*f}\nabbc,def,ghi,abcjkl\n> echo ${str#*d*f}\n,ghi,abcjkl\n> echo ${str%a*l}\nabbc,def,ghi,\n> echo ${str%%a*l}\n\n>\n~~~\n\n\n\n## 2.6 简单的字符替换\n\n~~~bash\nstr=\"apple, tree, apple tree\"\necho ${str/apple/APPLE}   # 替换第一次出现的apple\necho ${str//apple/APPLE}  # 替换所有apple\necho ${str/#apple/APPLE}  # 如果字符串str以apple开头，则用APPLE替换它\necho ${str/%apple/APPLE}  # 如果字符串str以apple结尾，则用APPLE替换它\n\n> str=\"apple, tree, apple tree\"\n> echo ${str/apple/Apple}\nApple, tree, apple tree\n> echo ${str//apple/ApplePie}\nApplePie, tree, ApplePie tree\n> echo ${str/#apple/ApplePie}\nApplePie, tree, apple tree\n> echo ${str/%tree/ApplePie}\napple, tree, apple ApplePie\n\n~~~\n\n## 2.7 比较\n\n~~~bash\n1.[[ \"a.txt\" == a* ]]        # 逻辑真 (pattern matching)\n2.[[ \"a.txt\" =~ .*\\.txt ]]   # 逻辑真 (regex matching)\n3.[[ \"abc\" == \"abc\" ]]       # 逻辑真 (string comparision)\n4.[[ \"11\" < \"2\" ]]           # 逻辑真 (string comparision), 按ascii值比较\n~~~\n","slug":"0005StringInBash","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0ay0008c5ccc6twwphd","content":"<h1 id=\"1-一些老司机才知道的-原来还可以这样的操作\"><a href=\"#1-一些老司机才知道的-原来还可以这样的操作\" class=\"headerlink\" title=\"1. 一些老司机才知道的 原来还可以这样的操作.\"></a>1. 一些老司机才知道的 <em>原来还可以这样</em>的操作.</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Expression</th>\n<th style=\"text-align:center\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">${var}</td>\n<td style=\"text-align:center\">单纯的取值没什么特别的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var-$var2}</td>\n<td style=\"text-align:center\">如果var不存在, 那就返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var:-$var2}</td>\n<td style=\"text-align:center\">如果var不存在, 或者为空, 那就返回var2的值这个主要是把空的字符串当做不存在.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1=$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 把var2赋值给var1, 然后返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1:=$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 或者var1为空, 把var2赋值给var1, 然后返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1+$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 输出 null, 如果存在输出var2, 这里var1的值不变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1:+$var2}</td>\n<td style=\"text-align:center\">如果var1不存在或者为空, 则输出null, 否则输出var2的值, var1的值不会变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${!var*} / ${!var@}</td>\n<td style=\"text-align:center\">匹配以var开头声明的变量, 注意返回的是变量名</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">####聚个栗子</span></div><div class=\"line\">var2=helloworld</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#返回 helloworld</span></div><div class=\"line\">var=<span class=\"string\">\"\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return : \"\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"comment\">#-------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#$var1 do not exist</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1=$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"comment\">#-----------------------------------</span></div><div class=\"line\">&gt; var2=<span class=\"string\">\"helloworld\"</span></div><div class=\"line\">&gt; var1=<span class=\"string\">\"\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1:=$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\">helloworld</div><div class=\"line\"><span class=\"comment\">#-----------------------------------</span></div><div class=\"line\">&gt; var1=<span class=\"string\">\"\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1+$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\"></div><div class=\"line\">&gt; var1=<span class=\"string\">\"kkk\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1+$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\">kkk</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var3+$var2&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#var3 does not exist,  the output is null.</span></div><div class=\"line\"><span class=\"comment\">#-----------------------------------------</span></div><div class=\"line\">&gt; ErrorMessage=<span class=\"string\">\"\\033[31m [Error] \\033[0m The Variable Does not Existe\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> -e <span class=\"variable\">$&#123;var4:-$ErrorMessage&#125;</span></div><div class=\"line\"> [Error]  The Variable Does not Existe</div><div class=\"line\"><span class=\"comment\">#这样达到了, 如果这个值不存在或者是空, 返回错误消息.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#匹配所有以var开头的变量名</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!var@&#125;</span></div><div class=\"line\">var1 var2</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!var*&#125;</span></div><div class=\"line\">var1 var2</div></pre></td></tr></table></figure>\n<h1 id=\"2-字符串的长度读取和替换\"><a href=\"#2-字符串的长度读取和替换\" class=\"headerlink\" title=\"2 字符串的长度读取和替换\"></a>2 字符串的长度读取和替换</h1><h2 id=\"2-1-字符串的长度\"><a href=\"#2-1-字符串的长度\" class=\"headerlink\" title=\"2.1 字符串的长度\"></a>2.1 字符串的长度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; var3=<span class=\"string\">\"1234567\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#var3&#125;</span></div><div class=\"line\">7</div></pre></td></tr></table></figure>\n<h2 id=\"2-2-截取第x位之后的字符\"><a href=\"#2-2-截取第x位之后的字符\" class=\"headerlink\" title=\"2.2 截取第x位之后的字符\"></a>2.2 截取第x位之后的字符</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var3:3&#125;</span></div><div class=\"line\">4567</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-定位子串的位置\"><a href=\"#2-3-定位子串的位置\" class=\"headerlink\" title=\"2.3 定位子串的位置\"></a>2.3 定位子串的位置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; str=abcdefgab</div><div class=\"line\">&gt; expr index <span class=\"variable\">$str</span> <span class=\"string\">\"a\"</span></div><div class=\"line\">1</div><div class=\"line\">&gt; expr index <span class=\"variable\">$str</span> <span class=\"string\">\"x\"</span></div><div class=\"line\">0</div></pre></td></tr></table></figure>\n<h2 id=\"2-4-截取其中的一部分\"><a href=\"#2-4-截取其中的一部分\" class=\"headerlink\" title=\"2.4 截取其中的一部分\"></a>2.4 截取其中的一部分</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sample=1234567890</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample:3:3&#125;</span></div><div class=\"line\">456</div><div class=\"line\"><span class=\"comment\"># 也可以逆向操作</span></div><div class=\"line\">&gt; str=abcdefgab</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str:(-3):2&#125;</span></div><div class=\"line\">ga</div></pre></td></tr></table></figure>\n<h2 id=\"2-5-加入一点点正则表达式的CUT\"><a href=\"#2-5-加入一点点正则表达式的CUT\" class=\"headerlink\" title=\"2.5 加入一点点正则表达式的CUT!\"></a>2.5 加入一点点正则表达式的CUT!</h2><p>两种情况 (使用正则表达式的时候)</p>\n<ul>\n<li>截取最短匹配 :一个符号 #</li>\n<li>截取最长匹配 :两个符号 ##</li>\n</ul>\n<p>有关符号的记忆方法:</p>\n<ul>\n<li># 是从前面开始数, 键盘上#也是在%的前面的</li>\n<li>% 是从后面开始数. 键盘layout上面%是在#后面的</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sample=123123456456789789123</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample#123&#125;</span></div><div class=\"line\">123456456789789123</div><div class=\"line\"></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample#12*56&#125;</span></div><div class=\"line\">456789789123</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample##12*56&#125;</span></div><div class=\"line\">789789123</div><div class=\"line\"></div><div class=\"line\">&gt; str=<span class=\"string\">\"abbc,def,ghi,abcjkl\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str#d*f&#125;</span></div><div class=\"line\">abbc,def,ghi,abcjkl</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str#*d*f&#125;</span></div><div class=\"line\">,ghi,abcjkl</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str%a*l&#125;</span></div><div class=\"line\">abbc,def,ghi,</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str%%a*l&#125;</span></div><div class=\"line\"></div><div class=\"line\">&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"2-6-简单的字符替换\"><a href=\"#2-6-简单的字符替换\" class=\"headerlink\" title=\"2.6 简单的字符替换\"></a>2.6 简单的字符替换</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">str=<span class=\"string\">\"apple, tree, apple tree\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/apple/APPLE&#125;</span>   <span class=\"comment\"># 替换第一次出现的apple</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//apple/APPLE&#125;</span>  <span class=\"comment\"># 替换所有apple</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/#apple/APPLE&#125;</span>  <span class=\"comment\"># 如果字符串str以apple开头，则用APPLE替换它</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/%apple/APPLE&#125;</span>  <span class=\"comment\"># 如果字符串str以apple结尾，则用APPLE替换它</span></div><div class=\"line\"></div><div class=\"line\">&gt; str=<span class=\"string\">\"apple, tree, apple tree\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/apple/Apple&#125;</span></div><div class=\"line\">Apple, tree, apple tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//apple/ApplePie&#125;</span></div><div class=\"line\">ApplePie, tree, ApplePie tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/#apple/ApplePie&#125;</span></div><div class=\"line\">ApplePie, tree, apple tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/%tree/ApplePie&#125;</span></div><div class=\"line\">apple, tree, apple ApplePie</div></pre></td></tr></table></figure>\n<h2 id=\"2-7-比较\"><a href=\"#2-7-比较\" class=\"headerlink\" title=\"2.7 比较\"></a>2.7 比较</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.[[ <span class=\"string\">\"a.txt\"</span> == a* ]]        <span class=\"comment\"># 逻辑真 (pattern matching)</span></div><div class=\"line\">2.[[ <span class=\"string\">\"a.txt\"</span> =~ .*\\.txt ]]   <span class=\"comment\"># 逻辑真 (regex matching)</span></div><div class=\"line\">3.[[ <span class=\"string\">\"abc\"</span> == <span class=\"string\">\"abc\"</span> ]]       <span class=\"comment\"># 逻辑真 (string comparision)</span></div><div class=\"line\">4.[[ <span class=\"string\">\"11\"</span> &lt; <span class=\"string\">\"2\"</span> ]]           <span class=\"comment\"># 逻辑真 (string comparision), 按ascii值比较</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-一些老司机才知道的-原来还可以这样的操作\"><a href=\"#1-一些老司机才知道的-原来还可以这样的操作\" class=\"headerlink\" title=\"1. 一些老司机才知道的 原来还可以这样的操作.\"></a>1. 一些老司机才知道的 <em>原来还可以这样</em>的操作.</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Expression</th>\n<th style=\"text-align:center\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">${var}</td>\n<td style=\"text-align:center\">单纯的取值没什么特别的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var-$var2}</td>\n<td style=\"text-align:center\">如果var不存在, 那就返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var:-$var2}</td>\n<td style=\"text-align:center\">如果var不存在, 或者为空, 那就返回var2的值这个主要是把空的字符串当做不存在.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1=$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 把var2赋值给var1, 然后返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1:=$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 或者var1为空, 把var2赋值给var1, 然后返回var2的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1+$var2}</td>\n<td style=\"text-align:center\">如果var1不存在, 输出 null, 如果存在输出var2, 这里var1的值不变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${var1:+$var2}</td>\n<td style=\"text-align:center\">如果var1不存在或者为空, 则输出null, 否则输出var2的值, var1的值不会变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">${!var*} / ${!var@}</td>\n<td style=\"text-align:center\">匹配以var开头声明的变量, 注意返回的是变量名</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">####聚个栗子</span></div><div class=\"line\">var2=helloworld</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#返回 helloworld</span></div><div class=\"line\">var=<span class=\"string\">\"\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return : \"\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:-$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"comment\">#-------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#$var1 do not exist</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1=$var2&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1&#125;</span></div><div class=\"line\"><span class=\"comment\">#return helloworld</span></div><div class=\"line\"><span class=\"comment\">#-----------------------------------</span></div><div class=\"line\">&gt; var2=<span class=\"string\">\"helloworld\"</span></div><div class=\"line\">&gt; var1=<span class=\"string\">\"\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1:=$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\">helloworld</div><div class=\"line\"><span class=\"comment\">#-----------------------------------</span></div><div class=\"line\">&gt; var1=<span class=\"string\">\"\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1+$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\"></div><div class=\"line\">&gt; var1=<span class=\"string\">\"kkk\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var1+$var2&#125;</span></div><div class=\"line\">helloworld</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$var1</span></div><div class=\"line\">kkk</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var3+$var2&#125;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#var3 does not exist,  the output is null.</span></div><div class=\"line\"><span class=\"comment\">#-----------------------------------------</span></div><div class=\"line\">&gt; ErrorMessage=<span class=\"string\">\"\\033[31m [Error] \\033[0m The Variable Does not Existe\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> -e <span class=\"variable\">$&#123;var4:-$ErrorMessage&#125;</span></div><div class=\"line\"> [Error]  The Variable Does not Existe</div><div class=\"line\"><span class=\"comment\">#这样达到了, 如果这个值不存在或者是空, 返回错误消息.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#匹配所有以var开头的变量名</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!var@&#125;</span></div><div class=\"line\">var1 var2</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;!var*&#125;</span></div><div class=\"line\">var1 var2</div></pre></td></tr></table></figure>\n<h1 id=\"2-字符串的长度读取和替换\"><a href=\"#2-字符串的长度读取和替换\" class=\"headerlink\" title=\"2 字符串的长度读取和替换\"></a>2 字符串的长度读取和替换</h1><h2 id=\"2-1-字符串的长度\"><a href=\"#2-1-字符串的长度\" class=\"headerlink\" title=\"2.1 字符串的长度\"></a>2.1 字符串的长度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; var3=<span class=\"string\">\"1234567\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#var3&#125;</span></div><div class=\"line\">7</div></pre></td></tr></table></figure>\n<h2 id=\"2-2-截取第x位之后的字符\"><a href=\"#2-2-截取第x位之后的字符\" class=\"headerlink\" title=\"2.2 截取第x位之后的字符\"></a>2.2 截取第x位之后的字符</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var3:3&#125;</span></div><div class=\"line\">4567</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-定位子串的位置\"><a href=\"#2-3-定位子串的位置\" class=\"headerlink\" title=\"2.3 定位子串的位置\"></a>2.3 定位子串的位置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt; str=abcdefgab</div><div class=\"line\">&gt; expr index <span class=\"variable\">$str</span> <span class=\"string\">\"a\"</span></div><div class=\"line\">1</div><div class=\"line\">&gt; expr index <span class=\"variable\">$str</span> <span class=\"string\">\"x\"</span></div><div class=\"line\">0</div></pre></td></tr></table></figure>\n<h2 id=\"2-4-截取其中的一部分\"><a href=\"#2-4-截取其中的一部分\" class=\"headerlink\" title=\"2.4 截取其中的一部分\"></a>2.4 截取其中的一部分</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sample=1234567890</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample:3:3&#125;</span></div><div class=\"line\">456</div><div class=\"line\"><span class=\"comment\"># 也可以逆向操作</span></div><div class=\"line\">&gt; str=abcdefgab</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str:(-3):2&#125;</span></div><div class=\"line\">ga</div></pre></td></tr></table></figure>\n<h2 id=\"2-5-加入一点点正则表达式的CUT\"><a href=\"#2-5-加入一点点正则表达式的CUT\" class=\"headerlink\" title=\"2.5 加入一点点正则表达式的CUT!\"></a>2.5 加入一点点正则表达式的CUT!</h2><p>两种情况 (使用正则表达式的时候)</p>\n<ul>\n<li>截取最短匹配 :一个符号 #</li>\n<li>截取最长匹配 :两个符号 ##</li>\n</ul>\n<p>有关符号的记忆方法:</p>\n<ul>\n<li># 是从前面开始数, 键盘上#也是在%的前面的</li>\n<li>% 是从后面开始数. 键盘layout上面%是在#后面的</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sample=123123456456789789123</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample#123&#125;</span></div><div class=\"line\">123456456789789123</div><div class=\"line\"></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample#12*56&#125;</span></div><div class=\"line\">456789789123</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;sample##12*56&#125;</span></div><div class=\"line\">789789123</div><div class=\"line\"></div><div class=\"line\">&gt; str=<span class=\"string\">\"abbc,def,ghi,abcjkl\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str#d*f&#125;</span></div><div class=\"line\">abbc,def,ghi,abcjkl</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str#*d*f&#125;</span></div><div class=\"line\">,ghi,abcjkl</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str%a*l&#125;</span></div><div class=\"line\">abbc,def,ghi,</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str%%a*l&#125;</span></div><div class=\"line\"></div><div class=\"line\">&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"2-6-简单的字符替换\"><a href=\"#2-6-简单的字符替换\" class=\"headerlink\" title=\"2.6 简单的字符替换\"></a>2.6 简单的字符替换</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">str=<span class=\"string\">\"apple, tree, apple tree\"</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/apple/APPLE&#125;</span>   <span class=\"comment\"># 替换第一次出现的apple</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//apple/APPLE&#125;</span>  <span class=\"comment\"># 替换所有apple</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/#apple/APPLE&#125;</span>  <span class=\"comment\"># 如果字符串str以apple开头，则用APPLE替换它</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/%apple/APPLE&#125;</span>  <span class=\"comment\"># 如果字符串str以apple结尾，则用APPLE替换它</span></div><div class=\"line\"></div><div class=\"line\">&gt; str=<span class=\"string\">\"apple, tree, apple tree\"</span></div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/apple/Apple&#125;</span></div><div class=\"line\">Apple, tree, apple tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//apple/ApplePie&#125;</span></div><div class=\"line\">ApplePie, tree, ApplePie tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/#apple/ApplePie&#125;</span></div><div class=\"line\">ApplePie, tree, apple tree</div><div class=\"line\">&gt; <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str/%tree/ApplePie&#125;</span></div><div class=\"line\">apple, tree, apple ApplePie</div></pre></td></tr></table></figure>\n<h2 id=\"2-7-比较\"><a href=\"#2-7-比较\" class=\"headerlink\" title=\"2.7 比较\"></a>2.7 比较</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.[[ <span class=\"string\">\"a.txt\"</span> == a* ]]        <span class=\"comment\"># 逻辑真 (pattern matching)</span></div><div class=\"line\">2.[[ <span class=\"string\">\"a.txt\"</span> =~ .*\\.txt ]]   <span class=\"comment\"># 逻辑真 (regex matching)</span></div><div class=\"line\">3.[[ <span class=\"string\">\"abc\"</span> == <span class=\"string\">\"abc\"</span> ]]       <span class=\"comment\"># 逻辑真 (string comparision)</span></div><div class=\"line\">4.[[ <span class=\"string\">\"11\"</span> &lt; <span class=\"string\">\"2\"</span> ]]           <span class=\"comment\"># 逻辑真 (string comparision), 按ascii值比较</span></div></pre></td></tr></table></figure>\n"},{"title":"Vim 的私人定制","_content":"\n<blockquote class=\"blockquote-center\">本来想要是小清新的Vim, 后来终于在经常要远端ssh工作的动力之下, 忍不住想要对Vim动手了...</blockquote>\n\n# 1. 安装插件管理系统 Bundle\n\n第一步, 肯定是先要下载啦!\n\n~~~bash\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n~~~\n\n第二部, 对 **.vimrc** 进行编辑\n\n我的vim.rc参考设置:\n\n<a href=\"https://github.com/Aliciahan/Snippets\">Alicia's GitHub Snippets</a>\n\n\n完成啦....\n\n# 2. 插件的列表哪里找?\n\n<a href=\"http://vim-scripts.org/vim/scripts.html\">山东蓝翔在青岛...</a>\n\n# 3. 必要的插件们\n\n## 3.1 目录树\n\n** vim-script/The-NERD-tree\n\n具体的用法可以参照 <a href=\"https://my.oschina.net/VASKS/blog/388907\">这个</a>来搞 简单地转载一下:\n\n### 3.1.1 打开方式\n\n安装好后，命令行中输入vim，打开vim后，在vim中输入:NERDTree，你就可以看到NERDTree的效果了。\n\n为了方便起见，我们设置一下快捷键，在~/.vimrc 文件中添加下面内容， 我的centos6.6还是没有这个~/.vimrc，没关系，创建一个，直接 vim ~/.vimrc 然后添加\n\n> \" NERDTree map <F10> :NERDTreeToggle<CR>\n\n这样打开vim后，只要按键盘上的F10就可以显示和隐藏NERDTree的文件浏览了.\n\n### 3.1.2 一些玩儿法\n\n- t: 在新tab中打开\n- Ctrl+w+w : 切换Tab\n\n其实这两个就够玩儿了. 再加上\n\n- tabp: tab Previous\n- tabn: tab Next\n\n~~~bash\nctrl + w + h    光标 focus 左侧树形目录\nctrl + w + l    光标 focus 右侧文件显示窗口\nctrl + w + w    光标自动在左右侧窗口切换\nctrl + w + r    移动当前窗口的布局位置\no       在已有窗口中打开文件、目录或书签，并跳到该窗口\ngo      在已有窗口 中打开文件、目录或书签，但不跳到该窗口\nt       在新 Tab 中打开选中文件/书签，并跳到新 Tab\nT       在新 Tab 中打开选中文件/书签，但不跳到新 Tab\ni       split 一个新窗口打开选中文件，并跳到该窗口\ngi      split 一个新窗口打开选中文件，但不跳到该窗口\ns       vsplit 一个新窗口打开选中文件，并跳到该窗口\ngs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口\n!       执行当前文件\nO       递归打开选中 结点下的所有目录\nx       合拢选中结点的父目录\nX       递归 合拢选中结点下的所有目录\ne       Edit the current dif\n双击    相当于 NERDTree-o\n中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree-e\nD       删除当前书签\nP       跳到根结点\np       跳到父结点\nK       跳到当前目录下同级的第一个结点\nJ       跳到当前目录下同级的最后一个结点\nk       跳到当前目录下同级的前一个结点\nj       跳到当前目录下同级的后一个结点\nC       将选中目录或选中文件的父目录设为根结点\nu       将当前根结点的父目录设为根目录，并变成合拢原根结点\nU       将当前根结点的父目录设为根目录，但保持展开原根结点\nr       递归刷新选中目录\nR       递归刷新根结点\nm       显示文件系统菜单\ncd      将 CWD 设为选中目录\nI       切换是否显示隐藏文件\nf       切换是否使用文件过滤器\nF       切换是否显示文件\nB       切换是否显示书签\nq       关闭 NerdTree 窗口\n?       切换是否显示 Quick Help\n\n------------\n:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab\n:tabc   关闭当前的 tab\n:tabo   关闭所有其他的 tab\n:tabs   查看所有打开的 tab\n:tabp   前一个 tab\n:tabn   后一个 tab\n\n~~~\n\n在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）\n\n> autocmd VimEnter * NERDTree\n\n按下 F2 调出/隐藏\n\n> NERDTree map :silent! NERDTreeToggle\n\n\" 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）\n\n> let NERDTreeWinPos=\"right\"\n\n\" 当打开 NERDTree 窗口时，自动显示 Bookmarks\n\n> let NERDTreeShowBookmarks=1\n\n\n## 3.2 重头戏 YCM自动补全\n\nYouCompleteMe是Google里面一个大神搞的. 超级麻烦的一个东西,  Git在 <a href=\"https://github.com/Valloric/YouCompleteMe\">这里</a> 插件名称: 'Valloric/YouCompleteMe'\n\n安装时后, 需要的vim版本很高, 可以用brew或者port来安装, 装好了之后, 不需要动系统自带的vim, 也不用做ln, 直接alias就行:\n\n放到.bash_profile里面就了事儿.\n\n~~~bash\nalias vim='/opt/local/bin/vim'\n~~~\n\n然后还要编译?! 真他喵的高端啊....\n\n反正按照上面做就行了 以下几点注意\n\n- CMake 要安装, brew install cmake 搞定\n- python 需要有\n- clang貌似是肯定要.\n\n### 3.2.1 For Linux\n\n~~~bash\n# Install Vundle Then\n# Plgin 'Valloric/YouCompleteMe'\n# :PluginInstall\n\nsudo apt-get install build-essential cmake\nsudo apt-get install python-dev python3-dev\ncd ~/.vim/bundle/YouCompleteMe\n./install.py --clang-completer\n\n~~~\n\n### 3.2.2 For Mac OS\n\n~~~bash\ncd ~/.vim/bundle/YouCompleteMe\n./install.py --clang-completer\n~~~\n\n\n## 3.3 Snippets 登场\n\n\nPlugin 'SirVer/ultisnips'\nPlugin 'honza/vim-snippets'\n\n然后在.vimrc里面写\n\n~~~bash\nfunction! g:UltiSnips_Complete()\n  call UltiSnips#ExpandSnippet()\n  if g:ulti_expand_res == 0\n    if pumvisible()\n      return \"\\<C-n>\"\n    else\n      call UltiSnips#JumpForwards()\n      if g:ulti_jump_forwards_res == 0\n        return \"\\<TAB>\"\n      endif\n    endif\n  endif\n  return \"\"\nendfunction\n\nfunction! g:UltiSnips_Reverse()\n  call UltiSnips#JumpBackwards()\n  if g:ulti_jump_backwards_res == 0\n    return \"\\<C-P>\"\n  endif\n\n  return \"\"\nendfunction\n\n\nif !exists(\"g:UltiSnipsJumpForwardTrigger\")\n  let g:UltiSnipsJumpForwardTrigger = \"<tab>\"\nendif\nif !exists(\"g:UltiSnipsJumpBackwardTrigger\")\n  let g:UltiSnipsJumpBackwardTrigger=\"<s-tab>\"\nendif\n\nau InsertEnter * exec \"inoremap <silent> \" . g:UltiSnipsExpandTrigger     . \" <C-R>=g:UltiSnips_Complete()<cr>\"\nau InsertEnter * exec \"inoremap <silent> \" .     g:UltiSnipsJumpBackwardTrigger . \" <C-R>=g:UltiSnips_Reverse()<cr>\"\n\n\" 如果有snips，直接按tab键就可以完成添加\n\" tab键往下走，shfit+tab键往上走\n~~~\n\n### 3.3.1 自定义 Snippets\n\n~~~bash\nmkdir ~/.vim/UltiSnips\n\ntouch ~/.vim/UltiSnips markdown.snippets\n~~~\n# 意外的问题:\n\n## 退格键失灵\n\n那么通关密码是在~/.vimrc中加上set backspace=2。恭喜！你的问题就此解决.\n","source":"_posts/0006VimArrangement.md","raw":"---\n  title: Vim 的私人定制\n  categories: Vim\n  tags:\n    - vim\n    - editor\n---\n\n<blockquote class=\"blockquote-center\">本来想要是小清新的Vim, 后来终于在经常要远端ssh工作的动力之下, 忍不住想要对Vim动手了...</blockquote>\n\n# 1. 安装插件管理系统 Bundle\n\n第一步, 肯定是先要下载啦!\n\n~~~bash\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n~~~\n\n第二部, 对 **.vimrc** 进行编辑\n\n我的vim.rc参考设置:\n\n<a href=\"https://github.com/Aliciahan/Snippets\">Alicia's GitHub Snippets</a>\n\n\n完成啦....\n\n# 2. 插件的列表哪里找?\n\n<a href=\"http://vim-scripts.org/vim/scripts.html\">山东蓝翔在青岛...</a>\n\n# 3. 必要的插件们\n\n## 3.1 目录树\n\n** vim-script/The-NERD-tree\n\n具体的用法可以参照 <a href=\"https://my.oschina.net/VASKS/blog/388907\">这个</a>来搞 简单地转载一下:\n\n### 3.1.1 打开方式\n\n安装好后，命令行中输入vim，打开vim后，在vim中输入:NERDTree，你就可以看到NERDTree的效果了。\n\n为了方便起见，我们设置一下快捷键，在~/.vimrc 文件中添加下面内容， 我的centos6.6还是没有这个~/.vimrc，没关系，创建一个，直接 vim ~/.vimrc 然后添加\n\n> \" NERDTree map <F10> :NERDTreeToggle<CR>\n\n这样打开vim后，只要按键盘上的F10就可以显示和隐藏NERDTree的文件浏览了.\n\n### 3.1.2 一些玩儿法\n\n- t: 在新tab中打开\n- Ctrl+w+w : 切换Tab\n\n其实这两个就够玩儿了. 再加上\n\n- tabp: tab Previous\n- tabn: tab Next\n\n~~~bash\nctrl + w + h    光标 focus 左侧树形目录\nctrl + w + l    光标 focus 右侧文件显示窗口\nctrl + w + w    光标自动在左右侧窗口切换\nctrl + w + r    移动当前窗口的布局位置\no       在已有窗口中打开文件、目录或书签，并跳到该窗口\ngo      在已有窗口 中打开文件、目录或书签，但不跳到该窗口\nt       在新 Tab 中打开选中文件/书签，并跳到新 Tab\nT       在新 Tab 中打开选中文件/书签，但不跳到新 Tab\ni       split 一个新窗口打开选中文件，并跳到该窗口\ngi      split 一个新窗口打开选中文件，但不跳到该窗口\ns       vsplit 一个新窗口打开选中文件，并跳到该窗口\ngs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口\n!       执行当前文件\nO       递归打开选中 结点下的所有目录\nx       合拢选中结点的父目录\nX       递归 合拢选中结点下的所有目录\ne       Edit the current dif\n双击    相当于 NERDTree-o\n中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree-e\nD       删除当前书签\nP       跳到根结点\np       跳到父结点\nK       跳到当前目录下同级的第一个结点\nJ       跳到当前目录下同级的最后一个结点\nk       跳到当前目录下同级的前一个结点\nj       跳到当前目录下同级的后一个结点\nC       将选中目录或选中文件的父目录设为根结点\nu       将当前根结点的父目录设为根目录，并变成合拢原根结点\nU       将当前根结点的父目录设为根目录，但保持展开原根结点\nr       递归刷新选中目录\nR       递归刷新根结点\nm       显示文件系统菜单\ncd      将 CWD 设为选中目录\nI       切换是否显示隐藏文件\nf       切换是否使用文件过滤器\nF       切换是否显示文件\nB       切换是否显示书签\nq       关闭 NerdTree 窗口\n?       切换是否显示 Quick Help\n\n------------\n:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab\n:tabc   关闭当前的 tab\n:tabo   关闭所有其他的 tab\n:tabs   查看所有打开的 tab\n:tabp   前一个 tab\n:tabn   后一个 tab\n\n~~~\n\n在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）\n\n> autocmd VimEnter * NERDTree\n\n按下 F2 调出/隐藏\n\n> NERDTree map :silent! NERDTreeToggle\n\n\" 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）\n\n> let NERDTreeWinPos=\"right\"\n\n\" 当打开 NERDTree 窗口时，自动显示 Bookmarks\n\n> let NERDTreeShowBookmarks=1\n\n\n## 3.2 重头戏 YCM自动补全\n\nYouCompleteMe是Google里面一个大神搞的. 超级麻烦的一个东西,  Git在 <a href=\"https://github.com/Valloric/YouCompleteMe\">这里</a> 插件名称: 'Valloric/YouCompleteMe'\n\n安装时后, 需要的vim版本很高, 可以用brew或者port来安装, 装好了之后, 不需要动系统自带的vim, 也不用做ln, 直接alias就行:\n\n放到.bash_profile里面就了事儿.\n\n~~~bash\nalias vim='/opt/local/bin/vim'\n~~~\n\n然后还要编译?! 真他喵的高端啊....\n\n反正按照上面做就行了 以下几点注意\n\n- CMake 要安装, brew install cmake 搞定\n- python 需要有\n- clang貌似是肯定要.\n\n### 3.2.1 For Linux\n\n~~~bash\n# Install Vundle Then\n# Plgin 'Valloric/YouCompleteMe'\n# :PluginInstall\n\nsudo apt-get install build-essential cmake\nsudo apt-get install python-dev python3-dev\ncd ~/.vim/bundle/YouCompleteMe\n./install.py --clang-completer\n\n~~~\n\n### 3.2.2 For Mac OS\n\n~~~bash\ncd ~/.vim/bundle/YouCompleteMe\n./install.py --clang-completer\n~~~\n\n\n## 3.3 Snippets 登场\n\n\nPlugin 'SirVer/ultisnips'\nPlugin 'honza/vim-snippets'\n\n然后在.vimrc里面写\n\n~~~bash\nfunction! g:UltiSnips_Complete()\n  call UltiSnips#ExpandSnippet()\n  if g:ulti_expand_res == 0\n    if pumvisible()\n      return \"\\<C-n>\"\n    else\n      call UltiSnips#JumpForwards()\n      if g:ulti_jump_forwards_res == 0\n        return \"\\<TAB>\"\n      endif\n    endif\n  endif\n  return \"\"\nendfunction\n\nfunction! g:UltiSnips_Reverse()\n  call UltiSnips#JumpBackwards()\n  if g:ulti_jump_backwards_res == 0\n    return \"\\<C-P>\"\n  endif\n\n  return \"\"\nendfunction\n\n\nif !exists(\"g:UltiSnipsJumpForwardTrigger\")\n  let g:UltiSnipsJumpForwardTrigger = \"<tab>\"\nendif\nif !exists(\"g:UltiSnipsJumpBackwardTrigger\")\n  let g:UltiSnipsJumpBackwardTrigger=\"<s-tab>\"\nendif\n\nau InsertEnter * exec \"inoremap <silent> \" . g:UltiSnipsExpandTrigger     . \" <C-R>=g:UltiSnips_Complete()<cr>\"\nau InsertEnter * exec \"inoremap <silent> \" .     g:UltiSnipsJumpBackwardTrigger . \" <C-R>=g:UltiSnips_Reverse()<cr>\"\n\n\" 如果有snips，直接按tab键就可以完成添加\n\" tab键往下走，shfit+tab键往上走\n~~~\n\n### 3.3.1 自定义 Snippets\n\n~~~bash\nmkdir ~/.vim/UltiSnips\n\ntouch ~/.vim/UltiSnips markdown.snippets\n~~~\n# 意外的问题:\n\n## 退格键失灵\n\n那么通关密码是在~/.vimrc中加上set backspace=2。恭喜！你的问题就此解决.\n","slug":"0006VimArrangement","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0b1000bc5cc9md7vv89","content":"<blockquote class=\"blockquote-center\">本来想要是小清新的Vim, 后来终于在经常要远端ssh工作的动力之下, 忍不住想要对Vim动手了…</blockquote>\n\n<h1 id=\"1-安装插件管理系统-Bundle\"><a href=\"#1-安装插件管理系统-Bundle\" class=\"headerlink\" title=\"1. 安装插件管理系统 Bundle\"></a>1. 安装插件管理系统 Bundle</h1><p>第一步, 肯定是先要下载啦!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</div></pre></td></tr></table></figure>\n<p>第二部, 对 <strong>.vimrc</strong> 进行编辑</p>\n<p>我的vim.rc参考设置:</p>\n<p><a href=\"https://github.com/Aliciahan/Snippets\" target=\"_blank\" rel=\"external\">Alicia’s GitHub Snippets</a></p>\n<p>完成啦….</p>\n<h1 id=\"2-插件的列表哪里找\"><a href=\"#2-插件的列表哪里找\" class=\"headerlink\" title=\"2. 插件的列表哪里找?\"></a>2. 插件的列表哪里找?</h1><p><a href=\"http://vim-scripts.org/vim/scripts.html\" target=\"_blank\" rel=\"external\">山东蓝翔在青岛…</a></p>\n<h1 id=\"3-必要的插件们\"><a href=\"#3-必要的插件们\" class=\"headerlink\" title=\"3. 必要的插件们\"></a>3. 必要的插件们</h1><h2 id=\"3-1-目录树\"><a href=\"#3-1-目录树\" class=\"headerlink\" title=\"3.1 目录树\"></a>3.1 目录树</h2><p>** vim-script/The-NERD-tree</p>\n<p>具体的用法可以参照 <a href=\"https://my.oschina.net/VASKS/blog/388907\" target=\"_blank\" rel=\"external\">这个</a>来搞 简单地转载一下:</p>\n<h3 id=\"3-1-1-打开方式\"><a href=\"#3-1-1-打开方式\" class=\"headerlink\" title=\"3.1.1 打开方式\"></a>3.1.1 打开方式</h3><p>安装好后，命令行中输入vim，打开vim后，在vim中输入:NERDTree，你就可以看到NERDTree的效果了。</p>\n<p>为了方便起见，我们设置一下快捷键，在~/.vimrc 文件中添加下面内容， 我的centos6.6还是没有这个~/.vimrc，没关系，创建一个，直接 vim ~/.vimrc 然后添加</p>\n<blockquote>\n<p>“ NERDTree map <f10> :NERDTreeToggle<cr></cr></f10></p>\n</blockquote>\n<p>这样打开vim后，只要按键盘上的F10就可以显示和隐藏NERDTree的文件浏览了.</p>\n<h3 id=\"3-1-2-一些玩儿法\"><a href=\"#3-1-2-一些玩儿法\" class=\"headerlink\" title=\"3.1.2 一些玩儿法\"></a>3.1.2 一些玩儿法</h3><ul>\n<li>t: 在新tab中打开</li>\n<li>Ctrl+w+w : 切换Tab</li>\n</ul>\n<p>其实这两个就够玩儿了. 再加上</p>\n<ul>\n<li>tabp: tab Previous</li>\n<li>tabn: tab Next</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctrl + w + h    光标 focus 左侧树形目录</div><div class=\"line\">ctrl + w + l    光标 focus 右侧文件显示窗口</div><div class=\"line\">ctrl + w + w    光标自动在左右侧窗口切换</div><div class=\"line\">ctrl + w + r    移动当前窗口的布局位置</div><div class=\"line\">o       在已有窗口中打开文件、目录或书签，并跳到该窗口</div><div class=\"line\">go      在已有窗口 中打开文件、目录或书签，但不跳到该窗口</div><div class=\"line\">t       在新 Tab 中打开选中文件/书签，并跳到新 Tab</div><div class=\"line\">T       在新 Tab 中打开选中文件/书签，但不跳到新 Tab</div><div class=\"line\">i       split 一个新窗口打开选中文件，并跳到该窗口</div><div class=\"line\">gi      split 一个新窗口打开选中文件，但不跳到该窗口</div><div class=\"line\">s       vsplit 一个新窗口打开选中文件，并跳到该窗口</div><div class=\"line\">gs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口</div><div class=\"line\">!       执行当前文件</div><div class=\"line\">O       递归打开选中 结点下的所有目录</div><div class=\"line\">x       合拢选中结点的父目录</div><div class=\"line\">X       递归 合拢选中结点下的所有目录</div><div class=\"line\">e       Edit the current dif</div><div class=\"line\">双击    相当于 NERDTree-o</div><div class=\"line\">中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree<span class=\"_\">-e</span></div><div class=\"line\">D       删除当前书签</div><div class=\"line\">P       跳到根结点</div><div class=\"line\">p       跳到父结点</div><div class=\"line\">K       跳到当前目录下同级的第一个结点</div><div class=\"line\">J       跳到当前目录下同级的最后一个结点</div><div class=\"line\">k       跳到当前目录下同级的前一个结点</div><div class=\"line\">j       跳到当前目录下同级的后一个结点</div><div class=\"line\">C       将选中目录或选中文件的父目录设为根结点</div><div class=\"line\">u       将当前根结点的父目录设为根目录，并变成合拢原根结点</div><div class=\"line\">U       将当前根结点的父目录设为根目录，但保持展开原根结点</div><div class=\"line\">r       递归刷新选中目录</div><div class=\"line\">R       递归刷新根结点</div><div class=\"line\">m       显示文件系统菜单</div><div class=\"line\"><span class=\"built_in\">cd</span>      将 CWD 设为选中目录</div><div class=\"line\">I       切换是否显示隐藏文件</div><div class=\"line\">f       切换是否使用文件过滤器</div><div class=\"line\">F       切换是否显示文件</div><div class=\"line\">B       切换是否显示书签</div><div class=\"line\">q       关闭 NerdTree 窗口</div><div class=\"line\">?       切换是否显示 Quick Help</div><div class=\"line\"></div><div class=\"line\">------------</div><div class=\"line\">:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab</div><div class=\"line\">:tabc   关闭当前的 tab</div><div class=\"line\">:tabo   关闭所有其他的 tab</div><div class=\"line\">:tabs   查看所有打开的 tab</div><div class=\"line\">:tabp   前一个 tab</div><div class=\"line\">:tabn   后一个 tab</div></pre></td></tr></table></figure>\n<p>在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）</p>\n<blockquote>\n<p>autocmd VimEnter * NERDTree</p>\n</blockquote>\n<p>按下 F2 调出/隐藏</p>\n<blockquote>\n<p>NERDTree map :silent! NERDTreeToggle</p>\n</blockquote>\n<p>“ 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）</p>\n<blockquote>\n<p>let NERDTreeWinPos=”right”</p>\n</blockquote>\n<p>“ 当打开 NERDTree 窗口时，自动显示 Bookmarks</p>\n<blockquote>\n<p>let NERDTreeShowBookmarks=1</p>\n</blockquote>\n<h2 id=\"3-2-重头戏-YCM自动补全\"><a href=\"#3-2-重头戏-YCM自动补全\" class=\"headerlink\" title=\"3.2 重头戏 YCM自动补全\"></a>3.2 重头戏 YCM自动补全</h2><p>YouCompleteMe是Google里面一个大神搞的. 超级麻烦的一个东西,  Git在 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"external\">这里</a> 插件名称: ‘Valloric/YouCompleteMe’</p>\n<p>安装时后, 需要的vim版本很高, 可以用brew或者port来安装, 装好了之后, 不需要动系统自带的vim, 也不用做ln, 直接alias就行:</p>\n<p>放到.bash_profile里面就了事儿.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> vim=<span class=\"string\">'/opt/local/bin/vim'</span></div></pre></td></tr></table></figure>\n<p>然后还要编译?! 真他喵的高端啊….</p>\n<p>反正按照上面做就行了 以下几点注意</p>\n<ul>\n<li>CMake 要安装, brew install cmake 搞定</li>\n<li>python 需要有</li>\n<li>clang貌似是肯定要.</li>\n</ul>\n<h3 id=\"3-2-1-For-Linux\"><a href=\"#3-2-1-For-Linux\" class=\"headerlink\" title=\"3.2.1 For Linux\"></a>3.2.1 For Linux</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Install Vundle Then</span></div><div class=\"line\"><span class=\"comment\"># Plgin 'Valloric/YouCompleteMe'</span></div><div class=\"line\"><span class=\"comment\"># :PluginInstall</span></div><div class=\"line\"></div><div class=\"line\">sudo apt-get install build-essential cmake</div><div class=\"line\">sudo apt-get install python-dev python3-dev</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/YouCompleteMe</div><div class=\"line\">./install.py --clang-completer</div></pre></td></tr></table></figure>\n<h3 id=\"3-2-2-For-Mac-OS\"><a href=\"#3-2-2-For-Mac-OS\" class=\"headerlink\" title=\"3.2.2 For Mac OS\"></a>3.2.2 For Mac OS</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/YouCompleteMe</div><div class=\"line\">./install.py --clang-completer</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-Snippets-登场\"><a href=\"#3-3-Snippets-登场\" class=\"headerlink\" title=\"3.3 Snippets 登场\"></a>3.3 Snippets 登场</h2><p>Plugin ‘SirVer/ultisnips’<br>Plugin ‘honza/vim-snippets’</p>\n<p>然后在.vimrc里面写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">function</span>! g:UltiSnips_Complete()</div><div class=\"line\">  call UltiSnips<span class=\"comment\">#ExpandSnippet()</span></div><div class=\"line\">  <span class=\"keyword\">if</span> g:ulti_expand_res == 0</div><div class=\"line\">    <span class=\"keyword\">if</span> pumvisible()</div><div class=\"line\">      <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;C-n&gt;\"</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">      call UltiSnips<span class=\"comment\">#JumpForwards()</span></div><div class=\"line\">      <span class=\"keyword\">if</span> g:ulti_jump_forwards_res == 0</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;TAB&gt;\"</span></div><div class=\"line\">      endif</div><div class=\"line\">    endif</div><div class=\"line\">  endif</div><div class=\"line\">  <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span></div><div class=\"line\">endfunction</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">function</span>! g:UltiSnips_Reverse()</div><div class=\"line\">  call UltiSnips<span class=\"comment\">#JumpBackwards()</span></div><div class=\"line\">  <span class=\"keyword\">if</span> g:ulti_jump_backwards_res == 0</div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;C-P&gt;\"</span></div><div class=\"line\">  endif</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span></div><div class=\"line\">endfunction</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">\"g:UltiSnipsJumpForwardTrigger\"</span>)</div><div class=\"line\">  <span class=\"built_in\">let</span> g:UltiSnipsJumpForwardTrigger = <span class=\"string\">\"&lt;tab&gt;\"</span></div><div class=\"line\">endif</div><div class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">\"g:UltiSnipsJumpBackwardTrigger\"</span>)</div><div class=\"line\">  <span class=\"built_in\">let</span> g:UltiSnipsJumpBackwardTrigger=<span class=\"string\">\"&lt;s-tab&gt;\"</span></div><div class=\"line\">endif</div><div class=\"line\"></div><div class=\"line\">au InsertEnter * <span class=\"built_in\">exec</span> <span class=\"string\">\"inoremap &lt;silent&gt; \"</span> . g:UltiSnipsExpandTrigger     . <span class=\"string\">\" &lt;C-R&gt;=g:UltiSnips_Complete()&lt;cr&gt;\"</span></div><div class=\"line\">au InsertEnter * <span class=\"built_in\">exec</span> <span class=\"string\">\"inoremap &lt;silent&gt; \"</span> .     g:UltiSnipsJumpBackwardTrigger . <span class=\"string\">\" &lt;C-R&gt;=g:UltiSnips_Reverse()&lt;cr&gt;\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\" 如果有snips，直接按tab键就可以完成添加</span></div><div class=\"line\">\" tab键往下走，shfit+tab键往上走</div></pre></td></tr></table></figure>\n<h3 id=\"3-3-1-自定义-Snippets\"><a href=\"#3-3-1-自定义-Snippets\" class=\"headerlink\" title=\"3.3.1 自定义 Snippets\"></a>3.3.1 自定义 Snippets</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/.vim/UltiSnips</div><div class=\"line\"></div><div class=\"line\">touch ~/.vim/UltiSnips markdown.snippets</div></pre></td></tr></table></figure>\n<h1 id=\"意外的问题\"><a href=\"#意外的问题\" class=\"headerlink\" title=\"意外的问题:\"></a>意外的问题:</h1><h2 id=\"退格键失灵\"><a href=\"#退格键失灵\" class=\"headerlink\" title=\"退格键失灵\"></a>退格键失灵</h2><p>那么通关密码是在~/.vimrc中加上set backspace=2。恭喜！你的问题就此解决.</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">本来想要是小清新的Vim, 后来终于在经常要远端ssh工作的动力之下, 忍不住想要对Vim动手了…</blockquote>\n\n<h1 id=\"1-安装插件管理系统-Bundle\"><a href=\"#1-安装插件管理系统-Bundle\" class=\"headerlink\" title=\"1. 安装插件管理系统 Bundle\"></a>1. 安装插件管理系统 Bundle</h1><p>第一步, 肯定是先要下载啦!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</div></pre></td></tr></table></figure>\n<p>第二部, 对 <strong>.vimrc</strong> 进行编辑</p>\n<p>我的vim.rc参考设置:</p>\n<p><a href=\"https://github.com/Aliciahan/Snippets\" target=\"_blank\" rel=\"external\">Alicia’s GitHub Snippets</a></p>\n<p>完成啦….</p>\n<h1 id=\"2-插件的列表哪里找\"><a href=\"#2-插件的列表哪里找\" class=\"headerlink\" title=\"2. 插件的列表哪里找?\"></a>2. 插件的列表哪里找?</h1><p><a href=\"http://vim-scripts.org/vim/scripts.html\" target=\"_blank\" rel=\"external\">山东蓝翔在青岛…</a></p>\n<h1 id=\"3-必要的插件们\"><a href=\"#3-必要的插件们\" class=\"headerlink\" title=\"3. 必要的插件们\"></a>3. 必要的插件们</h1><h2 id=\"3-1-目录树\"><a href=\"#3-1-目录树\" class=\"headerlink\" title=\"3.1 目录树\"></a>3.1 目录树</h2><p>** vim-script/The-NERD-tree</p>\n<p>具体的用法可以参照 <a href=\"https://my.oschina.net/VASKS/blog/388907\" target=\"_blank\" rel=\"external\">这个</a>来搞 简单地转载一下:</p>\n<h3 id=\"3-1-1-打开方式\"><a href=\"#3-1-1-打开方式\" class=\"headerlink\" title=\"3.1.1 打开方式\"></a>3.1.1 打开方式</h3><p>安装好后，命令行中输入vim，打开vim后，在vim中输入:NERDTree，你就可以看到NERDTree的效果了。</p>\n<p>为了方便起见，我们设置一下快捷键，在~/.vimrc 文件中添加下面内容， 我的centos6.6还是没有这个~/.vimrc，没关系，创建一个，直接 vim ~/.vimrc 然后添加</p>\n<blockquote>\n<p>“ NERDTree map <f10> :NERDTreeToggle<cr></cr></f10></p>\n</blockquote>\n<p>这样打开vim后，只要按键盘上的F10就可以显示和隐藏NERDTree的文件浏览了.</p>\n<h3 id=\"3-1-2-一些玩儿法\"><a href=\"#3-1-2-一些玩儿法\" class=\"headerlink\" title=\"3.1.2 一些玩儿法\"></a>3.1.2 一些玩儿法</h3><ul>\n<li>t: 在新tab中打开</li>\n<li>Ctrl+w+w : 切换Tab</li>\n</ul>\n<p>其实这两个就够玩儿了. 再加上</p>\n<ul>\n<li>tabp: tab Previous</li>\n<li>tabn: tab Next</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctrl + w + h    光标 focus 左侧树形目录</div><div class=\"line\">ctrl + w + l    光标 focus 右侧文件显示窗口</div><div class=\"line\">ctrl + w + w    光标自动在左右侧窗口切换</div><div class=\"line\">ctrl + w + r    移动当前窗口的布局位置</div><div class=\"line\">o       在已有窗口中打开文件、目录或书签，并跳到该窗口</div><div class=\"line\">go      在已有窗口 中打开文件、目录或书签，但不跳到该窗口</div><div class=\"line\">t       在新 Tab 中打开选中文件/书签，并跳到新 Tab</div><div class=\"line\">T       在新 Tab 中打开选中文件/书签，但不跳到新 Tab</div><div class=\"line\">i       split 一个新窗口打开选中文件，并跳到该窗口</div><div class=\"line\">gi      split 一个新窗口打开选中文件，但不跳到该窗口</div><div class=\"line\">s       vsplit 一个新窗口打开选中文件，并跳到该窗口</div><div class=\"line\">gs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口</div><div class=\"line\">!       执行当前文件</div><div class=\"line\">O       递归打开选中 结点下的所有目录</div><div class=\"line\">x       合拢选中结点的父目录</div><div class=\"line\">X       递归 合拢选中结点下的所有目录</div><div class=\"line\">e       Edit the current dif</div><div class=\"line\">双击    相当于 NERDTree-o</div><div class=\"line\">中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree<span class=\"_\">-e</span></div><div class=\"line\">D       删除当前书签</div><div class=\"line\">P       跳到根结点</div><div class=\"line\">p       跳到父结点</div><div class=\"line\">K       跳到当前目录下同级的第一个结点</div><div class=\"line\">J       跳到当前目录下同级的最后一个结点</div><div class=\"line\">k       跳到当前目录下同级的前一个结点</div><div class=\"line\">j       跳到当前目录下同级的后一个结点</div><div class=\"line\">C       将选中目录或选中文件的父目录设为根结点</div><div class=\"line\">u       将当前根结点的父目录设为根目录，并变成合拢原根结点</div><div class=\"line\">U       将当前根结点的父目录设为根目录，但保持展开原根结点</div><div class=\"line\">r       递归刷新选中目录</div><div class=\"line\">R       递归刷新根结点</div><div class=\"line\">m       显示文件系统菜单</div><div class=\"line\"><span class=\"built_in\">cd</span>      将 CWD 设为选中目录</div><div class=\"line\">I       切换是否显示隐藏文件</div><div class=\"line\">f       切换是否使用文件过滤器</div><div class=\"line\">F       切换是否显示文件</div><div class=\"line\">B       切换是否显示书签</div><div class=\"line\">q       关闭 NerdTree 窗口</div><div class=\"line\">?       切换是否显示 Quick Help</div><div class=\"line\"></div><div class=\"line\">------------</div><div class=\"line\">:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab</div><div class=\"line\">:tabc   关闭当前的 tab</div><div class=\"line\">:tabo   关闭所有其他的 tab</div><div class=\"line\">:tabs   查看所有打开的 tab</div><div class=\"line\">:tabp   前一个 tab</div><div class=\"line\">:tabn   后一个 tab</div></pre></td></tr></table></figure>\n<p>在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）</p>\n<blockquote>\n<p>autocmd VimEnter * NERDTree</p>\n</blockquote>\n<p>按下 F2 调出/隐藏</p>\n<blockquote>\n<p>NERDTree map :silent! NERDTreeToggle</p>\n</blockquote>\n<p>“ 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）</p>\n<blockquote>\n<p>let NERDTreeWinPos=”right”</p>\n</blockquote>\n<p>“ 当打开 NERDTree 窗口时，自动显示 Bookmarks</p>\n<blockquote>\n<p>let NERDTreeShowBookmarks=1</p>\n</blockquote>\n<h2 id=\"3-2-重头戏-YCM自动补全\"><a href=\"#3-2-重头戏-YCM自动补全\" class=\"headerlink\" title=\"3.2 重头戏 YCM自动补全\"></a>3.2 重头戏 YCM自动补全</h2><p>YouCompleteMe是Google里面一个大神搞的. 超级麻烦的一个东西,  Git在 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"external\">这里</a> 插件名称: ‘Valloric/YouCompleteMe’</p>\n<p>安装时后, 需要的vim版本很高, 可以用brew或者port来安装, 装好了之后, 不需要动系统自带的vim, 也不用做ln, 直接alias就行:</p>\n<p>放到.bash_profile里面就了事儿.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> vim=<span class=\"string\">'/opt/local/bin/vim'</span></div></pre></td></tr></table></figure>\n<p>然后还要编译?! 真他喵的高端啊….</p>\n<p>反正按照上面做就行了 以下几点注意</p>\n<ul>\n<li>CMake 要安装, brew install cmake 搞定</li>\n<li>python 需要有</li>\n<li>clang貌似是肯定要.</li>\n</ul>\n<h3 id=\"3-2-1-For-Linux\"><a href=\"#3-2-1-For-Linux\" class=\"headerlink\" title=\"3.2.1 For Linux\"></a>3.2.1 For Linux</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Install Vundle Then</span></div><div class=\"line\"><span class=\"comment\"># Plgin 'Valloric/YouCompleteMe'</span></div><div class=\"line\"><span class=\"comment\"># :PluginInstall</span></div><div class=\"line\"></div><div class=\"line\">sudo apt-get install build-essential cmake</div><div class=\"line\">sudo apt-get install python-dev python3-dev</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/YouCompleteMe</div><div class=\"line\">./install.py --clang-completer</div></pre></td></tr></table></figure>\n<h3 id=\"3-2-2-For-Mac-OS\"><a href=\"#3-2-2-For-Mac-OS\" class=\"headerlink\" title=\"3.2.2 For Mac OS\"></a>3.2.2 For Mac OS</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/YouCompleteMe</div><div class=\"line\">./install.py --clang-completer</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-Snippets-登场\"><a href=\"#3-3-Snippets-登场\" class=\"headerlink\" title=\"3.3 Snippets 登场\"></a>3.3 Snippets 登场</h2><p>Plugin ‘SirVer/ultisnips’<br>Plugin ‘honza/vim-snippets’</p>\n<p>然后在.vimrc里面写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">function</span>! g:UltiSnips_Complete()</div><div class=\"line\">  call UltiSnips<span class=\"comment\">#ExpandSnippet()</span></div><div class=\"line\">  <span class=\"keyword\">if</span> g:ulti_expand_res == 0</div><div class=\"line\">    <span class=\"keyword\">if</span> pumvisible()</div><div class=\"line\">      <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;C-n&gt;\"</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">      call UltiSnips<span class=\"comment\">#JumpForwards()</span></div><div class=\"line\">      <span class=\"keyword\">if</span> g:ulti_jump_forwards_res == 0</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;TAB&gt;\"</span></div><div class=\"line\">      endif</div><div class=\"line\">    endif</div><div class=\"line\">  endif</div><div class=\"line\">  <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span></div><div class=\"line\">endfunction</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">function</span>! g:UltiSnips_Reverse()</div><div class=\"line\">  call UltiSnips<span class=\"comment\">#JumpBackwards()</span></div><div class=\"line\">  <span class=\"keyword\">if</span> g:ulti_jump_backwards_res == 0</div><div class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">\"\\&lt;C-P&gt;\"</span></div><div class=\"line\">  endif</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span></div><div class=\"line\">endfunction</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">\"g:UltiSnipsJumpForwardTrigger\"</span>)</div><div class=\"line\">  <span class=\"built_in\">let</span> g:UltiSnipsJumpForwardTrigger = <span class=\"string\">\"&lt;tab&gt;\"</span></div><div class=\"line\">endif</div><div class=\"line\"><span class=\"keyword\">if</span> !exists(<span class=\"string\">\"g:UltiSnipsJumpBackwardTrigger\"</span>)</div><div class=\"line\">  <span class=\"built_in\">let</span> g:UltiSnipsJumpBackwardTrigger=<span class=\"string\">\"&lt;s-tab&gt;\"</span></div><div class=\"line\">endif</div><div class=\"line\"></div><div class=\"line\">au InsertEnter * <span class=\"built_in\">exec</span> <span class=\"string\">\"inoremap &lt;silent&gt; \"</span> . g:UltiSnipsExpandTrigger     . <span class=\"string\">\" &lt;C-R&gt;=g:UltiSnips_Complete()&lt;cr&gt;\"</span></div><div class=\"line\">au InsertEnter * <span class=\"built_in\">exec</span> <span class=\"string\">\"inoremap &lt;silent&gt; \"</span> .     g:UltiSnipsJumpBackwardTrigger . <span class=\"string\">\" &lt;C-R&gt;=g:UltiSnips_Reverse()&lt;cr&gt;\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\" 如果有snips，直接按tab键就可以完成添加</span></div><div class=\"line\">\" tab键往下走，shfit+tab键往上走</div></pre></td></tr></table></figure>\n<h3 id=\"3-3-1-自定义-Snippets\"><a href=\"#3-3-1-自定义-Snippets\" class=\"headerlink\" title=\"3.3.1 自定义 Snippets\"></a>3.3.1 自定义 Snippets</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/.vim/UltiSnips</div><div class=\"line\"></div><div class=\"line\">touch ~/.vim/UltiSnips markdown.snippets</div></pre></td></tr></table></figure>\n<h1 id=\"意外的问题\"><a href=\"#意外的问题\" class=\"headerlink\" title=\"意外的问题:\"></a>意外的问题:</h1><h2 id=\"退格键失灵\"><a href=\"#退格键失灵\" class=\"headerlink\" title=\"退格键失灵\"></a>退格键失灵</h2><p>那么通关密码是在~/.vimrc中加上set backspace=2。恭喜！你的问题就此解决.</p>\n"},{"title":"Namespace and Cgroup in Docker","_content":"\n# 1 Linux Namespace\n\n<a href=\"https://lwn.net/Articles/531114/\">Ref: Namespaces in operation</a>\n\nTo be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of *LXC* is **container**. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:\n\n | Namespace | Parameter | isolated Content |\n |:----------------|:----------------|:--------:|\n | pid namespace | CLONE_NEWPID | Process ID |\n | net namespace | CLONE_NEWNET | Network, port |\n | ipc namespace | CLONE_NEWIPC | 信号量, 消息队列, 共享内存 |\n | mnt namespace | CLONE_NEWNS | file system Mount |\n | uts namespace | CLONE_NEWUTS | host and DNS |\n | user namespace | CLONE_NEWUSER | User and group |\n\nIn fact the purpose of **namespace** is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.\n\n# 2 API of namespace\n\nThe API of namespace includes:\n\n- clone()\n- setns()\n- unshare()\n- some files in */proc*\n\nTo make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.\n\n## 2.1 What is clone() looked like\n\n~~~cpp\nint clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);\n~~~\n\n- child_func : indicate where is the main function of child function\n- child_stack : the stack which will be used by a child function.\n- flags: which CLONE_* are used?\n- args : the user's parameters\n\n\n## 2.2 /proc/[pid]/ns\n\n~~~bash\nroot@mo-e33e22ea6:/proc/57/ns# ls\ncgroup  ipc  mnt  net  pid  user  uts\n\nroot@mo-e33e22ea6:/proc/57/ns# ls -l\ntotal 0\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -> cgroup:[4026531835]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -> ipc:[4026531839]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -> mnt:[4026531840]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 net -> net:[4026531957]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -> pid:[4026531836]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 user -> user:[4026531837]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -> uts:[4026531838]\n~~~\n\nIf two pids pointed to the same series number, means that they are in the same namespace.\n\n一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?\n\n~~~bash\ntouch ~/uts\nmount --bind /proc/27514/ns/uts ~/uts\n~~~\n\n## 2.3 Join a namespace with setns()\n\nFrom 2.2, we can see that with **mount** operation, we can keep a namespace living. We can join this living namespace with function **setns()**\n\n~~~cpp\nint setns(int fd, int nstype);\n~~~\n\n- int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns\n- int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.\n\n~~~go\nfd = open(argv[1], O_RDONLY);   /* 获取namespace文件描述符 */\nsetns(fd, 0);                   /* 加入新的namespace */\nexecvp(argv[2], &argv[2]);      /* 执行程序 */\n~~~\n\nexecvp() can execute the command from user. Assume the programme has a name of setns :\n\n~~~bash\n./setns ~/uts /bin/bash\n~~~\n\nThis will allow us running bash commands in the namespace indicated.\n\n## 2.4 Using unshare()\n\n~~~cpp\nint unshare(int flags);\n~~~\n不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a **unshare** command, it is originated from the unshare() function.\n\n## 2.5 fork()\n\n这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.\n\nfork的特点是:*被调用一次, 但是返回两次*. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:\n\n1. 在父进程中,fork返回子进程的进程ID\n2. 子进程之中, fork返回0\n3. 如果出现错误, fork返回一个负值.\n\n~~~cpp\n#include <unistd.h>\n#include <stdio.h>\nint main (){\n    pid_t fpid; //fpid表示fork函数返回的值\n    int count=0;\n    fpid=fork();\n    if (fpid < 0)printf(\"error in fork!\");\n    else if (fpid == 0) {\n        printf(\"I am child. Process id is %d/n\",getpid());\n    }\n    else {\n        printf(\"i am parent. Process id is %d/n\",getpid());\n    }\n    return 0;\n}\n\nroot@local:~# gcc -Wall fork_example.c && ./a.out\nI am parent. Process id is 28365\nI am child. Process id is 28366\n~~~\n\n\n# 3 Six types Namespace\n\n## 3.1 UTS Unix Time-sharing System Namespace\n\n\n~~~cpp\n#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <stdio.h>\n#include <sched.h>\n#include <signal.h>\n#include <unistd.h>\n\n#define STACK_SIZE (1024 * 1024)\n\nstatic char child_stack[STACK_SIZE];\nchar* const child_args[] = {\n        \"/bin/bash\",\n        NULL\n};\n\nint child_main(void* args) {\n        printf(\"In the Child Process!\\n\");\n        sethostname(\"Changed Namespace\",12);\n        execv(child_args[0], child_args);\n        return 1;\n}\n\nint main() {\n        printf(\"In the parent Process, BEGIN! \\n\");\n        int child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, NULL);\n        waitpid(child_pid, NULL, 0);\n        printf(\"Over\\n\");\n        return 0;\n}\n~~~\n\n~~~bash\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# gcc -Wall uts.c -o utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ls\nuts.c  utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ./utsNamespace\nIn the parent Process, BEGIN!\nIn the Child Process!\nroot@Changed Name:/home/i340738/NameSpaceLearning# exit\nexit\nOver\n~~~\n\n通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.\n\n# Reference\n\n## Links :\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\">Namespace Isolation</a>\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\">Cgroup resource isolation</a>\n\n## Code\n\n### Join\n\n~~~cpp\n/* ns_exec.c\n\n   Copyright 2013, Michael Kerrisk\n   Licensed under GNU General Public License v2 or later\n\n   Join a namespace and execute a command in the namespace\n*/\n#define _GNU_SOURCE\n#include <fcntl.h>\n#include <sched.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n/* A simple error-handling function: print an error message based\n   on the value in 'errno' and terminate the calling process */\n\n#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\\n                        } while (0)\n\nint main(int argc, char *argv[])\n{\n    int fd;\n\n    if (argc < 3) {\n        fprintf(stderr, \"%s /proc/PID/ns/FILE cmd [arg...]\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    fd = open(argv[1], O_RDONLY);   /* Get descriptor for namespace */\n    if (fd == -1)\n        errExit(\"open\");\n\n    if (setns(fd, 0) == -1)         /* Join that namespace */\n        errExit(\"setns\");\n\n    execvp(argv[2], &argv[2]);      /* Execute a command in namespace */\n    errExit(\"execvp\");\n}\n~~~\n","source":"_posts/0007DockerNameSpace.md","raw":"---\n  title: Namespace and Cgroup in Docker\n  categories: Docker\n  tags:\n    - docker\n    - supervisor\n    - monitoring\n---\n\n# 1 Linux Namespace\n\n<a href=\"https://lwn.net/Articles/531114/\">Ref: Namespaces in operation</a>\n\nTo be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of *LXC* is **container**. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:\n\n | Namespace | Parameter | isolated Content |\n |:----------------|:----------------|:--------:|\n | pid namespace | CLONE_NEWPID | Process ID |\n | net namespace | CLONE_NEWNET | Network, port |\n | ipc namespace | CLONE_NEWIPC | 信号量, 消息队列, 共享内存 |\n | mnt namespace | CLONE_NEWNS | file system Mount |\n | uts namespace | CLONE_NEWUTS | host and DNS |\n | user namespace | CLONE_NEWUSER | User and group |\n\nIn fact the purpose of **namespace** is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.\n\n# 2 API of namespace\n\nThe API of namespace includes:\n\n- clone()\n- setns()\n- unshare()\n- some files in */proc*\n\nTo make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.\n\n## 2.1 What is clone() looked like\n\n~~~cpp\nint clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);\n~~~\n\n- child_func : indicate where is the main function of child function\n- child_stack : the stack which will be used by a child function.\n- flags: which CLONE_* are used?\n- args : the user's parameters\n\n\n## 2.2 /proc/[pid]/ns\n\n~~~bash\nroot@mo-e33e22ea6:/proc/57/ns# ls\ncgroup  ipc  mnt  net  pid  user  uts\n\nroot@mo-e33e22ea6:/proc/57/ns# ls -l\ntotal 0\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -> cgroup:[4026531835]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -> ipc:[4026531839]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -> mnt:[4026531840]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 net -> net:[4026531957]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -> pid:[4026531836]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 user -> user:[4026531837]\nlrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -> uts:[4026531838]\n~~~\n\nIf two pids pointed to the same series number, means that they are in the same namespace.\n\n一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?\n\n~~~bash\ntouch ~/uts\nmount --bind /proc/27514/ns/uts ~/uts\n~~~\n\n## 2.3 Join a namespace with setns()\n\nFrom 2.2, we can see that with **mount** operation, we can keep a namespace living. We can join this living namespace with function **setns()**\n\n~~~cpp\nint setns(int fd, int nstype);\n~~~\n\n- int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns\n- int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.\n\n~~~go\nfd = open(argv[1], O_RDONLY);   /* 获取namespace文件描述符 */\nsetns(fd, 0);                   /* 加入新的namespace */\nexecvp(argv[2], &argv[2]);      /* 执行程序 */\n~~~\n\nexecvp() can execute the command from user. Assume the programme has a name of setns :\n\n~~~bash\n./setns ~/uts /bin/bash\n~~~\n\nThis will allow us running bash commands in the namespace indicated.\n\n## 2.4 Using unshare()\n\n~~~cpp\nint unshare(int flags);\n~~~\n不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a **unshare** command, it is originated from the unshare() function.\n\n## 2.5 fork()\n\n这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.\n\nfork的特点是:*被调用一次, 但是返回两次*. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:\n\n1. 在父进程中,fork返回子进程的进程ID\n2. 子进程之中, fork返回0\n3. 如果出现错误, fork返回一个负值.\n\n~~~cpp\n#include <unistd.h>\n#include <stdio.h>\nint main (){\n    pid_t fpid; //fpid表示fork函数返回的值\n    int count=0;\n    fpid=fork();\n    if (fpid < 0)printf(\"error in fork!\");\n    else if (fpid == 0) {\n        printf(\"I am child. Process id is %d/n\",getpid());\n    }\n    else {\n        printf(\"i am parent. Process id is %d/n\",getpid());\n    }\n    return 0;\n}\n\nroot@local:~# gcc -Wall fork_example.c && ./a.out\nI am parent. Process id is 28365\nI am child. Process id is 28366\n~~~\n\n\n# 3 Six types Namespace\n\n## 3.1 UTS Unix Time-sharing System Namespace\n\n\n~~~cpp\n#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <stdio.h>\n#include <sched.h>\n#include <signal.h>\n#include <unistd.h>\n\n#define STACK_SIZE (1024 * 1024)\n\nstatic char child_stack[STACK_SIZE];\nchar* const child_args[] = {\n        \"/bin/bash\",\n        NULL\n};\n\nint child_main(void* args) {\n        printf(\"In the Child Process!\\n\");\n        sethostname(\"Changed Namespace\",12);\n        execv(child_args[0], child_args);\n        return 1;\n}\n\nint main() {\n        printf(\"In the parent Process, BEGIN! \\n\");\n        int child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, NULL);\n        waitpid(child_pid, NULL, 0);\n        printf(\"Over\\n\");\n        return 0;\n}\n~~~\n\n~~~bash\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# gcc -Wall uts.c -o utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ls\nuts.c  utsNamespace\nroot@mo-e33e22ea6:/home/i340738/NameSpaceLearning# ./utsNamespace\nIn the parent Process, BEGIN!\nIn the Child Process!\nroot@Changed Name:/home/i340738/NameSpaceLearning# exit\nexit\nOver\n~~~\n\n通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.\n\n# Reference\n\n## Links :\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\">Namespace Isolation</a>\n<a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\">Cgroup resource isolation</a>\n\n## Code\n\n### Join\n\n~~~cpp\n/* ns_exec.c\n\n   Copyright 2013, Michael Kerrisk\n   Licensed under GNU General Public License v2 or later\n\n   Join a namespace and execute a command in the namespace\n*/\n#define _GNU_SOURCE\n#include <fcntl.h>\n#include <sched.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n/* A simple error-handling function: print an error message based\n   on the value in 'errno' and terminate the calling process */\n\n#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\\n                        } while (0)\n\nint main(int argc, char *argv[])\n{\n    int fd;\n\n    if (argc < 3) {\n        fprintf(stderr, \"%s /proc/PID/ns/FILE cmd [arg...]\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    fd = open(argv[1], O_RDONLY);   /* Get descriptor for namespace */\n    if (fd == -1)\n        errExit(\"open\");\n\n    if (setns(fd, 0) == -1)         /* Join that namespace */\n        errExit(\"setns\");\n\n    execvp(argv[2], &argv[2]);      /* Execute a command in namespace */\n    errExit(\"execvp\");\n}\n~~~\n","slug":"0007DockerNameSpace","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0b6000dc5cctxg6oksz","content":"<h1 id=\"1-Linux-Namespace\"><a href=\"#1-Linux-Namespace\" class=\"headerlink\" title=\"1 Linux Namespace\"></a>1 Linux Namespace</h1><p><a href=\"https://lwn.net/Articles/531114/\" target=\"_blank\" rel=\"external\">Ref: Namespaces in operation</a></p>\n<p>To be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of <em>LXC</em> is <strong>container</strong>. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Namespace</th>\n<th style=\"text-align:left\">Parameter</th>\n<th style=\"text-align:center\">isolated Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pid namespace</td>\n<td style=\"text-align:left\">CLONE_NEWPID</td>\n<td style=\"text-align:center\">Process ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">net namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNET</td>\n<td style=\"text-align:center\">Network, port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ipc namespace</td>\n<td style=\"text-align:left\">CLONE_NEWIPC</td>\n<td style=\"text-align:center\">信号量, 消息队列, 共享内存</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNS</td>\n<td style=\"text-align:center\">file system Mount</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uts namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUTS</td>\n<td style=\"text-align:center\">host and DNS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUSER</td>\n<td style=\"text-align:center\">User and group</td>\n</tr>\n</tbody>\n</table>\n<p>In fact the purpose of <strong>namespace</strong> is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.</p>\n<h1 id=\"2-API-of-namespace\"><a href=\"#2-API-of-namespace\" class=\"headerlink\" title=\"2 API of namespace\"></a>2 API of namespace</h1><p>The API of namespace includes:</p>\n<ul>\n<li>clone()</li>\n<li>setns()</li>\n<li>unshare()</li>\n<li>some files in <em>/proc</em></li>\n</ul>\n<p>To make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.</p>\n<h2 id=\"2-1-What-is-clone-looked-like\"><a href=\"#2-1-What-is-clone-looked-like\" class=\"headerlink\" title=\"2.1 What is clone() looked like\"></a>2.1 What is clone() looked like</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">int clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);</div></pre></td></tr></table></figure>\n<ul>\n<li>child_func : indicate where is the main function of child function</li>\n<li>child_stack : the stack which will be used by a child function.</li>\n<li>flags: which CLONE_* are used?</li>\n<li>args : the user’s parameters</li>\n</ul>\n<h2 id=\"2-2-proc-pid-ns\"><a href=\"#2-2-proc-pid-ns\" class=\"headerlink\" title=\"2.2 /proc/[pid]/ns\"></a>2.2 /proc/[pid]/ns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls</span></div><div class=\"line\">cgroup  ipc  mnt  net  pid  user  uts</div><div class=\"line\"></div><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls -l</span></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -&gt; cgroup:[4026531835]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -&gt; ipc:[4026531839]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -&gt; mnt:[4026531840]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 net -&gt; net:[4026531957]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -&gt; pid:[4026531836]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 user -&gt; user:[4026531837]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -&gt; uts:[4026531838]</div></pre></td></tr></table></figure>\n<p>If two pids pointed to the same series number, means that they are in the same namespace.</p>\n<p>一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch ~/uts</div><div class=\"line\">mount --<span class=\"built_in\">bind</span> /proc/27514/ns/uts ~/uts</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-Join-a-namespace-with-setns\"><a href=\"#2-3-Join-a-namespace-with-setns\" class=\"headerlink\" title=\"2.3 Join a namespace with setns()\"></a>2.3 Join a namespace with setns()</h2><p>From 2.2, we can see that with <strong>mount</strong> operation, we can keep a namespace living. We can join this living namespace with function <strong>setns()</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">setns</span><span class=\"params\">(<span class=\"keyword\">int</span> fd, <span class=\"keyword\">int</span> nstype)</span></span>;</div></pre></td></tr></table></figure>\n<ul>\n<li>int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns</li>\n<li>int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* 获取namespace文件描述符 */</span></div><div class=\"line\">setns(fd, <span class=\"number\">0</span>);                   <span class=\"comment\">/* 加入新的namespace */</span></div><div class=\"line\">execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* 执行程序 */</span></div></pre></td></tr></table></figure>\n<p>execvp() can execute the command from user. Assume the programme has a name of setns :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./setns ~/uts /bin/bash</div></pre></td></tr></table></figure>\n<p>This will allow us running bash commands in the namespace indicated.</p>\n<h2 id=\"2-4-Using-unshare\"><a href=\"#2-4-Using-unshare\" class=\"headerlink\" title=\"2.4 Using unshare()\"></a>2.4 Using unshare()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">unshare</span><span class=\"params\">(<span class=\"keyword\">int</span> flags)</span></span>;</div></pre></td></tr></table></figure>\n<p>不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a <strong>unshare</strong> command, it is originated from the unshare() function.</p>\n<h2 id=\"2-5-fork\"><a href=\"#2-5-fork\" class=\"headerlink\" title=\"2.5 fork()\"></a>2.5 fork()</h2><p>这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.</p>\n<p>fork的特点是:<em>被调用一次, 但是返回两次</em>. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:</p>\n<ol>\n<li>在父进程中,fork返回子进程的进程ID</li>\n<li>子进程之中, fork返回0</li>\n<li>如果出现错误, fork返回一个负值.</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">pid_t</span> fpid; <span class=\"comment\">//fpid表示fork函数返回的值</span></div><div class=\"line\">    <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</div><div class=\"line\">    fpid=fork();</div><div class=\"line\">    <span class=\"keyword\">if</span> (fpid &lt; <span class=\"number\">0</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">\"error in fork!\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fpid == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"I am child. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i am parent. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">root@local:~<span class=\"meta\"># gcc -Wall fork_example.c &amp;&amp; ./a.out</span></div><div class=\"line\">I am parent. Process id is <span class=\"number\">28365</span></div><div class=\"line\">I am child. Process id is <span class=\"number\">28366</span></div></pre></td></tr></table></figure>\n<h1 id=\"3-Six-types-Namespace\"><a href=\"#3-Six-types-Namespace\" class=\"headerlink\" title=\"3 Six types Namespace\"></a>3 Six types Namespace</h1><h2 id=\"3-1-UTS-Unix-Time-sharing-System-Namespace\"><a href=\"#3-1-UTS-Unix-Time-sharing-System-Namespace\" class=\"headerlink\" title=\"3.1 UTS Unix Time-sharing System Namespace\"></a>3.1 UTS Unix Time-sharing System Namespace</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;signal.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_SIZE (1024 * 1024)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> child_stack[STACK_SIZE];</div><div class=\"line\"><span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> child_args[] = &#123;</div><div class=\"line\">        <span class=\"string\">\"/bin/bash\"</span>,</div><div class=\"line\">        <span class=\"literal\">NULL</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">child_main</span><span class=\"params\">(<span class=\"keyword\">void</span>* args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the Child Process!\\n\"</span>);</div><div class=\"line\">        sethostname(<span class=\"string\">\"Changed Namespace\"</span>,<span class=\"number\">12</span>);</div><div class=\"line\">        execv(child_args[<span class=\"number\">0</span>], child_args);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the parent Process, BEGIN! \\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, <span class=\"literal\">NULL</span>);</div><div class=\"line\">        waitpid(child_pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Over\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># gcc -Wall uts.c -o utsNamespace</span></div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ls</span></div><div class=\"line\">uts.c  utsNamespace</div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ./utsNamespace</span></div><div class=\"line\">In the parent Process, BEGIN!</div><div class=\"line\">In the Child Process!</div><div class=\"line\">root@Changed Name:/home/i340738/NameSpaceLearning<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">exit</span></div><div class=\"line\">Over</div></pre></td></tr></table></figure>\n<p>通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Links\"><a href=\"#Links\" class=\"headerlink\" title=\"Links :\"></a>Links :</h2><p><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\" target=\"_blank\" rel=\"external\">Namespace Isolation</a><br><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\" target=\"_blank\" rel=\"external\">Cgroup resource isolation</a></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><h3 id=\"Join\"><a href=\"#Join\" class=\"headerlink\" title=\"Join\"></a>Join</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* ns_exec.c</span></div><div class=\"line\"></div><div class=\"line\">   Copyright 2013, Michael Kerrisk</div><div class=\"line\">   Licensed under GNU General Public License v2 or later</div><div class=\"line\"></div><div class=\"line\">   Join a namespace and execute a command in the namespace</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* A simple error-handling function: print an error message based</span></div><div class=\"line\">   on the value in 'errno' and terminate the calling process */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> errExit(msg)    do &#123; perror(msg); exit(EXIT_FAILURE); \\</span></div><div class=\"line\">                        &#125; while (0)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> fd;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (argc &lt; <span class=\"number\">3</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"%s /proc/PID/ns/FILE cmd [arg...]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* Get descriptor for namespace */</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (fd == <span class=\"number\">-1</span>)</div><div class=\"line\">        errExit(<span class=\"string\">\"open\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (setns(fd, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)         <span class=\"comment\">/* Join that namespace */</span></div><div class=\"line\">        errExit(<span class=\"string\">\"setns\"</span>);</div><div class=\"line\"></div><div class=\"line\">    execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* Execute a command in namespace */</span></div><div class=\"line\">    errExit(<span class=\"string\">\"execvp\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-Linux-Namespace\"><a href=\"#1-Linux-Namespace\" class=\"headerlink\" title=\"1 Linux Namespace\"></a>1 Linux Namespace</h1><p><a href=\"https://lwn.net/Articles/531114/\" target=\"_blank\" rel=\"external\">Ref: Namespaces in operation</a></p>\n<p>To be independent one and another, the VM solution is to virtualize CPU, MEM etc. The answer of <em>LXC</em> is <strong>container</strong>. Precisely speaking : <strong><font color=\"magenta\">kernel namespace</font></strong> including:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Namespace</th>\n<th style=\"text-align:left\">Parameter</th>\n<th style=\"text-align:center\">isolated Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pid namespace</td>\n<td style=\"text-align:left\">CLONE_NEWPID</td>\n<td style=\"text-align:center\">Process ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">net namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNET</td>\n<td style=\"text-align:center\">Network, port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ipc namespace</td>\n<td style=\"text-align:left\">CLONE_NEWIPC</td>\n<td style=\"text-align:center\">信号量, 消息队列, 共享内存</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt namespace</td>\n<td style=\"text-align:left\">CLONE_NEWNS</td>\n<td style=\"text-align:center\">file system Mount</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uts namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUTS</td>\n<td style=\"text-align:center\">host and DNS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user namespace</td>\n<td style=\"text-align:left\">CLONE_NEWUSER</td>\n<td style=\"text-align:center\">User and group</td>\n</tr>\n</tbody>\n</table>\n<p>In fact the purpose of <strong>namespace</strong> is to provide a basic light virtualization, the components in the same namespace know each other, but having 0 information out of the current namespace.</p>\n<h1 id=\"2-API-of-namespace\"><a href=\"#2-API-of-namespace\" class=\"headerlink\" title=\"2 API of namespace\"></a>2 API of namespace</h1><p>The API of namespace includes:</p>\n<ul>\n<li>clone()</li>\n<li>setns()</li>\n<li>unshare()</li>\n<li>some files in <em>/proc</em></li>\n</ul>\n<p>To make sure, which type of namespace we want to operate with, we will use the parameters listed in the above table: CLONE_NEWIPC、CLONE_NEWNS、CLONE_NEWNET、CLONE_NEWPID、CLONE_NEWUSER and CLONE_NEWUTS.</p>\n<h2 id=\"2-1-What-is-clone-looked-like\"><a href=\"#2-1-What-is-clone-looked-like\" class=\"headerlink\" title=\"2.1 What is clone() looked like\"></a>2.1 What is clone() looked like</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">int clone(int (*child_func)(void *), void *child_stack, int flags, void *arg);</div></pre></td></tr></table></figure>\n<ul>\n<li>child_func : indicate where is the main function of child function</li>\n<li>child_stack : the stack which will be used by a child function.</li>\n<li>flags: which CLONE_* are used?</li>\n<li>args : the user’s parameters</li>\n</ul>\n<h2 id=\"2-2-proc-pid-ns\"><a href=\"#2-2-proc-pid-ns\" class=\"headerlink\" title=\"2.2 /proc/[pid]/ns\"></a>2.2 /proc/[pid]/ns</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls</span></div><div class=\"line\">cgroup  ipc  mnt  net  pid  user  uts</div><div class=\"line\"></div><div class=\"line\">root@mo-e33e22ea6:/proc/57/ns<span class=\"comment\"># ls -l</span></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 cgroup -&gt; cgroup:[4026531835]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 ipc -&gt; ipc:[4026531839]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 mnt -&gt; mnt:[4026531840]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 net -&gt; net:[4026531957]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 pid -&gt; pid:[4026531836]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 user -&gt; user:[4026531837]</div><div class=\"line\">lrwxrwxrwx 1 root root 0 Jul  3 15:43 uts -&gt; uts:[4026531838]</div></pre></td></tr></table></figure>\n<p>If two pids pointed to the same series number, means that they are in the same namespace.</p>\n<p>一旦文件被打开, 如果打开的文件描述符fd存在, 那么, 即使pid里面的进程全部都结束了, 这个namespace也会一直存在. 那么, 如何打开文件描述符?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch ~/uts</div><div class=\"line\">mount --<span class=\"built_in\">bind</span> /proc/27514/ns/uts ~/uts</div></pre></td></tr></table></figure>\n<h2 id=\"2-3-Join-a-namespace-with-setns\"><a href=\"#2-3-Join-a-namespace-with-setns\" class=\"headerlink\" title=\"2.3 Join a namespace with setns()\"></a>2.3 Join a namespace with setns()</h2><p>From 2.2, we can see that with <strong>mount</strong> operation, we can keep a namespace living. We can join this living namespace with function <strong>setns()</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">setns</span><span class=\"params\">(<span class=\"keyword\">int</span> fd, <span class=\"keyword\">int</span> nstype)</span></span>;</div></pre></td></tr></table></figure>\n<ul>\n<li>int fd: the fd of namespace we want to join. this is something pointed to /proc/[pid]/ns</li>\n<li>int nstype: check if the namespace pointed by fd respect our needs. 0 = ignore the check.</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* 获取namespace文件描述符 */</span></div><div class=\"line\">setns(fd, <span class=\"number\">0</span>);                   <span class=\"comment\">/* 加入新的namespace */</span></div><div class=\"line\">execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* 执行程序 */</span></div></pre></td></tr></table></figure>\n<p>execvp() can execute the command from user. Assume the programme has a name of setns :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./setns ~/uts /bin/bash</div></pre></td></tr></table></figure>\n<p>This will allow us running bash commands in the namespace indicated.</p>\n<h2 id=\"2-4-Using-unshare\"><a href=\"#2-4-Using-unshare\" class=\"headerlink\" title=\"2.4 Using unshare()\"></a>2.4 Using unshare()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">unshare</span><span class=\"params\">(<span class=\"keyword\">int</span> flags)</span></span>;</div></pre></td></tr></table></figure>\n<p>不启动新进程, 然后使用这个来达到一个隔离的效果. In Linux there is a <strong>unshare</strong> command, it is originated from the unshare() function.</p>\n<h2 id=\"2-5-fork\"><a href=\"#2-5-fork\" class=\"headerlink\" title=\"2.5 fork()\"></a>2.5 fork()</h2><p>这里是作为一个区分, 事实上fork并不属于namespace的API, 但是当被调用的时候, 确实创建一个一个新的进程, 然后把原来的进程复制到新的进程之中.  相当于克隆了一个自己.</p>\n<p>fork的特点是:<em>被调用一次, 但是返回两次</em>. 父进程一次, 子进程一次, 通过返回值的不同, 可以进行区分. 它有三种不同的返回值:</p>\n<ol>\n<li>在父进程中,fork返回子进程的进程ID</li>\n<li>子进程之中, fork返回0</li>\n<li>如果出现错误, fork返回一个负值.</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">pid_t</span> fpid; <span class=\"comment\">//fpid表示fork函数返回的值</span></div><div class=\"line\">    <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</div><div class=\"line\">    fpid=fork();</div><div class=\"line\">    <span class=\"keyword\">if</span> (fpid &lt; <span class=\"number\">0</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">\"error in fork!\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fpid == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"I am child. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i am parent. Process id is %d/n\"</span>,getpid());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">root@local:~<span class=\"meta\"># gcc -Wall fork_example.c &amp;&amp; ./a.out</span></div><div class=\"line\">I am parent. Process id is <span class=\"number\">28365</span></div><div class=\"line\">I am child. Process id is <span class=\"number\">28366</span></div></pre></td></tr></table></figure>\n<h1 id=\"3-Six-types-Namespace\"><a href=\"#3-Six-types-Namespace\" class=\"headerlink\" title=\"3 Six types Namespace\"></a>3 Six types Namespace</h1><h2 id=\"3-1-UTS-Unix-Time-sharing-System-Namespace\"><a href=\"#3-1-UTS-Unix-Time-sharing-System-Namespace\" class=\"headerlink\" title=\"3.1 UTS Unix Time-sharing System Namespace\"></a>3.1 UTS Unix Time-sharing System Namespace</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;signal.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_SIZE (1024 * 1024)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> child_stack[STACK_SIZE];</div><div class=\"line\"><span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> child_args[] = &#123;</div><div class=\"line\">        <span class=\"string\">\"/bin/bash\"</span>,</div><div class=\"line\">        <span class=\"literal\">NULL</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">child_main</span><span class=\"params\">(<span class=\"keyword\">void</span>* args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the Child Process!\\n\"</span>);</div><div class=\"line\">        sethostname(<span class=\"string\">\"Changed Namespace\"</span>,<span class=\"number\">12</span>);</div><div class=\"line\">        execv(child_args[<span class=\"number\">0</span>], child_args);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"In the parent Process, BEGIN! \\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> child_pid = clone(child_main, child_stack + STACK_SIZE, CLONE_NEWUTS | SIGCHLD, <span class=\"literal\">NULL</span>);</div><div class=\"line\">        waitpid(child_pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Over\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># gcc -Wall uts.c -o utsNamespace</span></div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ls</span></div><div class=\"line\">uts.c  utsNamespace</div><div class=\"line\">root@mo-e33e22ea6:/home/i340738/NameSpaceLearning<span class=\"comment\"># ./utsNamespace</span></div><div class=\"line\">In the parent Process, BEGIN!</div><div class=\"line\">In the Child Process!</div><div class=\"line\">root@Changed Name:/home/i340738/NameSpaceLearning<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">exit</span></div><div class=\"line\">Over</div></pre></td></tr></table></figure>\n<p>通过上面的实验已经可以看出, 主机名在子进程之中已经被改变了. Docker 中每一个镜像都有自己的主机名, 也就是依据这个原理.</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Links\"><a href=\"#Links\" class=\"headerlink\" title=\"Links :\"></a>Links :</h2><p><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation\" target=\"_blank\" rel=\"external\">Namespace Isolation</a><br><a href=\"http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation\" target=\"_blank\" rel=\"external\">Cgroup resource isolation</a></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><h3 id=\"Join\"><a href=\"#Join\" class=\"headerlink\" title=\"Join\"></a>Join</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* ns_exec.c</span></div><div class=\"line\"></div><div class=\"line\">   Copyright 2013, Michael Kerrisk</div><div class=\"line\">   Licensed under GNU General Public License v2 or later</div><div class=\"line\"></div><div class=\"line\">   Join a namespace and execute a command in the namespace</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _GNU_SOURCE</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sched.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* A simple error-handling function: print an error message based</span></div><div class=\"line\">   on the value in 'errno' and terminate the calling process */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> errExit(msg)    do &#123; perror(msg); exit(EXIT_FAILURE); \\</span></div><div class=\"line\">                        &#125; while (0)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> fd;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (argc &lt; <span class=\"number\">3</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"%s /proc/PID/ns/FILE cmd [arg...]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);   <span class=\"comment\">/* Get descriptor for namespace */</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (fd == <span class=\"number\">-1</span>)</div><div class=\"line\">        errExit(<span class=\"string\">\"open\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (setns(fd, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)         <span class=\"comment\">/* Join that namespace */</span></div><div class=\"line\">        errExit(<span class=\"string\">\"setns\"</span>);</div><div class=\"line\"></div><div class=\"line\">    execvp(argv[<span class=\"number\">2</span>], &amp;argv[<span class=\"number\">2</span>]);      <span class=\"comment\">/* Execute a command in namespace */</span></div><div class=\"line\">    errExit(<span class=\"string\">\"execvp\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Cgroups in Practice","_content":"\n\n<blockquote class=\"blockquote-center\">Cgroups 是 control groups 的缩写, 最初由google工程师书写, 之后写进Linux内核, 是Docker使用的几大底层基础技术之一. </blockquote> \n\n# Cgroup Terminology\n\n| Name | Explication | \n|:----------------|:----------------|\n|tasks | 任务就是系统的一个进程 |\n| control group | 按照某种标准划分的进程. 一个进程可以加入某个控制族群, 也可以从一个组迁移到另一个组.|\n| hierarchy | cgroup组成hierarchy, 控制树上面, 有继承的关系 |\n| subsystem | 子系统就是资源控制器. subsystem 要附加到hierarchy上面才能起作用. |\n\n**相互之间的关系**: \n\n1. 每次系统创建一个新的hierarchy, 所有的任务都是此 hierarchy 默认cgroup. called : *root cgroup* 这个cgroup会自动创建. \n2. 一个subsystem最多只能附加到一个hierarchy\n3. 一个hierarchy可以有多个子系统\n4. 一个Task可以属于不同cgroup, 这些cgroup属于不同hierarhcy\n5. 一个Task的子进程, 自动属于父进程的cgroup, 然后可以根据需要 移动到不同的cgroup中. \n\n![cgroup hierarchy](/uploads/0008cgroup1.png)\n\n\n\n\n# Usage\n\n<a href=\"https://www.ibm.com/developerworks/cn/linux/1506_cgroup/index.html\">Examples Source</a>\n\nNow, we have a java script, running 2 types of threads, one \n\n**0. Preparation**\n\n~~~java\n\n//开启 4 个用户线程，其中 1 个线程大量占用 CPU 资源，其他 3 个线程则处于空闲状态\npublic class HoldCPUMain {\n    public static class HoldCPUTask implements Runnable{\n\n        @Override\n            public void run() {\n                // TODO Auto-generated method stub\n                while(true){\n                    double a = Math.random()*Math.random();//占用 CPU\n                    System.out.println(a);\n                }\n            }\n\n    }\n\n    public static class LazyTask implements Runnable{\n\n        @Override\n            public void run() {\n                // TODO Auto-generated method stub\n                while(true){\n                    try {\n                        Thread.sleep(1000);\n                    } catch (InterruptedException e) {\n                        // TODO Auto-generated catch block\n                        e.printStackTrace();\n                    }//空闲线程\n                }\n            }\n\n    }\n\n\n    public static void main(String[] args){\n        for(int i=0;i<10;i++){\n            new Thread(new HoldCPUTask()).start();\n        }\n    }\n}\n\n~~~\n\n**1. Build Hierarchy**\n\n~~~bash\naliciahan@ubuntu1:~/CgroupTests$ cd /sys/fs/cgroup/\naliciahan@ubuntu1:/sys/fs/cgroup$ ls\nblkio  cpu  cpuacct  cpu,cpuacct  cpuset  devices  freezer  hugetlb  memory  net_cls  net_cls,net_prio  net_prio  perf_event  pids  systemd\naliciahan@ubuntu1:/sys/fs/cgroup$ cd cpuset/\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ ls\ncgroup.clone_children  cpuset.cpu_exclusive   cpuset.effective_mems  cpuset.memory_migrate           cpuset.memory_spread_page  cpuset.sched_load_balance        release_agent\ncgroup.procs           cpuset.cpus            cpuset.mem_exclusive   cpuset.memory_pressure          cpuset.memory_spread_slab  cpuset.sched_relax_domain_level  tasks\ncgroup.sane_behavior   cpuset.effective_cpus  cpuset.mem_hardwall    cpuset.memory_pressure_enabled  cpuset.mems                notify_on_release\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ sudo mkdir helloworld\n#OR:\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo cgcreate -t aliciahan:aliciahan -a aliciahan:aliciahan -g cpuset:/hello\n~~~\n\n**2. Check Result**\n\n~~~bash\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ lscgroup | grep helloworld\ncpuset:/helloworld\n~~~\n\n**3. Edit Params**\n\n~~~bash \naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo vim cpuset.cpus\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ cat ./cpuset.cpus\n0\n#OR: \naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.cpus=0 hello\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.mems=0 hello\n~~~\n\n\n{% note info %} \n\nYou can see the usage of your CPU cores using top command.\n\n- Open a Terminal.\n- Type top. You will see some information about tasks, memory etc.\n- Type 1 to show individual CPU usage. You will see something like:\n\n> cpu0 ..................\n> cpu1 .................\n\nTo start a new process which should execute only in one core, you can use taskset command.\n\ntaskset -c 0 executable\n\n{% endnote %} \n\n\n**4. Execute Tasks**\n\nThere are several ways of executing tasks in cgroup. \n\n- Adding manually with \n> echo [PID] > /path/To/Cgroup/tasks \n- through cgclassify : \n> cgclassify -g subsystems:path_to_cgroup pidlist\n- Using *cgexec* cgexec -g subsystems:path_to_cgroup command arguments\n\n\n~~~bash\naliciahan@ubuntu1:~/CgroupTests$ cgexec -g cpuset:/hello java HoldCPUMain > log.txt &\n[1] 2090\naliciahan@ubuntu1:~/CgroupTests$ top\ntop - 11:15:28 up 58 min,  1 user,  load average: 1.54, 0.40, 0.13\nTasks: 185 total,   1 running, 184 sleeping,   0 stopped,   0 zombie\n%Cpu0  : 40.2 us, 59.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.3 us,  0.3 sy,  0.0 ni, 93.4 id,  0.0 wa,  0.0 hi,  5.9 si,  0.0 st\n~~~\n\nAll is running at cpu0. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/0008CGroup.md","raw":"---\n  title: Cgroups in Practice\n  categories: Docker\n  tags: \n    - cgroup\n    - docker\n    - virtualization\n---\n\n\n<blockquote class=\"blockquote-center\">Cgroups 是 control groups 的缩写, 最初由google工程师书写, 之后写进Linux内核, 是Docker使用的几大底层基础技术之一. </blockquote> \n\n# Cgroup Terminology\n\n| Name | Explication | \n|:----------------|:----------------|\n|tasks | 任务就是系统的一个进程 |\n| control group | 按照某种标准划分的进程. 一个进程可以加入某个控制族群, 也可以从一个组迁移到另一个组.|\n| hierarchy | cgroup组成hierarchy, 控制树上面, 有继承的关系 |\n| subsystem | 子系统就是资源控制器. subsystem 要附加到hierarchy上面才能起作用. |\n\n**相互之间的关系**: \n\n1. 每次系统创建一个新的hierarchy, 所有的任务都是此 hierarchy 默认cgroup. called : *root cgroup* 这个cgroup会自动创建. \n2. 一个subsystem最多只能附加到一个hierarchy\n3. 一个hierarchy可以有多个子系统\n4. 一个Task可以属于不同cgroup, 这些cgroup属于不同hierarhcy\n5. 一个Task的子进程, 自动属于父进程的cgroup, 然后可以根据需要 移动到不同的cgroup中. \n\n![cgroup hierarchy](/uploads/0008cgroup1.png)\n\n\n\n\n# Usage\n\n<a href=\"https://www.ibm.com/developerworks/cn/linux/1506_cgroup/index.html\">Examples Source</a>\n\nNow, we have a java script, running 2 types of threads, one \n\n**0. Preparation**\n\n~~~java\n\n//开启 4 个用户线程，其中 1 个线程大量占用 CPU 资源，其他 3 个线程则处于空闲状态\npublic class HoldCPUMain {\n    public static class HoldCPUTask implements Runnable{\n\n        @Override\n            public void run() {\n                // TODO Auto-generated method stub\n                while(true){\n                    double a = Math.random()*Math.random();//占用 CPU\n                    System.out.println(a);\n                }\n            }\n\n    }\n\n    public static class LazyTask implements Runnable{\n\n        @Override\n            public void run() {\n                // TODO Auto-generated method stub\n                while(true){\n                    try {\n                        Thread.sleep(1000);\n                    } catch (InterruptedException e) {\n                        // TODO Auto-generated catch block\n                        e.printStackTrace();\n                    }//空闲线程\n                }\n            }\n\n    }\n\n\n    public static void main(String[] args){\n        for(int i=0;i<10;i++){\n            new Thread(new HoldCPUTask()).start();\n        }\n    }\n}\n\n~~~\n\n**1. Build Hierarchy**\n\n~~~bash\naliciahan@ubuntu1:~/CgroupTests$ cd /sys/fs/cgroup/\naliciahan@ubuntu1:/sys/fs/cgroup$ ls\nblkio  cpu  cpuacct  cpu,cpuacct  cpuset  devices  freezer  hugetlb  memory  net_cls  net_cls,net_prio  net_prio  perf_event  pids  systemd\naliciahan@ubuntu1:/sys/fs/cgroup$ cd cpuset/\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ ls\ncgroup.clone_children  cpuset.cpu_exclusive   cpuset.effective_mems  cpuset.memory_migrate           cpuset.memory_spread_page  cpuset.sched_load_balance        release_agent\ncgroup.procs           cpuset.cpus            cpuset.mem_exclusive   cpuset.memory_pressure          cpuset.memory_spread_slab  cpuset.sched_relax_domain_level  tasks\ncgroup.sane_behavior   cpuset.effective_cpus  cpuset.mem_hardwall    cpuset.memory_pressure_enabled  cpuset.mems                notify_on_release\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ sudo mkdir helloworld\n#OR:\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo cgcreate -t aliciahan:aliciahan -a aliciahan:aliciahan -g cpuset:/hello\n~~~\n\n**2. Check Result**\n\n~~~bash\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ lscgroup | grep helloworld\ncpuset:/helloworld\n~~~\n\n**3. Edit Params**\n\n~~~bash \naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo vim cpuset.cpus\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ cat ./cpuset.cpus\n0\n#OR: \naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.cpus=0 hello\naliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.mems=0 hello\n~~~\n\n\n{% note info %} \n\nYou can see the usage of your CPU cores using top command.\n\n- Open a Terminal.\n- Type top. You will see some information about tasks, memory etc.\n- Type 1 to show individual CPU usage. You will see something like:\n\n> cpu0 ..................\n> cpu1 .................\n\nTo start a new process which should execute only in one core, you can use taskset command.\n\ntaskset -c 0 executable\n\n{% endnote %} \n\n\n**4. Execute Tasks**\n\nThere are several ways of executing tasks in cgroup. \n\n- Adding manually with \n> echo [PID] > /path/To/Cgroup/tasks \n- through cgclassify : \n> cgclassify -g subsystems:path_to_cgroup pidlist\n- Using *cgexec* cgexec -g subsystems:path_to_cgroup command arguments\n\n\n~~~bash\naliciahan@ubuntu1:~/CgroupTests$ cgexec -g cpuset:/hello java HoldCPUMain > log.txt &\n[1] 2090\naliciahan@ubuntu1:~/CgroupTests$ top\ntop - 11:15:28 up 58 min,  1 user,  load average: 1.54, 0.40, 0.13\nTasks: 185 total,   1 running, 184 sleeping,   0 stopped,   0 zombie\n%Cpu0  : 40.2 us, 59.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\n%Cpu1  :  0.3 us,  0.3 sy,  0.0 ni, 93.4 id,  0.0 wa,  0.0 hi,  5.9 si,  0.0 st\n~~~\n\nAll is running at cpu0. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"0008CGroup","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0bi000hc5cc1gok0r3u","content":"<blockquote class=\"blockquote-center\">Cgroups 是 control groups 的缩写, 最初由google工程师书写, 之后写进Linux内核, 是Docker使用的几大底层基础技术之一. </blockquote> \n\n<h1 id=\"Cgroup-Terminology\"><a href=\"#Cgroup-Terminology\" class=\"headerlink\" title=\"Cgroup Terminology\"></a>Cgroup Terminology</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Explication</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tasks</td>\n<td style=\"text-align:left\">任务就是系统的一个进程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">control group</td>\n<td style=\"text-align:left\">按照某种标准划分的进程. 一个进程可以加入某个控制族群, 也可以从一个组迁移到另一个组.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">hierarchy</td>\n<td style=\"text-align:left\">cgroup组成hierarchy, 控制树上面, 有继承的关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">subsystem</td>\n<td style=\"text-align:left\">子系统就是资源控制器. subsystem 要附加到hierarchy上面才能起作用.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>相互之间的关系</strong>: </p>\n<ol>\n<li>每次系统创建一个新的hierarchy, 所有的任务都是此 hierarchy 默认cgroup. called : <em>root cgroup</em> 这个cgroup会自动创建. </li>\n<li>一个subsystem最多只能附加到一个hierarchy</li>\n<li>一个hierarchy可以有多个子系统</li>\n<li>一个Task可以属于不同cgroup, 这些cgroup属于不同hierarhcy</li>\n<li>一个Task的子进程, 自动属于父进程的cgroup, 然后可以根据需要 移动到不同的cgroup中. </li>\n</ol>\n<p><img src=\"/uploads/0008cgroup1.png\" alt=\"cgroup hierarchy\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><p><a href=\"https://www.ibm.com/developerworks/cn/linux/1506_cgroup/index.html\" target=\"_blank\" rel=\"external\">Examples Source</a></p>\n<p>Now, we have a java script, running 2 types of threads, one </p>\n<p><strong>0. Preparation</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//开启 4 个用户线程，其中 1 个线程大量占用 CPU 资源，其他 3 个线程则处于空闲状态</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HoldCPUMain</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HoldCPUTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// TODO Auto-generated method stub</span></div><div class=\"line\">                <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</div><div class=\"line\">                    <span class=\"keyword\">double</span> a = Math.random()*Math.random();<span class=\"comment\">//占用 CPU</span></div><div class=\"line\">                    System.out.println(a);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LazyTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// TODO Auto-generated method stub</span></div><div class=\"line\">                <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</div><div class=\"line\">                    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                        Thread.sleep(<span class=\"number\">1000</span>);</div><div class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">                        <span class=\"comment\">// TODO Auto-generated catch block</span></div><div class=\"line\">                        e.printStackTrace();</div><div class=\"line\">                    &#125;<span class=\"comment\">//空闲线程</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</div><div class=\"line\">            <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> HoldCPUTask()).start();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>1. Build Hierarchy</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ <span class=\"built_in\">cd</span> /sys/fs/cgroup/</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup$ ls</div><div class=\"line\">blkio  cpu  cpuacct  cpu,cpuacct  cpuset  devices  freezer  hugetlb  memory  net_cls  net_cls,net_prio  net_prio  perf_event  pids  systemd</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup$ <span class=\"built_in\">cd</span> cpuset/</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ ls</div><div class=\"line\">cgroup.clone_children  cpuset.cpu_exclusive   cpuset.effective_mems  cpuset.memory_migrate           cpuset.memory_spread_page  cpuset.sched_load_balance        release_agent</div><div class=\"line\">cgroup.procs           cpuset.cpus            cpuset.mem_exclusive   cpuset.memory_pressure          cpuset.memory_spread_slab  cpuset.sched_relax_domain_level  tasks</div><div class=\"line\">cgroup.sane_behavior   cpuset.effective_cpus  cpuset.mem_hardwall    cpuset.memory_pressure_enabled  cpuset.mems                notify_on_release</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ sudo mkdir helloworld</div><div class=\"line\"><span class=\"comment\">#OR:</span></div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo cgcreate -t aliciahan:aliciahan -a aliciahan:aliciahan -g cpuset:/hello</div></pre></td></tr></table></figure>\n<p><strong>2. Check Result</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ lscgroup | grep helloworld</div><div class=\"line\">cpuset:/helloworld</div></pre></td></tr></table></figure>\n<p><strong>3. Edit Params</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo vim cpuset.cpus</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ cat ./cpuset.cpus</div><div class=\"line\">0</div><div class=\"line\"><span class=\"comment\">#OR: </span></div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.cpus=0 hello</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.mems=0 hello</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>You can see the usage of your CPU cores using top command.</p>\n<ul>\n<li>Open a Terminal.</li>\n<li>Type top. You will see some information about tasks, memory etc.</li>\n<li>Type 1 to show individual CPU usage. You will see something like:</li>\n</ul>\n<blockquote>\n<p>cpu0 ………………<br>cpu1 ……………..</p>\n</blockquote>\n<p>To start a new process which should execute only in one core, you can use taskset command.</p>\n<p>taskset -c 0 executable</p>\n</div> \n<p><strong>4. Execute Tasks</strong></p>\n<p>There are several ways of executing tasks in cgroup. </p>\n<ul>\n<li>Adding manually with <blockquote>\n<p>echo [PID] &gt; /path/To/Cgroup/tasks </p>\n</blockquote>\n</li>\n<li>through cgclassify : <blockquote>\n<p>cgclassify -g subsystems:path_to_cgroup pidlist</p>\n</blockquote>\n</li>\n<li>Using <em>cgexec</em> cgexec -g subsystems:path_to_cgroup command arguments</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ cgexec -g cpuset:/hello java HoldCPUMain &gt; log.txt &amp;</div><div class=\"line\">[1] 2090</div><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ top</div><div class=\"line\">top - 11:15:28 up 58 min,  1 user,  load average: 1.54, 0.40, 0.13</div><div class=\"line\">Tasks: 185 total,   1 running, 184 sleeping,   0 stopped,   0 zombie</div><div class=\"line\">%Cpu0  : 40.2 us, 59.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</div><div class=\"line\">%Cpu1  :  0.3 us,  0.3 sy,  0.0 ni, 93.4 id,  0.0 wa,  0.0 hi,  5.9 si,  0.0 st</div></pre></td></tr></table></figure>\n<p>All is running at cpu0. </p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">Cgroups 是 control groups 的缩写, 最初由google工程师书写, 之后写进Linux内核, 是Docker使用的几大底层基础技术之一. </blockquote> \n\n<h1 id=\"Cgroup-Terminology\"><a href=\"#Cgroup-Terminology\" class=\"headerlink\" title=\"Cgroup Terminology\"></a>Cgroup Terminology</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Explication</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tasks</td>\n<td style=\"text-align:left\">任务就是系统的一个进程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">control group</td>\n<td style=\"text-align:left\">按照某种标准划分的进程. 一个进程可以加入某个控制族群, 也可以从一个组迁移到另一个组.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">hierarchy</td>\n<td style=\"text-align:left\">cgroup组成hierarchy, 控制树上面, 有继承的关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">subsystem</td>\n<td style=\"text-align:left\">子系统就是资源控制器. subsystem 要附加到hierarchy上面才能起作用.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>相互之间的关系</strong>: </p>\n<ol>\n<li>每次系统创建一个新的hierarchy, 所有的任务都是此 hierarchy 默认cgroup. called : <em>root cgroup</em> 这个cgroup会自动创建. </li>\n<li>一个subsystem最多只能附加到一个hierarchy</li>\n<li>一个hierarchy可以有多个子系统</li>\n<li>一个Task可以属于不同cgroup, 这些cgroup属于不同hierarhcy</li>\n<li>一个Task的子进程, 自动属于父进程的cgroup, 然后可以根据需要 移动到不同的cgroup中. </li>\n</ol>\n<p><img src=\"/uploads/0008cgroup1.png\" alt=\"cgroup hierarchy\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><p><a href=\"https://www.ibm.com/developerworks/cn/linux/1506_cgroup/index.html\" target=\"_blank\" rel=\"external\">Examples Source</a></p>\n<p>Now, we have a java script, running 2 types of threads, one </p>\n<p><strong>0. Preparation</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//开启 4 个用户线程，其中 1 个线程大量占用 CPU 资源，其他 3 个线程则处于空闲状态</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HoldCPUMain</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HoldCPUTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// TODO Auto-generated method stub</span></div><div class=\"line\">                <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</div><div class=\"line\">                    <span class=\"keyword\">double</span> a = Math.random()*Math.random();<span class=\"comment\">//占用 CPU</span></div><div class=\"line\">                    System.out.println(a);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LazyTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// TODO Auto-generated method stub</span></div><div class=\"line\">                <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</div><div class=\"line\">                    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                        Thread.sleep(<span class=\"number\">1000</span>);</div><div class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">                        <span class=\"comment\">// TODO Auto-generated catch block</span></div><div class=\"line\">                        e.printStackTrace();</div><div class=\"line\">                    &#125;<span class=\"comment\">//空闲线程</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</div><div class=\"line\">            <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> HoldCPUTask()).start();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>1. Build Hierarchy</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ <span class=\"built_in\">cd</span> /sys/fs/cgroup/</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup$ ls</div><div class=\"line\">blkio  cpu  cpuacct  cpu,cpuacct  cpuset  devices  freezer  hugetlb  memory  net_cls  net_cls,net_prio  net_prio  perf_event  pids  systemd</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup$ <span class=\"built_in\">cd</span> cpuset/</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ ls</div><div class=\"line\">cgroup.clone_children  cpuset.cpu_exclusive   cpuset.effective_mems  cpuset.memory_migrate           cpuset.memory_spread_page  cpuset.sched_load_balance        release_agent</div><div class=\"line\">cgroup.procs           cpuset.cpus            cpuset.mem_exclusive   cpuset.memory_pressure          cpuset.memory_spread_slab  cpuset.sched_relax_domain_level  tasks</div><div class=\"line\">cgroup.sane_behavior   cpuset.effective_cpus  cpuset.mem_hardwall    cpuset.memory_pressure_enabled  cpuset.mems                notify_on_release</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset$ sudo mkdir helloworld</div><div class=\"line\"><span class=\"comment\">#OR:</span></div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo cgcreate -t aliciahan:aliciahan -a aliciahan:aliciahan -g cpuset:/hello</div></pre></td></tr></table></figure>\n<p><strong>2. Check Result</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ lscgroup | grep helloworld</div><div class=\"line\">cpuset:/helloworld</div></pre></td></tr></table></figure>\n<p><strong>3. Edit Params</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ sudo vim cpuset.cpus</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/helloworld$ cat ./cpuset.cpus</div><div class=\"line\">0</div><div class=\"line\"><span class=\"comment\">#OR: </span></div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.cpus=0 hello</div><div class=\"line\">aliciahan@ubuntu1:/sys/fs/cgroup/cpuset/hello$ sudo cgset -r cpuset.mems=0 hello</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>You can see the usage of your CPU cores using top command.</p>\n<ul>\n<li>Open a Terminal.</li>\n<li>Type top. You will see some information about tasks, memory etc.</li>\n<li>Type 1 to show individual CPU usage. You will see something like:</li>\n</ul>\n<blockquote>\n<p>cpu0 ………………<br>cpu1 ……………..</p>\n</blockquote>\n<p>To start a new process which should execute only in one core, you can use taskset command.</p>\n<p>taskset -c 0 executable</p>\n</div> \n<p><strong>4. Execute Tasks</strong></p>\n<p>There are several ways of executing tasks in cgroup. </p>\n<ul>\n<li>Adding manually with <blockquote>\n<p>echo [PID] &gt; /path/To/Cgroup/tasks </p>\n</blockquote>\n</li>\n<li>through cgclassify : <blockquote>\n<p>cgclassify -g subsystems:path_to_cgroup pidlist</p>\n</blockquote>\n</li>\n<li>Using <em>cgexec</em> cgexec -g subsystems:path_to_cgroup command arguments</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ cgexec -g cpuset:/hello java HoldCPUMain &gt; log.txt &amp;</div><div class=\"line\">[1] 2090</div><div class=\"line\">aliciahan@ubuntu1:~/CgroupTests$ top</div><div class=\"line\">top - 11:15:28 up 58 min,  1 user,  load average: 1.54, 0.40, 0.13</div><div class=\"line\">Tasks: 185 total,   1 running, 184 sleeping,   0 stopped,   0 zombie</div><div class=\"line\">%Cpu0  : 40.2 us, 59.8 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</div><div class=\"line\">%Cpu1  :  0.3 us,  0.3 sy,  0.0 ni, 93.4 id,  0.0 wa,  0.0 hi,  5.9 si,  0.0 st</div></pre></td></tr></table></figure>\n<p>All is running at cpu0. </p>\n"},{"title":"Spelling Check in Vim","_content":"\n# Problematic\n\nMore and more frequent, instead of using professional text processing tools as word or excel, I am using vim for multiple types of documentation. For example, I enjoy using vim editing Latex and Markdown files, and having all the snippets set up. \n\nNow the problem are : \n\n- I could not be informed my Spelling Errors: French and English are not my mother ton, I often make a LARGE amount of spelling errors while typing, and even worse, I often mix up these two languages. \n- I should have the method switch between these two languages: English is an international language, but I am living in France, so, you know.\n\n\n# Solutions\n\nWithout any extra plugin which will slow down my system installed. The native solution is: \n\n~~~vim\nautocmd Bufenter *.txt set spell spelllang=en\nautocmd Bufenter *.tex set spell spelllang=en\nautocmd Bufenter *.md set spell spelllang=en\nautocmd Bufenter *.markdown set spell spelllang=en\n\" spell checking\nfunction! ToggleSpellLang()\n\t\" toggle between en and fr\n\tif &spelllang =~# 'en'\n\t\t:set spelllang=fr\n\telse\n\t\t:set spelllang=en\n\tendif\nendfunction\nnnoremap <F7> :setlocal spell!<CR> \" toggle spell on or off\nnnoremap <F8> :call ToggleSpellLang()<CR> \" toggle language\n\ncommand Spellen set spell spelllang=en\ncommand Spellfr set spell spelllang=fr\n~~~\n\nAdding this in to ~/.vimrc, And the hotkeys are : \n\n| Key | Function | \n|:----------------|:----------------|\n| F7 | Set Spelling Check on/off |\n| F8 | Switch between En/FR |\n| ]s | jump to next error |\n| [s | Jump back to previous error |\n| z= | Choose from the check list | \n| zg | Add into user's dict |\n| zw | Remove from user's dict |\n","source":"_posts/0009SpellingInVim.md","raw":"---\n  title: Spelling Check in Vim \n  categories: Vim\n  tags: \n    - vim\n    - spelling\n---\n\n# Problematic\n\nMore and more frequent, instead of using professional text processing tools as word or excel, I am using vim for multiple types of documentation. For example, I enjoy using vim editing Latex and Markdown files, and having all the snippets set up. \n\nNow the problem are : \n\n- I could not be informed my Spelling Errors: French and English are not my mother ton, I often make a LARGE amount of spelling errors while typing, and even worse, I often mix up these two languages. \n- I should have the method switch between these two languages: English is an international language, but I am living in France, so, you know.\n\n\n# Solutions\n\nWithout any extra plugin which will slow down my system installed. The native solution is: \n\n~~~vim\nautocmd Bufenter *.txt set spell spelllang=en\nautocmd Bufenter *.tex set spell spelllang=en\nautocmd Bufenter *.md set spell spelllang=en\nautocmd Bufenter *.markdown set spell spelllang=en\n\" spell checking\nfunction! ToggleSpellLang()\n\t\" toggle between en and fr\n\tif &spelllang =~# 'en'\n\t\t:set spelllang=fr\n\telse\n\t\t:set spelllang=en\n\tendif\nendfunction\nnnoremap <F7> :setlocal spell!<CR> \" toggle spell on or off\nnnoremap <F8> :call ToggleSpellLang()<CR> \" toggle language\n\ncommand Spellen set spell spelllang=en\ncommand Spellfr set spell spelllang=fr\n~~~\n\nAdding this in to ~/.vimrc, And the hotkeys are : \n\n| Key | Function | \n|:----------------|:----------------|\n| F7 | Set Spelling Check on/off |\n| F8 | Switch between En/FR |\n| ]s | jump to next error |\n| [s | Jump back to previous error |\n| z= | Choose from the check list | \n| zg | Add into user's dict |\n| zw | Remove from user's dict |\n","slug":"0009SpellingInVim","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0bn000ic5ccx4eso8gi","content":"<h1 id=\"Problematic\"><a href=\"#Problematic\" class=\"headerlink\" title=\"Problematic\"></a>Problematic</h1><p>More and more frequent, instead of using professional text processing tools as word or excel, I am using vim for multiple types of documentation. For example, I enjoy using vim editing Latex and Markdown files, and having all the snippets set up. </p>\n<p>Now the problem are : </p>\n<ul>\n<li>I could not be informed my Spelling Errors: French and English are not my mother ton, I often make a LARGE amount of spelling errors while typing, and even worse, I often mix up these two languages. </li>\n<li>I should have the method switch between these two languages: English is an international language, but I am living in France, so, you know.</li>\n</ul>\n<h1 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions\"></a>Solutions</h1><p>Without any extra plugin which will slow down my system installed. The native solution is: </p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.txt <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.tex <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.md <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.markdown <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"comment\">\" spell checking</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! <span class=\"title\">ToggleSpellLang</span><span class=\"params\">()</span></span></div><div class=\"line\">\t<span class=\"comment\">\" toggle between en and fr</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> &amp;spelllang =~# <span class=\"string\">'en'</span></div><div class=\"line\">\t\t:<span class=\"keyword\">set</span> spelllang=fr</div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t:<span class=\"keyword\">set</span> spelllang=<span class=\"keyword\">en</span></div><div class=\"line\">\t<span class=\"keyword\">endif</span></div><div class=\"line\"><span class=\"keyword\">endfunction</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;F7&gt;</span> :<span class=\"keyword\">setlocal</span> spell!<span class=\"symbol\">&lt;CR&gt;</span> <span class=\"comment\">\" toggle spell on or off</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;F8&gt;</span> :<span class=\"keyword\">call</span> ToggleSpellLang()<span class=\"symbol\">&lt;CR&gt;</span> <span class=\"comment\">\" toggle language</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> Spellen <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">command</span> Spellfr <span class=\"keyword\">set</span> spell spelllang=fr</div></pre></td></tr></table></figure>\n<p>Adding this in to ~/.vimrc, And the hotkeys are : </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Key</th>\n<th style=\"text-align:left\">Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">F7</td>\n<td style=\"text-align:left\">Set Spelling Check on/off</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">F8</td>\n<td style=\"text-align:left\">Switch between En/FR</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">]s</td>\n<td style=\"text-align:left\">jump to next error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[s</td>\n<td style=\"text-align:left\">Jump back to previous error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">z=</td>\n<td style=\"text-align:left\">Choose from the check list</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zg</td>\n<td style=\"text-align:left\">Add into user’s dict</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zw</td>\n<td style=\"text-align:left\">Remove from user’s dict</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Problematic\"><a href=\"#Problematic\" class=\"headerlink\" title=\"Problematic\"></a>Problematic</h1><p>More and more frequent, instead of using professional text processing tools as word or excel, I am using vim for multiple types of documentation. For example, I enjoy using vim editing Latex and Markdown files, and having all the snippets set up. </p>\n<p>Now the problem are : </p>\n<ul>\n<li>I could not be informed my Spelling Errors: French and English are not my mother ton, I often make a LARGE amount of spelling errors while typing, and even worse, I often mix up these two languages. </li>\n<li>I should have the method switch between these two languages: English is an international language, but I am living in France, so, you know.</li>\n</ul>\n<h1 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions\"></a>Solutions</h1><p>Without any extra plugin which will slow down my system installed. The native solution is: </p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.txt <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.tex <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.md <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> Bufenter *.markdown <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"comment\">\" spell checking</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>! <span class=\"title\">ToggleSpellLang</span><span class=\"params\">()</span></span></div><div class=\"line\">\t<span class=\"comment\">\" toggle between en and fr</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> &amp;spelllang =~# <span class=\"string\">'en'</span></div><div class=\"line\">\t\t:<span class=\"keyword\">set</span> spelllang=fr</div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t:<span class=\"keyword\">set</span> spelllang=<span class=\"keyword\">en</span></div><div class=\"line\">\t<span class=\"keyword\">endif</span></div><div class=\"line\"><span class=\"keyword\">endfunction</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;F7&gt;</span> :<span class=\"keyword\">setlocal</span> spell!<span class=\"symbol\">&lt;CR&gt;</span> <span class=\"comment\">\" toggle spell on or off</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;F8&gt;</span> :<span class=\"keyword\">call</span> ToggleSpellLang()<span class=\"symbol\">&lt;CR&gt;</span> <span class=\"comment\">\" toggle language</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> Spellen <span class=\"keyword\">set</span> spell spelllang=<span class=\"keyword\">en</span></div><div class=\"line\"><span class=\"keyword\">command</span> Spellfr <span class=\"keyword\">set</span> spell spelllang=fr</div></pre></td></tr></table></figure>\n<p>Adding this in to ~/.vimrc, And the hotkeys are : </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Key</th>\n<th style=\"text-align:left\">Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">F7</td>\n<td style=\"text-align:left\">Set Spelling Check on/off</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">F8</td>\n<td style=\"text-align:left\">Switch between En/FR</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">]s</td>\n<td style=\"text-align:left\">jump to next error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[s</td>\n<td style=\"text-align:left\">Jump back to previous error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">z=</td>\n<td style=\"text-align:left\">Choose from the check list</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zg</td>\n<td style=\"text-align:left\">Add into user’s dict</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zw</td>\n<td style=\"text-align:left\">Remove from user’s dict</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Using Logger","_content":"\n\n<blockquote class=\"blockquote-center\">Today I was told by my prof Professor at SAP using the Logger instead of System.out.println() in my code. And ..... What's that????!</blockquote>\n\n\n# Create Logger Object\n\n要使用J2SE的Logger功能 首先要取得 java.util.logging.Logger实例. 这个可以通过两个方法做到:\n\n~~~java\n//查找或者创建一个Logger\n  static Logger getLogger(String name);\n//为子系统查找或者创建一个Logger\n  static Logger = getLogger(String name, String resourceBundleName);\n~~~\n\n\n**Example**:\n\n~~~java\nimport java.util.logging.Logger;\npublic class Ex20Logger {\n\n    public static void main(String [] args ){\n        Logger logger = Logger.getLogger(\"demo\");\n        try{\n            System.out.println(args[0]);\n        } catch (ArrayIndexOutOfBoundsException e){\n            logger.warning(\"No args Founded\");\n        }\n    }\n\n}\n~~~\n\nOutput:\n\n~~~bash\njuil. 28, 2017 4:32:45 PM Ex20Logger main\nWARNING: No args Founded\n~~~\n\n# Level of Logger\n\nThe levels are defined in <i><font color=\"violet\">java.util.logging.Level</font></i>. From the most important to less :\n\n> SEVERE > WARNING > INFO > CONFIG > FINE > FINER > FINEST\n\n\n## Default Level\n\n**Default print level is INFO, the messages less important than INFO will not be printed to screen.** The default value can be setup in repository jre/lib\n\n~~~bash\n# Limit the message that are printed on the console to INFO and above.\njava.util.logging.ConsoleHandler.level = INFO\n~~~\n\n**Example:**\n\nAdding this to the previous example:\n\n~~~java\nlogger.severe(\"Severe Warning\");\nlogger.warning(\"just warning\");\nlogger.info(\"Normal Info Msg\");\nlogger.config(\"Config  Msg\");\nlogger.fine(\"Fine Msg\");\nlogger.finer(\"Finer Msg\");\nlogger.finest (\"Finest Msg\");\n~~~\n\n**The result is **\n\n~~~bash\n\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nINFO: Normal Info Msg\n~~~\n\n## Logger Handler\n\nThe default handler is java.util.logging.ConsolerHandler. A Logger may have several different handler, each of them has their own level control. Let's see how to set it up.\n\nAdding to the previous Demo program:\n\n~~~java\n//Show all Message, simplely with this will not work.\nlogger.setLevel(Level.ALL);\n\n//Add Handler + set Level to ALL\nConsoleHandler consoleHandler = new ConsoleHandler();\nconsoleHandler.setLevel(Level.ALL);\n\n//make consoleHandler the Handler of logger\nlogger.addHandler(consoleHandler);\n~~~\n\nThen we have all the warning here:\n\n~~~bash\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nINFO: Normal Info Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nINFO: Normal Info Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nCONFIG: Config  Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINE: Fine Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINER: Finer Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINEST: Finest Msg\n~~~\n\n## Another Quick Approche\n\n~~~java\nLogger logger = Logger.getLogger(\"LoggingDemo\");\nlogger.log(Level.SEVERE, \"Important\");\n~~~\n\n# Detail on handlers\n\n1. java.util.logging.ConsoleHandler : System.err\n2. java.util.logging.FileHandler: output to file\n3. java.util.logging.StreamHandler: to Stream\n4. java.util.logging.SocketHandler: to Socket\n5. java.util.logging.MemoryHandler: temporarily in MEM\n\n\nExample \"To File\"\n\n~~~java\npublic class LoggingDemo {\n    public static void main(String[] args){\n        Logger logger = Logger.getLogger(\"LoggingDemo\");\n\n        try {\n            FileHandler fileHandler = new FileHandler(\"D:\\\\test/3.txt\");\n            logger.addHandler(fileHandler);\n            logger.info(\"测试信息\");\n        } catch (SecurityException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n~~~\n\nWe'll see that the txt is in format XML\n\n# Formatter\n\nTwo important Formatter :\n\n- java.util.logging.SimpleFormatter:\n> 2004-12-20 23:08:52 org.apache.coyote.http11.Http11Protocol init\n> 信息: Initializing Coyote HTTP/1.1 on http-8080\n- java.util.logging.XMLFormatter\n\n\n从上一节的例子可知，FileHandler的默认格式是java.util.logging.XMLFormatter，而ConsolerHandler的默认格式是java.util.logging.SimpleFormatter，可以使用Handler实例的setFormatter()方法来设定信息的输出格式。例如：\n\nfileHandler.setFormatter(new SimpleFormatter());\n\nExample:\n\n~~~java\ntry {\n    FileHandler fileHandler = new FileHandler(\"./logger.log\");\n    logger.addHandler(fileHandler);\n    fileHandler.setFormatter(new SimpleFormatter()); // or new XMLFormatter()\n} catch(SecurityException e){\n    e.printStackTrace();\n} catch (IOException e){\n    e.printStackTrace();\n}\n~~~\n\n# Personalize\n\n## Handler:\n\nRewrite :\n\n- publish：主要方法，把日志记录写入你需要的媒介。\n- flush：清除缓冲区并保存数据。\n- close：关闭控制器。\n\n## Formatter\n\n除了XMLFormatter与SimpleFormatter之外，也可以自定义日志的输出格式，只要继承抽象类Formatter，并重新定义其format()方法即可。format()方法会传入一个java.util.logging.LogRecord对象作为参数，可以使用它来取得一些与程序执行有关的信息。\n\n\n## Level\n\n | Type | Iteger |\n |:----------------:|:----------------:|\n | OFF |        最大整数（ Integer. MAX_VALUE）|\n | SEVERE |    1000 |\n | WARNING |  900 |\n | INFO    |     800 |\n | CONFIG  |    700 |\n | FINE   |       500 |\n | FINER   |     400 |\n | FINEST   |   300 |\n | ALL     |      最小整数（Integer. MIN_VALUE）|\n\nExample :\n\n~~~java\npublic class AlertLevel extends Level{\n\n    /**\n     * @param name\n     * @param value\n     */\n    protected AlertLevel(String name, int value) {\n        super(name,value);\n    }\n\n    public static void main(String[] args){\n        Logger logger = Logger.getAnonymousLogger();\n        //低于INFO（800），显示不出来，因为默认的配置 java.util.logging.ConsoleHandler.level = INFO\n        logger.log(new AlertLevel(\"ALERT\",950), \"自定义 lever!\");\n    }\n}\n~~~\n\n# Hierarchy of Logger\n\n在使用Logger的静态getLogger()方法取得Logger实例时，给getLogger()方法的名称是有意义的。如果给定a，实际上将从根(Root)logger继承一些特性，像日志级别（Level）以及根logger的输出媒介控制器。如果再取得一个Logger实例，并给定名称a.b，则这次取得的Logger将继承pku这个Logger上的特性。从以下范例可以看出Logger在名称上的继承关系：\n\n~~~java\npublic class LoggerHierarchyDemo {\n    public static void main(String[] args){\n        Logger onlyfunLogger = Logger.getLogger(\"a\");\n        Logger caterpillarLogger = Logger.getLogger(\"a.b\");\n        System.out.println(\"root logger:\"+onlyfunLogger.getParent());\n        System.out.println(\"onlyfun logger:\" + caterpillarLogger.getParent().getName());\n        System.out.println(\"caterpillar Logger:\" + caterpillarLogger.getName() + \"\\n\");\n        onlyfunLogger.setLevel(Level.WARNING);\n        caterpillarLogger.info(\"caterpillar ' info\");\n        caterpillarLogger.setLevel(Level.INFO);\n        caterpillarLogger.info(\"caterpillar ' info\");\n    }\n}\n~~~\n\n以上从xingele9017那里转载的.\n","source":"_posts/0010logger.md","raw":"---\n  title: Using Logger\n  categories: Java\n  tags:\n    - logger\n---\n\n\n<blockquote class=\"blockquote-center\">Today I was told by my prof Professor at SAP using the Logger instead of System.out.println() in my code. And ..... What's that????!</blockquote>\n\n\n# Create Logger Object\n\n要使用J2SE的Logger功能 首先要取得 java.util.logging.Logger实例. 这个可以通过两个方法做到:\n\n~~~java\n//查找或者创建一个Logger\n  static Logger getLogger(String name);\n//为子系统查找或者创建一个Logger\n  static Logger = getLogger(String name, String resourceBundleName);\n~~~\n\n\n**Example**:\n\n~~~java\nimport java.util.logging.Logger;\npublic class Ex20Logger {\n\n    public static void main(String [] args ){\n        Logger logger = Logger.getLogger(\"demo\");\n        try{\n            System.out.println(args[0]);\n        } catch (ArrayIndexOutOfBoundsException e){\n            logger.warning(\"No args Founded\");\n        }\n    }\n\n}\n~~~\n\nOutput:\n\n~~~bash\njuil. 28, 2017 4:32:45 PM Ex20Logger main\nWARNING: No args Founded\n~~~\n\n# Level of Logger\n\nThe levels are defined in <i><font color=\"violet\">java.util.logging.Level</font></i>. From the most important to less :\n\n> SEVERE > WARNING > INFO > CONFIG > FINE > FINER > FINEST\n\n\n## Default Level\n\n**Default print level is INFO, the messages less important than INFO will not be printed to screen.** The default value can be setup in repository jre/lib\n\n~~~bash\n# Limit the message that are printed on the console to INFO and above.\njava.util.logging.ConsoleHandler.level = INFO\n~~~\n\n**Example:**\n\nAdding this to the previous example:\n\n~~~java\nlogger.severe(\"Severe Warning\");\nlogger.warning(\"just warning\");\nlogger.info(\"Normal Info Msg\");\nlogger.config(\"Config  Msg\");\nlogger.fine(\"Fine Msg\");\nlogger.finer(\"Finer Msg\");\nlogger.finest (\"Finest Msg\");\n~~~\n\n**The result is **\n\n~~~bash\n\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:43:25 PM Ex20Logger main\nINFO: Normal Info Msg\n~~~\n\n## Logger Handler\n\nThe default handler is java.util.logging.ConsolerHandler. A Logger may have several different handler, each of them has their own level control. Let's see how to set it up.\n\nAdding to the previous Demo program:\n\n~~~java\n//Show all Message, simplely with this will not work.\nlogger.setLevel(Level.ALL);\n\n//Add Handler + set Level to ALL\nConsoleHandler consoleHandler = new ConsoleHandler();\nconsoleHandler.setLevel(Level.ALL);\n\n//make consoleHandler the Handler of logger\nlogger.addHandler(consoleHandler);\n~~~\n\nThen we have all the warning here:\n\n~~~bash\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: No args Founded\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nSEVERE: Severe Warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nWARNING: just warning\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nINFO: Normal Info Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nINFO: Normal Info Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nCONFIG: Config  Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINE: Fine Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINER: Finer Msg\njuil. 28, 2017 4:55:22 PM Ex20Logger main\nFINEST: Finest Msg\n~~~\n\n## Another Quick Approche\n\n~~~java\nLogger logger = Logger.getLogger(\"LoggingDemo\");\nlogger.log(Level.SEVERE, \"Important\");\n~~~\n\n# Detail on handlers\n\n1. java.util.logging.ConsoleHandler : System.err\n2. java.util.logging.FileHandler: output to file\n3. java.util.logging.StreamHandler: to Stream\n4. java.util.logging.SocketHandler: to Socket\n5. java.util.logging.MemoryHandler: temporarily in MEM\n\n\nExample \"To File\"\n\n~~~java\npublic class LoggingDemo {\n    public static void main(String[] args){\n        Logger logger = Logger.getLogger(\"LoggingDemo\");\n\n        try {\n            FileHandler fileHandler = new FileHandler(\"D:\\\\test/3.txt\");\n            logger.addHandler(fileHandler);\n            logger.info(\"测试信息\");\n        } catch (SecurityException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n~~~\n\nWe'll see that the txt is in format XML\n\n# Formatter\n\nTwo important Formatter :\n\n- java.util.logging.SimpleFormatter:\n> 2004-12-20 23:08:52 org.apache.coyote.http11.Http11Protocol init\n> 信息: Initializing Coyote HTTP/1.1 on http-8080\n- java.util.logging.XMLFormatter\n\n\n从上一节的例子可知，FileHandler的默认格式是java.util.logging.XMLFormatter，而ConsolerHandler的默认格式是java.util.logging.SimpleFormatter，可以使用Handler实例的setFormatter()方法来设定信息的输出格式。例如：\n\nfileHandler.setFormatter(new SimpleFormatter());\n\nExample:\n\n~~~java\ntry {\n    FileHandler fileHandler = new FileHandler(\"./logger.log\");\n    logger.addHandler(fileHandler);\n    fileHandler.setFormatter(new SimpleFormatter()); // or new XMLFormatter()\n} catch(SecurityException e){\n    e.printStackTrace();\n} catch (IOException e){\n    e.printStackTrace();\n}\n~~~\n\n# Personalize\n\n## Handler:\n\nRewrite :\n\n- publish：主要方法，把日志记录写入你需要的媒介。\n- flush：清除缓冲区并保存数据。\n- close：关闭控制器。\n\n## Formatter\n\n除了XMLFormatter与SimpleFormatter之外，也可以自定义日志的输出格式，只要继承抽象类Formatter，并重新定义其format()方法即可。format()方法会传入一个java.util.logging.LogRecord对象作为参数，可以使用它来取得一些与程序执行有关的信息。\n\n\n## Level\n\n | Type | Iteger |\n |:----------------:|:----------------:|\n | OFF |        最大整数（ Integer. MAX_VALUE）|\n | SEVERE |    1000 |\n | WARNING |  900 |\n | INFO    |     800 |\n | CONFIG  |    700 |\n | FINE   |       500 |\n | FINER   |     400 |\n | FINEST   |   300 |\n | ALL     |      最小整数（Integer. MIN_VALUE）|\n\nExample :\n\n~~~java\npublic class AlertLevel extends Level{\n\n    /**\n     * @param name\n     * @param value\n     */\n    protected AlertLevel(String name, int value) {\n        super(name,value);\n    }\n\n    public static void main(String[] args){\n        Logger logger = Logger.getAnonymousLogger();\n        //低于INFO（800），显示不出来，因为默认的配置 java.util.logging.ConsoleHandler.level = INFO\n        logger.log(new AlertLevel(\"ALERT\",950), \"自定义 lever!\");\n    }\n}\n~~~\n\n# Hierarchy of Logger\n\n在使用Logger的静态getLogger()方法取得Logger实例时，给getLogger()方法的名称是有意义的。如果给定a，实际上将从根(Root)logger继承一些特性，像日志级别（Level）以及根logger的输出媒介控制器。如果再取得一个Logger实例，并给定名称a.b，则这次取得的Logger将继承pku这个Logger上的特性。从以下范例可以看出Logger在名称上的继承关系：\n\n~~~java\npublic class LoggerHierarchyDemo {\n    public static void main(String[] args){\n        Logger onlyfunLogger = Logger.getLogger(\"a\");\n        Logger caterpillarLogger = Logger.getLogger(\"a.b\");\n        System.out.println(\"root logger:\"+onlyfunLogger.getParent());\n        System.out.println(\"onlyfun logger:\" + caterpillarLogger.getParent().getName());\n        System.out.println(\"caterpillar Logger:\" + caterpillarLogger.getName() + \"\\n\");\n        onlyfunLogger.setLevel(Level.WARNING);\n        caterpillarLogger.info(\"caterpillar ' info\");\n        caterpillarLogger.setLevel(Level.INFO);\n        caterpillarLogger.info(\"caterpillar ' info\");\n    }\n}\n~~~\n\n以上从xingele9017那里转载的.\n","slug":"0010logger","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0bt000mc5ccshyugbq8","content":"<blockquote class=\"blockquote-center\">Today I was told by my prof Professor at SAP using the Logger instead of System.out.println() in my code. And ….. What’s that????!</blockquote>\n\n\n<h1 id=\"Create-Logger-Object\"><a href=\"#Create-Logger-Object\" class=\"headerlink\" title=\"Create Logger Object\"></a>Create Logger Object</h1><p>要使用J2SE的Logger功能 首先要取得 java.util.logging.Logger实例. 这个可以通过两个方法做到:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查找或者创建一个Logger</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Logger <span class=\"title\">getLogger</span><span class=\"params\">(String name)</span></span>;</div><div class=\"line\"><span class=\"comment\">//为子系统查找或者创建一个Logger</span></div><div class=\"line\">  <span class=\"keyword\">static</span> Logger = getLogger(String name, String resourceBundleName);</div></pre></td></tr></table></figure>\n<p><strong>Example</strong>:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.logging.Logger;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Ex20Logger</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String [] args )</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getLogger(<span class=\"string\">\"demo\"</span>);</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            System.out.println(args[<span class=\"number\">0</span>]);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ArrayIndexOutOfBoundsException e)&#123;</div><div class=\"line\">            logger.warning(<span class=\"string\">\"No args Founded\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Output:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">juil. 28, 2017 4:32:45 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div></pre></td></tr></table></figure>\n<h1 id=\"Level-of-Logger\"><a href=\"#Level-of-Logger\" class=\"headerlink\" title=\"Level of Logger\"></a>Level of Logger</h1><p>The levels are defined in <i><font color=\"violet\">java.util.logging.Level</font></i>. From the most important to less :</p>\n<blockquote>\n<p>SEVERE &gt; WARNING &gt; INFO &gt; CONFIG &gt; FINE &gt; FINER &gt; FINEST</p>\n</blockquote>\n<h2 id=\"Default-Level\"><a href=\"#Default-Level\" class=\"headerlink\" title=\"Default Level\"></a>Default Level</h2><p><strong>Default print level is INFO, the messages less important than INFO will not be printed to screen.</strong> The default value can be setup in repository jre/lib</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Limit the message that are printed on the console to INFO and above.</span></div><div class=\"line\">java.util.logging.ConsoleHandler.level = INFO</div></pre></td></tr></table></figure>\n<p><strong>Example:</strong></p>\n<p>Adding this to the previous example:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">logger.severe(<span class=\"string\">\"Severe Warning\"</span>);</div><div class=\"line\">logger.warning(<span class=\"string\">\"just warning\"</span>);</div><div class=\"line\">logger.info(<span class=\"string\">\"Normal Info Msg\"</span>);</div><div class=\"line\">logger.config(<span class=\"string\">\"Config  Msg\"</span>);</div><div class=\"line\">logger.fine(<span class=\"string\">\"Fine Msg\"</span>);</div><div class=\"line\">logger.finer(<span class=\"string\">\"Finer Msg\"</span>);</div><div class=\"line\">logger.finest (<span class=\"string\">\"Finest Msg\"</span>);</div></pre></td></tr></table></figure>\n<p><strong>The result is </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div></pre></td></tr></table></figure>\n<h2 id=\"Logger-Handler\"><a href=\"#Logger-Handler\" class=\"headerlink\" title=\"Logger Handler\"></a>Logger Handler</h2><p>The default handler is java.util.logging.ConsolerHandler. A Logger may have several different handler, each of them has their own level control. Let’s see how to set it up.</p>\n<p>Adding to the previous Demo program:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Show all Message, simplely with this will not work.</span></div><div class=\"line\">logger.setLevel(Level.ALL);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Add Handler + set Level to ALL</span></div><div class=\"line\">ConsoleHandler consoleHandler = <span class=\"keyword\">new</span> ConsoleHandler();</div><div class=\"line\">consoleHandler.setLevel(Level.ALL);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//make consoleHandler the Handler of logger</span></div><div class=\"line\">logger.addHandler(consoleHandler);</div></pre></td></tr></table></figure>\n<p>Then we have all the warning here:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">CONFIG: Config  Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINE: Fine Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINER: Finer Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINEST: Finest Msg</div></pre></td></tr></table></figure>\n<h2 id=\"Another-Quick-Approche\"><a href=\"#Another-Quick-Approche\" class=\"headerlink\" title=\"Another Quick Approche\"></a>Another Quick Approche</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Logger logger = Logger.getLogger(<span class=\"string\">\"LoggingDemo\"</span>);</div><div class=\"line\">logger.log(Level.SEVERE, <span class=\"string\">\"Important\"</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"Detail-on-handlers\"><a href=\"#Detail-on-handlers\" class=\"headerlink\" title=\"Detail on handlers\"></a>Detail on handlers</h1><ol>\n<li>java.util.logging.ConsoleHandler : System.err</li>\n<li>java.util.logging.FileHandler: output to file</li>\n<li>java.util.logging.StreamHandler: to Stream</li>\n<li>java.util.logging.SocketHandler: to Socket</li>\n<li>java.util.logging.MemoryHandler: temporarily in MEM</li>\n</ol>\n<p>Example “To File”</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoggingDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getLogger(<span class=\"string\">\"LoggingDemo\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            FileHandler fileHandler = <span class=\"keyword\">new</span> FileHandler(<span class=\"string\">\"D:\\\\test/3.txt\"</span>);</div><div class=\"line\">            logger.addHandler(fileHandler);</div><div class=\"line\">            logger.info(<span class=\"string\">\"测试信息\"</span>);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>We’ll see that the txt is in format XML</p>\n<h1 id=\"Formatter\"><a href=\"#Formatter\" class=\"headerlink\" title=\"Formatter\"></a>Formatter</h1><p>Two important Formatter :</p>\n<ul>\n<li>java.util.logging.SimpleFormatter:<blockquote>\n<p>2004-12-20 23:08:52 org.apache.coyote.http11.Http11Protocol init<br>信息: Initializing Coyote HTTP/1.1 on http-8080</p>\n</blockquote>\n</li>\n<li>java.util.logging.XMLFormatter</li>\n</ul>\n<p>从上一节的例子可知，FileHandler的默认格式是java.util.logging.XMLFormatter，而ConsolerHandler的默认格式是java.util.logging.SimpleFormatter，可以使用Handler实例的setFormatter()方法来设定信息的输出格式。例如：</p>\n<p>fileHandler.setFormatter(new SimpleFormatter());</p>\n<p>Example:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    FileHandler fileHandler = <span class=\"keyword\">new</span> FileHandler(<span class=\"string\">\"./logger.log\"</span>);</div><div class=\"line\">    logger.addHandler(fileHandler);</div><div class=\"line\">    fileHandler.setFormatter(<span class=\"keyword\">new</span> SimpleFormatter()); <span class=\"comment\">// or new XMLFormatter()</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span>(SecurityException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Personalize\"><a href=\"#Personalize\" class=\"headerlink\" title=\"Personalize\"></a>Personalize</h1><h2 id=\"Handler\"><a href=\"#Handler\" class=\"headerlink\" title=\"Handler:\"></a>Handler:</h2><p>Rewrite :</p>\n<ul>\n<li>publish：主要方法，把日志记录写入你需要的媒介。</li>\n<li>flush：清除缓冲区并保存数据。</li>\n<li>close：关闭控制器。</li>\n</ul>\n<h2 id=\"Formatter-1\"><a href=\"#Formatter-1\" class=\"headerlink\" title=\"Formatter\"></a>Formatter</h2><p>除了XMLFormatter与SimpleFormatter之外，也可以自定义日志的输出格式，只要继承抽象类Formatter，并重新定义其format()方法即可。format()方法会传入一个java.util.logging.LogRecord对象作为参数，可以使用它来取得一些与程序执行有关的信息。</p>\n<h2 id=\"Level\"><a href=\"#Level\" class=\"headerlink\" title=\"Level\"></a>Level</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Type</th>\n<th style=\"text-align:center\">Iteger</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">OFF</td>\n<td style=\"text-align:center\">最大整数（ Integer. MAX_VALUE）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SEVERE</td>\n<td style=\"text-align:center\">1000</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">WARNING</td>\n<td style=\"text-align:center\">900</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">INFO</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CONFIG</td>\n<td style=\"text-align:center\">700</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINE</td>\n<td style=\"text-align:center\">500</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINER</td>\n<td style=\"text-align:center\">400</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINEST</td>\n<td style=\"text-align:center\">300</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ALL</td>\n<td style=\"text-align:center\">最小整数（Integer. MIN_VALUE）</td>\n</tr>\n</tbody>\n</table>\n<p>Example :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlertLevel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Level</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * <span class=\"doctag\">@param</span> name</div><div class=\"line\">     * <span class=\"doctag\">@param</span> value</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"title\">AlertLevel</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> value)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(name,value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getAnonymousLogger();</div><div class=\"line\">        <span class=\"comment\">//低于INFO（800），显示不出来，因为默认的配置 java.util.logging.ConsoleHandler.level = INFO</span></div><div class=\"line\">        logger.log(<span class=\"keyword\">new</span> AlertLevel(<span class=\"string\">\"ALERT\"</span>,<span class=\"number\">950</span>), <span class=\"string\">\"自定义 lever!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Hierarchy-of-Logger\"><a href=\"#Hierarchy-of-Logger\" class=\"headerlink\" title=\"Hierarchy of Logger\"></a>Hierarchy of Logger</h1><p>在使用Logger的静态getLogger()方法取得Logger实例时，给getLogger()方法的名称是有意义的。如果给定a，实际上将从根(Root)logger继承一些特性，像日志级别（Level）以及根logger的输出媒介控制器。如果再取得一个Logger实例，并给定名称a.b，则这次取得的Logger将继承pku这个Logger上的特性。从以下范例可以看出Logger在名称上的继承关系：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoggerHierarchyDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger onlyfunLogger = Logger.getLogger(<span class=\"string\">\"a\"</span>);</div><div class=\"line\">        Logger caterpillarLogger = Logger.getLogger(<span class=\"string\">\"a.b\"</span>);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"root logger:\"</span>+onlyfunLogger.getParent());</div><div class=\"line\">        System.out.println(<span class=\"string\">\"onlyfun logger:\"</span> + caterpillarLogger.getParent().getName());</div><div class=\"line\">        System.out.println(<span class=\"string\">\"caterpillar Logger:\"</span> + caterpillarLogger.getName() + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        onlyfunLogger.setLevel(Level.WARNING);</div><div class=\"line\">        caterpillarLogger.info(<span class=\"string\">\"caterpillar ' info\"</span>);</div><div class=\"line\">        caterpillarLogger.setLevel(Level.INFO);</div><div class=\"line\">        caterpillarLogger.info(<span class=\"string\">\"caterpillar ' info\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以上从xingele9017那里转载的.</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">Today I was told by my prof Professor at SAP using the Logger instead of System.out.println() in my code. And ….. What’s that????!</blockquote>\n\n\n<h1 id=\"Create-Logger-Object\"><a href=\"#Create-Logger-Object\" class=\"headerlink\" title=\"Create Logger Object\"></a>Create Logger Object</h1><p>要使用J2SE的Logger功能 首先要取得 java.util.logging.Logger实例. 这个可以通过两个方法做到:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查找或者创建一个Logger</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Logger <span class=\"title\">getLogger</span><span class=\"params\">(String name)</span></span>;</div><div class=\"line\"><span class=\"comment\">//为子系统查找或者创建一个Logger</span></div><div class=\"line\">  <span class=\"keyword\">static</span> Logger = getLogger(String name, String resourceBundleName);</div></pre></td></tr></table></figure>\n<p><strong>Example</strong>:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.logging.Logger;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Ex20Logger</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String [] args )</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getLogger(<span class=\"string\">\"demo\"</span>);</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            System.out.println(args[<span class=\"number\">0</span>]);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ArrayIndexOutOfBoundsException e)&#123;</div><div class=\"line\">            logger.warning(<span class=\"string\">\"No args Founded\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Output:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">juil. 28, 2017 4:32:45 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div></pre></td></tr></table></figure>\n<h1 id=\"Level-of-Logger\"><a href=\"#Level-of-Logger\" class=\"headerlink\" title=\"Level of Logger\"></a>Level of Logger</h1><p>The levels are defined in <i><font color=\"violet\">java.util.logging.Level</font></i>. From the most important to less :</p>\n<blockquote>\n<p>SEVERE &gt; WARNING &gt; INFO &gt; CONFIG &gt; FINE &gt; FINER &gt; FINEST</p>\n</blockquote>\n<h2 id=\"Default-Level\"><a href=\"#Default-Level\" class=\"headerlink\" title=\"Default Level\"></a>Default Level</h2><p><strong>Default print level is INFO, the messages less important than INFO will not be printed to screen.</strong> The default value can be setup in repository jre/lib</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Limit the message that are printed on the console to INFO and above.</span></div><div class=\"line\">java.util.logging.ConsoleHandler.level = INFO</div></pre></td></tr></table></figure>\n<p><strong>Example:</strong></p>\n<p>Adding this to the previous example:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">logger.severe(<span class=\"string\">\"Severe Warning\"</span>);</div><div class=\"line\">logger.warning(<span class=\"string\">\"just warning\"</span>);</div><div class=\"line\">logger.info(<span class=\"string\">\"Normal Info Msg\"</span>);</div><div class=\"line\">logger.config(<span class=\"string\">\"Config  Msg\"</span>);</div><div class=\"line\">logger.fine(<span class=\"string\">\"Fine Msg\"</span>);</div><div class=\"line\">logger.finer(<span class=\"string\">\"Finer Msg\"</span>);</div><div class=\"line\">logger.finest (<span class=\"string\">\"Finest Msg\"</span>);</div></pre></td></tr></table></figure>\n<p><strong>The result is </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:43:25 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div></pre></td></tr></table></figure>\n<h2 id=\"Logger-Handler\"><a href=\"#Logger-Handler\" class=\"headerlink\" title=\"Logger Handler\"></a>Logger Handler</h2><p>The default handler is java.util.logging.ConsolerHandler. A Logger may have several different handler, each of them has their own level control. Let’s see how to set it up.</p>\n<p>Adding to the previous Demo program:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Show all Message, simplely with this will not work.</span></div><div class=\"line\">logger.setLevel(Level.ALL);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Add Handler + set Level to ALL</span></div><div class=\"line\">ConsoleHandler consoleHandler = <span class=\"keyword\">new</span> ConsoleHandler();</div><div class=\"line\">consoleHandler.setLevel(Level.ALL);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//make consoleHandler the Handler of logger</span></div><div class=\"line\">logger.addHandler(consoleHandler);</div></pre></td></tr></table></figure>\n<p>Then we have all the warning here:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: No args Founded</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">SEVERE: Severe Warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">WARNING: just warning</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">INFO: Normal Info Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">CONFIG: Config  Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINE: Fine Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINER: Finer Msg</div><div class=\"line\">juil. 28, 2017 4:55:22 PM Ex20Logger main</div><div class=\"line\">FINEST: Finest Msg</div></pre></td></tr></table></figure>\n<h2 id=\"Another-Quick-Approche\"><a href=\"#Another-Quick-Approche\" class=\"headerlink\" title=\"Another Quick Approche\"></a>Another Quick Approche</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Logger logger = Logger.getLogger(<span class=\"string\">\"LoggingDemo\"</span>);</div><div class=\"line\">logger.log(Level.SEVERE, <span class=\"string\">\"Important\"</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"Detail-on-handlers\"><a href=\"#Detail-on-handlers\" class=\"headerlink\" title=\"Detail on handlers\"></a>Detail on handlers</h1><ol>\n<li>java.util.logging.ConsoleHandler : System.err</li>\n<li>java.util.logging.FileHandler: output to file</li>\n<li>java.util.logging.StreamHandler: to Stream</li>\n<li>java.util.logging.SocketHandler: to Socket</li>\n<li>java.util.logging.MemoryHandler: temporarily in MEM</li>\n</ol>\n<p>Example “To File”</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoggingDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getLogger(<span class=\"string\">\"LoggingDemo\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            FileHandler fileHandler = <span class=\"keyword\">new</span> FileHandler(<span class=\"string\">\"D:\\\\test/3.txt\"</span>);</div><div class=\"line\">            logger.addHandler(fileHandler);</div><div class=\"line\">            logger.info(<span class=\"string\">\"测试信息\"</span>);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>We’ll see that the txt is in format XML</p>\n<h1 id=\"Formatter\"><a href=\"#Formatter\" class=\"headerlink\" title=\"Formatter\"></a>Formatter</h1><p>Two important Formatter :</p>\n<ul>\n<li>java.util.logging.SimpleFormatter:<blockquote>\n<p>2004-12-20 23:08:52 org.apache.coyote.http11.Http11Protocol init<br>信息: Initializing Coyote HTTP/1.1 on http-8080</p>\n</blockquote>\n</li>\n<li>java.util.logging.XMLFormatter</li>\n</ul>\n<p>从上一节的例子可知，FileHandler的默认格式是java.util.logging.XMLFormatter，而ConsolerHandler的默认格式是java.util.logging.SimpleFormatter，可以使用Handler实例的setFormatter()方法来设定信息的输出格式。例如：</p>\n<p>fileHandler.setFormatter(new SimpleFormatter());</p>\n<p>Example:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    FileHandler fileHandler = <span class=\"keyword\">new</span> FileHandler(<span class=\"string\">\"./logger.log\"</span>);</div><div class=\"line\">    logger.addHandler(fileHandler);</div><div class=\"line\">    fileHandler.setFormatter(<span class=\"keyword\">new</span> SimpleFormatter()); <span class=\"comment\">// or new XMLFormatter()</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span>(SecurityException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Personalize\"><a href=\"#Personalize\" class=\"headerlink\" title=\"Personalize\"></a>Personalize</h1><h2 id=\"Handler\"><a href=\"#Handler\" class=\"headerlink\" title=\"Handler:\"></a>Handler:</h2><p>Rewrite :</p>\n<ul>\n<li>publish：主要方法，把日志记录写入你需要的媒介。</li>\n<li>flush：清除缓冲区并保存数据。</li>\n<li>close：关闭控制器。</li>\n</ul>\n<h2 id=\"Formatter-1\"><a href=\"#Formatter-1\" class=\"headerlink\" title=\"Formatter\"></a>Formatter</h2><p>除了XMLFormatter与SimpleFormatter之外，也可以自定义日志的输出格式，只要继承抽象类Formatter，并重新定义其format()方法即可。format()方法会传入一个java.util.logging.LogRecord对象作为参数，可以使用它来取得一些与程序执行有关的信息。</p>\n<h2 id=\"Level\"><a href=\"#Level\" class=\"headerlink\" title=\"Level\"></a>Level</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Type</th>\n<th style=\"text-align:center\">Iteger</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">OFF</td>\n<td style=\"text-align:center\">最大整数（ Integer. MAX_VALUE）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SEVERE</td>\n<td style=\"text-align:center\">1000</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">WARNING</td>\n<td style=\"text-align:center\">900</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">INFO</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CONFIG</td>\n<td style=\"text-align:center\">700</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINE</td>\n<td style=\"text-align:center\">500</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINER</td>\n<td style=\"text-align:center\">400</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FINEST</td>\n<td style=\"text-align:center\">300</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ALL</td>\n<td style=\"text-align:center\">最小整数（Integer. MIN_VALUE）</td>\n</tr>\n</tbody>\n</table>\n<p>Example :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlertLevel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Level</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * <span class=\"doctag\">@param</span> name</div><div class=\"line\">     * <span class=\"doctag\">@param</span> value</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"title\">AlertLevel</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> value)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(name,value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger logger = Logger.getAnonymousLogger();</div><div class=\"line\">        <span class=\"comment\">//低于INFO（800），显示不出来，因为默认的配置 java.util.logging.ConsoleHandler.level = INFO</span></div><div class=\"line\">        logger.log(<span class=\"keyword\">new</span> AlertLevel(<span class=\"string\">\"ALERT\"</span>,<span class=\"number\">950</span>), <span class=\"string\">\"自定义 lever!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Hierarchy-of-Logger\"><a href=\"#Hierarchy-of-Logger\" class=\"headerlink\" title=\"Hierarchy of Logger\"></a>Hierarchy of Logger</h1><p>在使用Logger的静态getLogger()方法取得Logger实例时，给getLogger()方法的名称是有意义的。如果给定a，实际上将从根(Root)logger继承一些特性，像日志级别（Level）以及根logger的输出媒介控制器。如果再取得一个Logger实例，并给定名称a.b，则这次取得的Logger将继承pku这个Logger上的特性。从以下范例可以看出Logger在名称上的继承关系：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoggerHierarchyDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Logger onlyfunLogger = Logger.getLogger(<span class=\"string\">\"a\"</span>);</div><div class=\"line\">        Logger caterpillarLogger = Logger.getLogger(<span class=\"string\">\"a.b\"</span>);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"root logger:\"</span>+onlyfunLogger.getParent());</div><div class=\"line\">        System.out.println(<span class=\"string\">\"onlyfun logger:\"</span> + caterpillarLogger.getParent().getName());</div><div class=\"line\">        System.out.println(<span class=\"string\">\"caterpillar Logger:\"</span> + caterpillarLogger.getName() + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        onlyfunLogger.setLevel(Level.WARNING);</div><div class=\"line\">        caterpillarLogger.info(<span class=\"string\">\"caterpillar ' info\"</span>);</div><div class=\"line\">        caterpillarLogger.setLevel(Level.INFO);</div><div class=\"line\">        caterpillarLogger.info(<span class=\"string\">\"caterpillar ' info\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以上从xingele9017那里转载的.</p>\n"},{"title":"Java 8 简介","_content":"\n\n# Java8的新功能\n\n- Stream: 新并行, 某种程度上可以避免用synchronized方式编写代码.\n- 向方法传递代码: Lambda, 方法引用\n- 接口中的默认方法\n\n## 流处理\n\n类似Unix系统里面的stdin stdout, 可以用pipe进行操作. 所以Java在 *java.util.stream* 里面增加了 **Stream API**. Java 透明地把输入的布线管的部分拿到几个CPU上面去执行你的Stream操作流水线. 就不用自己搞Thread了.\n\n![Linux pipe](uploads/11-0.png)\n\n## 行为参数化\n\n貌似其实就是可以把一个行为, 或者说是function,作为argument丢进去.\n\n![throw function into sort](uploads/11-1.png)\n\n## 并行 and 共享的 可变数据\n\n不是很懂....\n\n# Java 里面的 函数\n\n## 方法 和 Lambda作为一等公民\n\n把方法作为一等值, 好处就是可以大大的扩充程序员的工具库. 比如Java就没有eval这个js函数.\n\n~~~java\npublic void printDir(){\n    File[] dirFiles = new File(\".\").listFiles(File::isDirectory);\n    for(File f:dirFiles){\n        System.out.println(\"The Dirs : \"+ f);\n    }\n}\n~~~\n\n## Lambda 表达式\n\n\n## 传递代码\n","source":"_posts/0011Java8Basic.md","raw":"---\n  title: Java 8 简介\n  categories: Java\n  tags:\n    - java 8\n---\n\n\n# Java8的新功能\n\n- Stream: 新并行, 某种程度上可以避免用synchronized方式编写代码.\n- 向方法传递代码: Lambda, 方法引用\n- 接口中的默认方法\n\n## 流处理\n\n类似Unix系统里面的stdin stdout, 可以用pipe进行操作. 所以Java在 *java.util.stream* 里面增加了 **Stream API**. Java 透明地把输入的布线管的部分拿到几个CPU上面去执行你的Stream操作流水线. 就不用自己搞Thread了.\n\n![Linux pipe](uploads/11-0.png)\n\n## 行为参数化\n\n貌似其实就是可以把一个行为, 或者说是function,作为argument丢进去.\n\n![throw function into sort](uploads/11-1.png)\n\n## 并行 and 共享的 可变数据\n\n不是很懂....\n\n# Java 里面的 函数\n\n## 方法 和 Lambda作为一等公民\n\n把方法作为一等值, 好处就是可以大大的扩充程序员的工具库. 比如Java就没有eval这个js函数.\n\n~~~java\npublic void printDir(){\n    File[] dirFiles = new File(\".\").listFiles(File::isDirectory);\n    for(File f:dirFiles){\n        System.out.println(\"The Dirs : \"+ f);\n    }\n}\n~~~\n\n## Lambda 表达式\n\n\n## 传递代码\n","slug":"0011Java8Basic","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0bv000pc5cc8geyvokz","content":"<h1 id=\"Java8的新功能\"><a href=\"#Java8的新功能\" class=\"headerlink\" title=\"Java8的新功能\"></a>Java8的新功能</h1><ul>\n<li>Stream: 新并行, 某种程度上可以避免用synchronized方式编写代码.</li>\n<li>向方法传递代码: Lambda, 方法引用</li>\n<li>接口中的默认方法</li>\n</ul>\n<h2 id=\"流处理\"><a href=\"#流处理\" class=\"headerlink\" title=\"流处理\"></a>流处理</h2><p>类似Unix系统里面的stdin stdout, 可以用pipe进行操作. 所以Java在 <em>java.util.stream</em> 里面增加了 <strong>Stream API</strong>. Java 透明地把输入的布线管的部分拿到几个CPU上面去执行你的Stream操作流水线. 就不用自己搞Thread了.</p>\n<p><img src=\"uploads/11-0.png\" alt=\"Linux pipe\"></p>\n<h2 id=\"行为参数化\"><a href=\"#行为参数化\" class=\"headerlink\" title=\"行为参数化\"></a>行为参数化</h2><p>貌似其实就是可以把一个行为, 或者说是function,作为argument丢进去.</p>\n<p><img src=\"uploads/11-1.png\" alt=\"throw function into sort\"></p>\n<h2 id=\"并行-and-共享的-可变数据\"><a href=\"#并行-and-共享的-可变数据\" class=\"headerlink\" title=\"并行 and 共享的 可变数据\"></a>并行 and 共享的 可变数据</h2><p>不是很懂….</p>\n<h1 id=\"Java-里面的-函数\"><a href=\"#Java-里面的-函数\" class=\"headerlink\" title=\"Java 里面的 函数\"></a>Java 里面的 函数</h1><h2 id=\"方法-和-Lambda作为一等公民\"><a href=\"#方法-和-Lambda作为一等公民\" class=\"headerlink\" title=\"方法 和 Lambda作为一等公民\"></a>方法 和 Lambda作为一等公民</h2><p>把方法作为一等值, 好处就是可以大大的扩充程序员的工具库. 比如Java就没有eval这个js函数.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printDir</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    File[] dirFiles = <span class=\"keyword\">new</span> File(<span class=\"string\">\".\"</span>).listFiles(File::isDirectory);</div><div class=\"line\">    <span class=\"keyword\">for</span>(File f:dirFiles)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"The Dirs : \"</span>+ f);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Lambda-表达式\"><a href=\"#Lambda-表达式\" class=\"headerlink\" title=\"Lambda 表达式\"></a>Lambda 表达式</h2><h2 id=\"传递代码\"><a href=\"#传递代码\" class=\"headerlink\" title=\"传递代码\"></a>传递代码</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java8的新功能\"><a href=\"#Java8的新功能\" class=\"headerlink\" title=\"Java8的新功能\"></a>Java8的新功能</h1><ul>\n<li>Stream: 新并行, 某种程度上可以避免用synchronized方式编写代码.</li>\n<li>向方法传递代码: Lambda, 方法引用</li>\n<li>接口中的默认方法</li>\n</ul>\n<h2 id=\"流处理\"><a href=\"#流处理\" class=\"headerlink\" title=\"流处理\"></a>流处理</h2><p>类似Unix系统里面的stdin stdout, 可以用pipe进行操作. 所以Java在 <em>java.util.stream</em> 里面增加了 <strong>Stream API</strong>. Java 透明地把输入的布线管的部分拿到几个CPU上面去执行你的Stream操作流水线. 就不用自己搞Thread了.</p>\n<p><img src=\"uploads/11-0.png\" alt=\"Linux pipe\"></p>\n<h2 id=\"行为参数化\"><a href=\"#行为参数化\" class=\"headerlink\" title=\"行为参数化\"></a>行为参数化</h2><p>貌似其实就是可以把一个行为, 或者说是function,作为argument丢进去.</p>\n<p><img src=\"uploads/11-1.png\" alt=\"throw function into sort\"></p>\n<h2 id=\"并行-and-共享的-可变数据\"><a href=\"#并行-and-共享的-可变数据\" class=\"headerlink\" title=\"并行 and 共享的 可变数据\"></a>并行 and 共享的 可变数据</h2><p>不是很懂….</p>\n<h1 id=\"Java-里面的-函数\"><a href=\"#Java-里面的-函数\" class=\"headerlink\" title=\"Java 里面的 函数\"></a>Java 里面的 函数</h1><h2 id=\"方法-和-Lambda作为一等公民\"><a href=\"#方法-和-Lambda作为一等公民\" class=\"headerlink\" title=\"方法 和 Lambda作为一等公民\"></a>方法 和 Lambda作为一等公民</h2><p>把方法作为一等值, 好处就是可以大大的扩充程序员的工具库. 比如Java就没有eval这个js函数.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printDir</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    File[] dirFiles = <span class=\"keyword\">new</span> File(<span class=\"string\">\".\"</span>).listFiles(File::isDirectory);</div><div class=\"line\">    <span class=\"keyword\">for</span>(File f:dirFiles)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"The Dirs : \"</span>+ f);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Lambda-表达式\"><a href=\"#Lambda-表达式\" class=\"headerlink\" title=\"Lambda 表达式\"></a>Lambda 表达式</h2><h2 id=\"传递代码\"><a href=\"#传递代码\" class=\"headerlink\" title=\"传递代码\"></a>传递代码</h2>"},{"title":"Vim Study 1","_content":"\n\n## Method 1 Open from the command line as explained above\n\n~~~bash\nvim /etc/passwd\n~~~\n\n\n## Method 2: Open from the vim \n\n> :e ./file-name.txt\n\n## Saving a file\n\nThe following are methods to save a file:\n\n- write:\n> :w  OR   :write\n- update\n> :up\n- Save as\n> :w newfile.txt\n- Save as new file with overwrite option\n> :w! new-file-name.txt\n\n## The differences between word w and WORD W\n\n- word consists of a sequence of letters, digits and underscores. **WORD** consists of a sequence of non-blank characters, separated with white space.\n- 192.168.1.3 consists seven workds. But the whole 192.179.1.3 is considered as one WORD.\n\n## Position cursor at specific location within a line\n\nNagivation in a line: you can use *h* or *l*, you can also use the following to position cursor at various locations within the same line. \n\n| Navigation Key | Description | \n|:----------------|:----------------|\n| 0 | Go to the starting of current line |\n| $ | Go to the end of current line | \n| ^ | Go to the first non blank character of current line | \n| g\\_ | Go to the last non blank character of current line |\n\n## Position of Paragraph, Section, Sentence\n\nUse the following keys for paragraph, section and sentence navigation. \n\n| Navigation Key| Description | \n|:----------------|:----------------|\n| { | Go to the beginning of current paragraph |\n| } | Go to the beginning of next paragraph |\n| [[ | Go to the beginning of current section | \n| ]] | Go to the beginning of next section |\n| ( | Go to the beginning of previous sentence | \n| ) | Go to the beginning of next sentence |\n\n## Screen Navigation\n\nMove cursor to top center and bottom of the screen as explained below. \n\n| Navigation Key | Description | \n|:----:|:----:|\n| H | Go to the first line of current screen. (HOME)|\n| M | Go to the middle line of current screen | \n| L | Go to the last line of current screen |\n\n\n","source":"_posts/2018-01-25.md","raw":"---\n  title: Vim Study 1\n  categories: vim\n  tags: \n    - vim\n\n---\n\n\n## Method 1 Open from the command line as explained above\n\n~~~bash\nvim /etc/passwd\n~~~\n\n\n## Method 2: Open from the vim \n\n> :e ./file-name.txt\n\n## Saving a file\n\nThe following are methods to save a file:\n\n- write:\n> :w  OR   :write\n- update\n> :up\n- Save as\n> :w newfile.txt\n- Save as new file with overwrite option\n> :w! new-file-name.txt\n\n## The differences between word w and WORD W\n\n- word consists of a sequence of letters, digits and underscores. **WORD** consists of a sequence of non-blank characters, separated with white space.\n- 192.168.1.3 consists seven workds. But the whole 192.179.1.3 is considered as one WORD.\n\n## Position cursor at specific location within a line\n\nNagivation in a line: you can use *h* or *l*, you can also use the following to position cursor at various locations within the same line. \n\n| Navigation Key | Description | \n|:----------------|:----------------|\n| 0 | Go to the starting of current line |\n| $ | Go to the end of current line | \n| ^ | Go to the first non blank character of current line | \n| g\\_ | Go to the last non blank character of current line |\n\n## Position of Paragraph, Section, Sentence\n\nUse the following keys for paragraph, section and sentence navigation. \n\n| Navigation Key| Description | \n|:----------------|:----------------|\n| { | Go to the beginning of current paragraph |\n| } | Go to the beginning of next paragraph |\n| [[ | Go to the beginning of current section | \n| ]] | Go to the beginning of next section |\n| ( | Go to the beginning of previous sentence | \n| ) | Go to the beginning of next sentence |\n\n## Screen Navigation\n\nMove cursor to top center and bottom of the screen as explained below. \n\n| Navigation Key | Description | \n|:----:|:----:|\n| H | Go to the first line of current screen. (HOME)|\n| M | Go to the middle line of current screen | \n| L | Go to the last line of current screen |\n\n\n","slug":"2018-01-25","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0c1000uc5cc93gdhivk","content":"<h2 id=\"Method-1-Open-from-the-command-line-as-explained-above\"><a href=\"#Method-1-Open-from-the-command-line-as-explained-above\" class=\"headerlink\" title=\"Method 1 Open from the command line as explained above\"></a>Method 1 Open from the command line as explained above</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/passwd</div></pre></td></tr></table></figure>\n<h2 id=\"Method-2-Open-from-the-vim\"><a href=\"#Method-2-Open-from-the-vim\" class=\"headerlink\" title=\"Method 2: Open from the vim\"></a>Method 2: Open from the vim</h2><blockquote>\n<p>:e ./file-name.txt</p>\n</blockquote>\n<h2 id=\"Saving-a-file\"><a href=\"#Saving-a-file\" class=\"headerlink\" title=\"Saving a file\"></a>Saving a file</h2><p>The following are methods to save a file:</p>\n<ul>\n<li>write:<blockquote>\n<p>:w  OR   :write</p>\n</blockquote>\n</li>\n<li>update<blockquote>\n<p>:up</p>\n</blockquote>\n</li>\n<li>Save as<blockquote>\n<p>:w newfile.txt</p>\n</blockquote>\n</li>\n<li>Save as new file with overwrite option<blockquote>\n<p>:w! new-file-name.txt</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"The-differences-between-word-w-and-WORD-W\"><a href=\"#The-differences-between-word-w-and-WORD-W\" class=\"headerlink\" title=\"The differences between word w and WORD W\"></a>The differences between word w and WORD W</h2><ul>\n<li>word consists of a sequence of letters, digits and underscores. <strong>WORD</strong> consists of a sequence of non-blank characters, separated with white space.</li>\n<li>192.168.1.3 consists seven workds. But the whole 192.179.1.3 is considered as one WORD.</li>\n</ul>\n<h2 id=\"Position-cursor-at-specific-location-within-a-line\"><a href=\"#Position-cursor-at-specific-location-within-a-line\" class=\"headerlink\" title=\"Position cursor at specific location within a line\"></a>Position cursor at specific location within a line</h2><p>Nagivation in a line: you can use <em>h</em> or <em>l</em>, you can also use the following to position cursor at various locations within the same line. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Navigation Key</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">Go to the starting of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">Go to the end of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">Go to the first non blank character of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">g_</td>\n<td style=\"text-align:left\">Go to the last non blank character of current line</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Position-of-Paragraph-Section-Sentence\"><a href=\"#Position-of-Paragraph-Section-Sentence\" class=\"headerlink\" title=\"Position of Paragraph, Section, Sentence\"></a>Position of Paragraph, Section, Sentence</h2><p>Use the following keys for paragraph, section and sentence navigation. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Navigation Key</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{</td>\n<td style=\"text-align:left\">Go to the beginning of current paragraph</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">}</td>\n<td style=\"text-align:left\">Go to the beginning of next paragraph</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[[</td>\n<td style=\"text-align:left\">Go to the beginning of current section</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">]]</td>\n<td style=\"text-align:left\">Go to the beginning of next section</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(</td>\n<td style=\"text-align:left\">Go to the beginning of previous sentence</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">)</td>\n<td style=\"text-align:left\">Go to the beginning of next sentence</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Screen-Navigation\"><a href=\"#Screen-Navigation\" class=\"headerlink\" title=\"Screen Navigation\"></a>Screen Navigation</h2><p>Move cursor to top center and bottom of the screen as explained below. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Navigation Key</th>\n<th style=\"text-align:center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">Go to the first line of current screen. (HOME)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">M</td>\n<td style=\"text-align:center\">Go to the middle line of current screen</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">L</td>\n<td style=\"text-align:center\">Go to the last line of current screen</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Method-1-Open-from-the-command-line-as-explained-above\"><a href=\"#Method-1-Open-from-the-command-line-as-explained-above\" class=\"headerlink\" title=\"Method 1 Open from the command line as explained above\"></a>Method 1 Open from the command line as explained above</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/passwd</div></pre></td></tr></table></figure>\n<h2 id=\"Method-2-Open-from-the-vim\"><a href=\"#Method-2-Open-from-the-vim\" class=\"headerlink\" title=\"Method 2: Open from the vim\"></a>Method 2: Open from the vim</h2><blockquote>\n<p>:e ./file-name.txt</p>\n</blockquote>\n<h2 id=\"Saving-a-file\"><a href=\"#Saving-a-file\" class=\"headerlink\" title=\"Saving a file\"></a>Saving a file</h2><p>The following are methods to save a file:</p>\n<ul>\n<li>write:<blockquote>\n<p>:w  OR   :write</p>\n</blockquote>\n</li>\n<li>update<blockquote>\n<p>:up</p>\n</blockquote>\n</li>\n<li>Save as<blockquote>\n<p>:w newfile.txt</p>\n</blockquote>\n</li>\n<li>Save as new file with overwrite option<blockquote>\n<p>:w! new-file-name.txt</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"The-differences-between-word-w-and-WORD-W\"><a href=\"#The-differences-between-word-w-and-WORD-W\" class=\"headerlink\" title=\"The differences between word w and WORD W\"></a>The differences between word w and WORD W</h2><ul>\n<li>word consists of a sequence of letters, digits and underscores. <strong>WORD</strong> consists of a sequence of non-blank characters, separated with white space.</li>\n<li>192.168.1.3 consists seven workds. But the whole 192.179.1.3 is considered as one WORD.</li>\n</ul>\n<h2 id=\"Position-cursor-at-specific-location-within-a-line\"><a href=\"#Position-cursor-at-specific-location-within-a-line\" class=\"headerlink\" title=\"Position cursor at specific location within a line\"></a>Position cursor at specific location within a line</h2><p>Nagivation in a line: you can use <em>h</em> or <em>l</em>, you can also use the following to position cursor at various locations within the same line. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Navigation Key</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">Go to the starting of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">Go to the end of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">Go to the first non blank character of current line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">g_</td>\n<td style=\"text-align:left\">Go to the last non blank character of current line</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Position-of-Paragraph-Section-Sentence\"><a href=\"#Position-of-Paragraph-Section-Sentence\" class=\"headerlink\" title=\"Position of Paragraph, Section, Sentence\"></a>Position of Paragraph, Section, Sentence</h2><p>Use the following keys for paragraph, section and sentence navigation. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Navigation Key</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">{</td>\n<td style=\"text-align:left\">Go to the beginning of current paragraph</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">}</td>\n<td style=\"text-align:left\">Go to the beginning of next paragraph</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[[</td>\n<td style=\"text-align:left\">Go to the beginning of current section</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">]]</td>\n<td style=\"text-align:left\">Go to the beginning of next section</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(</td>\n<td style=\"text-align:left\">Go to the beginning of previous sentence</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">)</td>\n<td style=\"text-align:left\">Go to the beginning of next sentence</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Screen-Navigation\"><a href=\"#Screen-Navigation\" class=\"headerlink\" title=\"Screen Navigation\"></a>Screen Navigation</h2><p>Move cursor to top center and bottom of the screen as explained below. </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Navigation Key</th>\n<th style=\"text-align:center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">Go to the first line of current screen. (HOME)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">M</td>\n<td style=\"text-align:center\">Go to the middle line of current screen</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">L</td>\n<td style=\"text-align:center\">Go to the last line of current screen</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"How to calculate bracelet thickness","_content":"\n\nRecently, I want to buy myself a sliver bracelet which will fit exactly my wrist. This is a picture of what it looked like. \n![Image of Bracelet](/uploads/2018-02-01-1.jpg)\n\nYou are going to see that it is really hard to tell the thickness of this bracelet even if you got the circumference of your wrist. \n\nHere is what I have done to calculate it. \n\n{% note info %} \n**What I know:**\n\n- The longer radius of my wrist: 5.7\n- The shorter radius of my wrist: 4.1\n- The density of silver is: 10.05 g/cm\\*compact\n- We are going to use 200g silver build this bracelet\n\n{% endnote %} \n\n\nThus, if we want to calculate the diameter of this bracelet:\n\n![Image of Bracelet 2](/uploads/2018-02-01-2.png)\n\n\nHere I recommend a useful software : numi\n\nVery easy to use, in several try, I got my final result: 1.14 cm\n\n\nI back up this script for later use: \n\n~~~bash\nx=0.57 = 0,57\na=2.85+x = 3,42\nb=2.05+x = 2,62\n\nc=(a-b)*4+2*3.14*b = 19,65\n\n3.14*x*x*c*10.05 = 201,51\n0.57*2 = 1,14\n\n~~~\n\n","source":"_posts/2018-02-01-bracelet.md","raw":"---\n  title: How to calculate bracelet thickness\n  categories: Life\n  tags: \n    - bracelet\n    - life style\n---\n\n\nRecently, I want to buy myself a sliver bracelet which will fit exactly my wrist. This is a picture of what it looked like. \n![Image of Bracelet](/uploads/2018-02-01-1.jpg)\n\nYou are going to see that it is really hard to tell the thickness of this bracelet even if you got the circumference of your wrist. \n\nHere is what I have done to calculate it. \n\n{% note info %} \n**What I know:**\n\n- The longer radius of my wrist: 5.7\n- The shorter radius of my wrist: 4.1\n- The density of silver is: 10.05 g/cm\\*compact\n- We are going to use 200g silver build this bracelet\n\n{% endnote %} \n\n\nThus, if we want to calculate the diameter of this bracelet:\n\n![Image of Bracelet 2](/uploads/2018-02-01-2.png)\n\n\nHere I recommend a useful software : numi\n\nVery easy to use, in several try, I got my final result: 1.14 cm\n\n\nI back up this script for later use: \n\n~~~bash\nx=0.57 = 0,57\na=2.85+x = 3,42\nb=2.05+x = 2,62\n\nc=(a-b)*4+2*3.14*b = 19,65\n\n3.14*x*x*c*10.05 = 201,51\n0.57*2 = 1,14\n\n~~~\n\n","slug":"2018-02-01-bracelet","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0c8000xc5cczrsxurr6","content":"<p>Recently, I want to buy myself a sliver bracelet which will fit exactly my wrist. This is a picture of what it looked like.<br><img src=\"/uploads/2018-02-01-1.jpg\" alt=\"Image of Bracelet\"></p>\n<p>You are going to see that it is really hard to tell the thickness of this bracelet even if you got the circumference of your wrist. </p>\n<p>Here is what I have done to calculate it. </p>\n<div class=\"note info\"><p><strong>What I know:</strong></p>\n<ul>\n<li>The longer radius of my wrist: 5.7</li>\n<li>The shorter radius of my wrist: 4.1</li>\n<li>The density of silver is: 10.05 g/cm*compact</li>\n<li>We are going to use 200g silver build this bracelet</li>\n</ul>\n</div> \n<p>Thus, if we want to calculate the diameter of this bracelet:</p>\n<p><img src=\"/uploads/2018-02-01-2.png\" alt=\"Image of Bracelet 2\"></p>\n<p>Here I recommend a useful software : numi</p>\n<p>Very easy to use, in several try, I got my final result: 1.14 cm</p>\n<p>I back up this script for later use: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">x=0.57 = 0,57</div><div class=\"line\">a=2.85+x = 3,42</div><div class=\"line\">b=2.05+x = 2,62</div><div class=\"line\"></div><div class=\"line\">c=(a-b)*4+2*3.14*b = 19,65</div><div class=\"line\"></div><div class=\"line\">3.14*x*x*c*10.05 = 201,51</div><div class=\"line\">0.57*2 = 1,14</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Recently, I want to buy myself a sliver bracelet which will fit exactly my wrist. This is a picture of what it looked like.<br><img src=\"/uploads/2018-02-01-1.jpg\" alt=\"Image of Bracelet\"></p>\n<p>You are going to see that it is really hard to tell the thickness of this bracelet even if you got the circumference of your wrist. </p>\n<p>Here is what I have done to calculate it. </p>\n<div class=\"note info\"><p><strong>What I know:</strong></p>\n<ul>\n<li>The longer radius of my wrist: 5.7</li>\n<li>The shorter radius of my wrist: 4.1</li>\n<li>The density of silver is: 10.05 g/cm*compact</li>\n<li>We are going to use 200g silver build this bracelet</li>\n</ul>\n</div> \n<p>Thus, if we want to calculate the diameter of this bracelet:</p>\n<p><img src=\"/uploads/2018-02-01-2.png\" alt=\"Image of Bracelet 2\"></p>\n<p>Here I recommend a useful software : numi</p>\n<p>Very easy to use, in several try, I got my final result: 1.14 cm</p>\n<p>I back up this script for later use: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">x=0.57 = 0,57</div><div class=\"line\">a=2.85+x = 3,42</div><div class=\"line\">b=2.05+x = 2,62</div><div class=\"line\"></div><div class=\"line\">c=(a-b)*4+2*3.14*b = 19,65</div><div class=\"line\"></div><div class=\"line\">3.14*x*x*c*10.05 = 201,51</div><div class=\"line\">0.57*2 = 1,14</div></pre></td></tr></table></figure>\n"},{"title":"Login to machine with root permission and password","_content":"\n## Needs \nFor the TechOps, we use the ssh in our work everyday to login to the remote machines, and for some reasons, passing the rsa keys might be risky in some cases. And most importantly, I am so lazy setting up all the rsa environments for just a trail function. Thus, what I want to do is logging into the remote machine\n\n- with root user\n- with password\n\n## Problems\n\nAnd, often, when you set up your password for root and feel exciting to start your work, you are going to find this message: \n\n{% note danger %} \nMBP-de-XICUN:UltiSnips xicunhan$ ssh root@192.168.0.119\nThe authenticity of host '192.168.0.119 (192.168.0.119)' can't be established.\nECDSA key fingerprint is SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.0.119' (ECDSA) to the list of known hosts.\nroot@192.168.0.119's password: \nPermission denied, please try again.\n{% endnote %} \n\nWhat is happening?? Running the ssh with **debug** information won't give you any hint.\n\n~~~bash\nMacBook-Pro-de-XICUN:binsMacOSX xicunhan$ ssh -v root@192.168.0.119\nOpenSSH_7.6p1, LibreSSL 2.6.2\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 48: Applying options for *\ndebug1: Connecting to 192.168.0.119 port 22.\ndebug1: Connection established.\ndebug1: identity file /Users/xicunhan/.ssh/id_rsa type 0\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5p1 Ubuntu-10\ndebug1: match: OpenSSH_7.5p1 Ubuntu-10 pat OpenSSH\\* compat 0x04000000\ndebug1: Authenticating to 192.168.0.119:22 as 'root'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk\ndebug1: Host '192.168.0.119' is known and matches the ECDSA host key.\ndebug1: Found key in /Users/xicunhan/.ssh/known_hosts:15\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:l8wBPlCdi+tN9sWXHIeiwtpaJFAGKdttYufYc6kACPo /Users/xicunhan/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_dsa\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_ecdsa\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_ed25519\ndebug1: Next authentication method: password\nroot@192.168.0.119's password: \ndebug1: Authentications that can continue: publickey,password\nPermission denied, please try again.\n~~~\n\n## Solution\n\nThe fact is that, the ssh is configured to do not give permission for root access with password. **To make our machine more vulnerable willingly for our lazyness** what we should done is to :\n\n- Edit the /etc/ssh/sshd_config adding the following lines:\n\n> PasswordAuthentication yes\n\n> PermitRootLogin yes\n\n- Restart the service \n\n> systemctl restart ssh sshd\n\n\n","source":"_posts/2018-02-09-sshd.md","raw":"---\n  title: Login to machine with root permission and password\n  categories: linux\n  tags: \n    - ssh\n    - ops\n---\n\n## Needs \nFor the TechOps, we use the ssh in our work everyday to login to the remote machines, and for some reasons, passing the rsa keys might be risky in some cases. And most importantly, I am so lazy setting up all the rsa environments for just a trail function. Thus, what I want to do is logging into the remote machine\n\n- with root user\n- with password\n\n## Problems\n\nAnd, often, when you set up your password for root and feel exciting to start your work, you are going to find this message: \n\n{% note danger %} \nMBP-de-XICUN:UltiSnips xicunhan$ ssh root@192.168.0.119\nThe authenticity of host '192.168.0.119 (192.168.0.119)' can't be established.\nECDSA key fingerprint is SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.0.119' (ECDSA) to the list of known hosts.\nroot@192.168.0.119's password: \nPermission denied, please try again.\n{% endnote %} \n\nWhat is happening?? Running the ssh with **debug** information won't give you any hint.\n\n~~~bash\nMacBook-Pro-de-XICUN:binsMacOSX xicunhan$ ssh -v root@192.168.0.119\nOpenSSH_7.6p1, LibreSSL 2.6.2\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 48: Applying options for *\ndebug1: Connecting to 192.168.0.119 port 22.\ndebug1: Connection established.\ndebug1: identity file /Users/xicunhan/.ssh/id_rsa type 0\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/xicunhan/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5p1 Ubuntu-10\ndebug1: match: OpenSSH_7.5p1 Ubuntu-10 pat OpenSSH\\* compat 0x04000000\ndebug1: Authenticating to 192.168.0.119:22 as 'root'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk\ndebug1: Host '192.168.0.119' is known and matches the ECDSA host key.\ndebug1: Found key in /Users/xicunhan/.ssh/known_hosts:15\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:l8wBPlCdi+tN9sWXHIeiwtpaJFAGKdttYufYc6kACPo /Users/xicunhan/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_dsa\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_ecdsa\ndebug1: Trying private key: /Users/xicunhan/.ssh/id_ed25519\ndebug1: Next authentication method: password\nroot@192.168.0.119's password: \ndebug1: Authentications that can continue: publickey,password\nPermission denied, please try again.\n~~~\n\n## Solution\n\nThe fact is that, the ssh is configured to do not give permission for root access with password. **To make our machine more vulnerable willingly for our lazyness** what we should done is to :\n\n- Edit the /etc/ssh/sshd_config adding the following lines:\n\n> PasswordAuthentication yes\n\n> PermitRootLogin yes\n\n- Restart the service \n\n> systemctl restart ssh sshd\n\n\n","slug":"2018-02-09-sshd","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0cc0011c5ccbkp8zkok","content":"<h2 id=\"Needs\"><a href=\"#Needs\" class=\"headerlink\" title=\"Needs\"></a>Needs</h2><p>For the TechOps, we use the ssh in our work everyday to login to the remote machines, and for some reasons, passing the rsa keys might be risky in some cases. And most importantly, I am so lazy setting up all the rsa environments for just a trail function. Thus, what I want to do is logging into the remote machine</p>\n<ul>\n<li>with root user</li>\n<li>with password</li>\n</ul>\n<h2 id=\"Problems\"><a href=\"#Problems\" class=\"headerlink\" title=\"Problems\"></a>Problems</h2><p>And, often, when you set up your password for root and feel exciting to start your work, you are going to find this message: </p>\n<div class=\"note danger\"><p>MBP-de-XICUN:UltiSnips xicunhan$ ssh root@192.168.0.119<br>The authenticity of host ‘192.168.0.119 (192.168.0.119)’ can’t be established.<br>ECDSA key fingerprint is SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk.<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘192.168.0.119’ (ECDSA) to the list of known hosts.<br>root@192.168.0.119’s password:<br>Permission denied, please try again.</p>\n</div> \n<p>What is happening?? Running the ssh with <strong>debug</strong> information won’t give you any hint.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\">MacBook-Pro-de-XICUN:binsMacOSX xicunhan$ ssh -v root@192.168.0.119</div><div class=\"line\">OpenSSH_7.6p1, LibreSSL 2.6.2</div><div class=\"line\">debug1: Reading configuration data /etc/ssh/ssh_config</div><div class=\"line\">debug1: /etc/ssh/ssh_config line 48: Applying options <span class=\"keyword\">for</span> *</div><div class=\"line\">debug1: Connecting to 192.168.0.119 port 22.</div><div class=\"line\">debug1: Connection established.</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_rsa <span class=\"built_in\">type</span> 0</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_rsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_dsa <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_dsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ecdsa <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ecdsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ed25519 <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ed25519-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: Local version string SSH-2.0-OpenSSH_7.6</div><div class=\"line\">debug1: Remote protocol version 2.0, remote software version OpenSSH_7.5p1 Ubuntu-10</div><div class=\"line\">debug1: match: OpenSSH_7.5p1 Ubuntu-10 pat OpenSSH\\* compat 0x04000000</div><div class=\"line\">debug1: Authenticating to 192.168.0.119:22 as <span class=\"string\">'root'</span></div><div class=\"line\">debug1: SSH2_MSG_KEXINIT sent</div><div class=\"line\">debug1: SSH2_MSG_KEXINIT received</div><div class=\"line\">debug1: kex: algorithm: curve25519-sha256</div><div class=\"line\">debug1: kex: host key algorithm: ecdsa-sha2-nistp256</div><div class=\"line\">debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none</div><div class=\"line\">debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none</div><div class=\"line\">debug1: expecting SSH2_MSG_KEX_ECDH_REPLY</div><div class=\"line\">debug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk</div><div class=\"line\">debug1: Host <span class=\"string\">'192.168.0.119'</span> is known and matches the ECDSA host key.</div><div class=\"line\">debug1: Found key <span class=\"keyword\">in</span> /Users/xicunhan/.ssh/known_hosts:15</div><div class=\"line\">debug1: rekey after 134217728 blocks</div><div class=\"line\">debug1: SSH2_MSG_NEWKEYS sent</div><div class=\"line\">debug1: expecting SSH2_MSG_NEWKEYS</div><div class=\"line\">debug1: SSH2_MSG_NEWKEYS received</div><div class=\"line\">debug1: rekey after 134217728 blocks</div><div class=\"line\">debug1: SSH2_MSG_EXT_INFO received</div><div class=\"line\">debug1: kex_input_ext_info: server-sig-algs=&lt;ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521&gt;</div><div class=\"line\">debug1: SSH2_MSG_SERVICE_ACCEPT received</div><div class=\"line\">debug1: Authentications that can <span class=\"built_in\">continue</span>: publickey,password</div><div class=\"line\">debug1: Next authentication method: publickey</div><div class=\"line\">debug1: Offering public key: RSA SHA256:l8wBPlCdi+tN9sWXHIeiwtpaJFAGKdttYufYc6kACPo /Users/xicunhan/.ssh/id_rsa</div><div class=\"line\">debug1: Authentications that can <span class=\"built_in\">continue</span>: publickey,password</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_dsa</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_ecdsa</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_ed25519</div><div class=\"line\">debug1: Next authentication method: password</div><div class=\"line\">root@192.168.0.119<span class=\"string\">'s password: </span></div><div class=\"line\">debug1: Authentications that can continue: publickey,password</div><div class=\"line\">Permission denied, please try again.</div></pre></td></tr></table></figure>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The fact is that, the ssh is configured to do not give permission for root access with password. <strong>To make our machine more vulnerable willingly for our lazyness</strong> what we should done is to :</p>\n<ul>\n<li>Edit the /etc/ssh/sshd_config adding the following lines:</li>\n</ul>\n<blockquote>\n<p>PasswordAuthentication yes</p>\n<p>PermitRootLogin yes</p>\n</blockquote>\n<ul>\n<li>Restart the service </li>\n</ul>\n<blockquote>\n<p>systemctl restart ssh sshd</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Needs\"><a href=\"#Needs\" class=\"headerlink\" title=\"Needs\"></a>Needs</h2><p>For the TechOps, we use the ssh in our work everyday to login to the remote machines, and for some reasons, passing the rsa keys might be risky in some cases. And most importantly, I am so lazy setting up all the rsa environments for just a trail function. Thus, what I want to do is logging into the remote machine</p>\n<ul>\n<li>with root user</li>\n<li>with password</li>\n</ul>\n<h2 id=\"Problems\"><a href=\"#Problems\" class=\"headerlink\" title=\"Problems\"></a>Problems</h2><p>And, often, when you set up your password for root and feel exciting to start your work, you are going to find this message: </p>\n<div class=\"note danger\"><p>MBP-de-XICUN:UltiSnips xicunhan$ ssh root@192.168.0.119<br>The authenticity of host ‘192.168.0.119 (192.168.0.119)’ can’t be established.<br>ECDSA key fingerprint is SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk.<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘192.168.0.119’ (ECDSA) to the list of known hosts.<br>root@192.168.0.119’s password:<br>Permission denied, please try again.</p>\n</div> \n<p>What is happening?? Running the ssh with <strong>debug</strong> information won’t give you any hint.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\">MacBook-Pro-de-XICUN:binsMacOSX xicunhan$ ssh -v root@192.168.0.119</div><div class=\"line\">OpenSSH_7.6p1, LibreSSL 2.6.2</div><div class=\"line\">debug1: Reading configuration data /etc/ssh/ssh_config</div><div class=\"line\">debug1: /etc/ssh/ssh_config line 48: Applying options <span class=\"keyword\">for</span> *</div><div class=\"line\">debug1: Connecting to 192.168.0.119 port 22.</div><div class=\"line\">debug1: Connection established.</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_rsa <span class=\"built_in\">type</span> 0</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_rsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_dsa <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_dsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ecdsa <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ecdsa-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ed25519 <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: key_load_public: No such file or directory</div><div class=\"line\">debug1: identity file /Users/xicunhan/.ssh/id_ed25519-cert <span class=\"built_in\">type</span> -1</div><div class=\"line\">debug1: Local version string SSH-2.0-OpenSSH_7.6</div><div class=\"line\">debug1: Remote protocol version 2.0, remote software version OpenSSH_7.5p1 Ubuntu-10</div><div class=\"line\">debug1: match: OpenSSH_7.5p1 Ubuntu-10 pat OpenSSH\\* compat 0x04000000</div><div class=\"line\">debug1: Authenticating to 192.168.0.119:22 as <span class=\"string\">'root'</span></div><div class=\"line\">debug1: SSH2_MSG_KEXINIT sent</div><div class=\"line\">debug1: SSH2_MSG_KEXINIT received</div><div class=\"line\">debug1: kex: algorithm: curve25519-sha256</div><div class=\"line\">debug1: kex: host key algorithm: ecdsa-sha2-nistp256</div><div class=\"line\">debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none</div><div class=\"line\">debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none</div><div class=\"line\">debug1: expecting SSH2_MSG_KEX_ECDH_REPLY</div><div class=\"line\">debug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ie0c9FfmvITir9FT1KBv6R7qwa4dg2T1TQK5T/yDXyk</div><div class=\"line\">debug1: Host <span class=\"string\">'192.168.0.119'</span> is known and matches the ECDSA host key.</div><div class=\"line\">debug1: Found key <span class=\"keyword\">in</span> /Users/xicunhan/.ssh/known_hosts:15</div><div class=\"line\">debug1: rekey after 134217728 blocks</div><div class=\"line\">debug1: SSH2_MSG_NEWKEYS sent</div><div class=\"line\">debug1: expecting SSH2_MSG_NEWKEYS</div><div class=\"line\">debug1: SSH2_MSG_NEWKEYS received</div><div class=\"line\">debug1: rekey after 134217728 blocks</div><div class=\"line\">debug1: SSH2_MSG_EXT_INFO received</div><div class=\"line\">debug1: kex_input_ext_info: server-sig-algs=&lt;ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521&gt;</div><div class=\"line\">debug1: SSH2_MSG_SERVICE_ACCEPT received</div><div class=\"line\">debug1: Authentications that can <span class=\"built_in\">continue</span>: publickey,password</div><div class=\"line\">debug1: Next authentication method: publickey</div><div class=\"line\">debug1: Offering public key: RSA SHA256:l8wBPlCdi+tN9sWXHIeiwtpaJFAGKdttYufYc6kACPo /Users/xicunhan/.ssh/id_rsa</div><div class=\"line\">debug1: Authentications that can <span class=\"built_in\">continue</span>: publickey,password</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_dsa</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_ecdsa</div><div class=\"line\">debug1: Trying private key: /Users/xicunhan/.ssh/id_ed25519</div><div class=\"line\">debug1: Next authentication method: password</div><div class=\"line\">root@192.168.0.119<span class=\"string\">'s password: </span></div><div class=\"line\">debug1: Authentications that can continue: publickey,password</div><div class=\"line\">Permission denied, please try again.</div></pre></td></tr></table></figure>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The fact is that, the ssh is configured to do not give permission for root access with password. <strong>To make our machine more vulnerable willingly for our lazyness</strong> what we should done is to :</p>\n<ul>\n<li>Edit the /etc/ssh/sshd_config adding the following lines:</li>\n</ul>\n<blockquote>\n<p>PasswordAuthentication yes</p>\n<p>PermitRootLogin yes</p>\n</blockquote>\n<ul>\n<li>Restart the service </li>\n</ul>\n<blockquote>\n<p>systemctl restart ssh sshd</p>\n</blockquote>\n"},{"title":"Chef Study 1 - Installation","_content":"\n# Installation of Chef \n\n\n1. Download Chef in <a href=\"https://downloads.chef.io/\">Official Download Page</a>\n\n2. Install according to the version of Linux/Windows/Mac \n\n> rpm -Uvh ./chefdk-2.3.4-1.el7.x86_64.rpm\n> dpkg -i chefdk.deb\n\nOften, it will install the Chef and Ruby to /opt/chefdk/embedded we should add this to the PATH. \n\n~~~bash\necho 'eval \"$(chef shell-init bash)\"' >> ~/.bash_profile\necho 'export PATH=\"/opt/chefdk/embedded/bin:$PATH\"' >> ~/.bash_profile\nsource ~/.bash_profile\n~~~\n\n3. Check Installation\n\n> which ruby\n\n\n# Ruby Introduction\n\n## Comments\n\nRuby use # as comment \n\n## Variables\n\n~~~ruby\na=1\nb=\"hello\"\nc=Object.new\n~~~\n\n## Calculation, String\n\nNothing to say.\n\n## Here Doc Presentation\n\n~~~ruby\n<< HERE_IS_DOC\nblablabla \n\nsdjfijsidfj\n\nHERE_IS_DOC\n~~~\n\n## Array \n\ntypes = ['crispy', 'raw', 'crunchy']\ntypes.length\ntypes.size\ntypes.push 'smoked'\ntypes << 'deep fried'\n\ntypes[0]\ntypes.last\ntypes.first\n\n## Hash\n\nprices = { oscar: 4.55, boars: 5.23}\nprices[:oscar]\nprices.values\n\ninstead of :, the => is often used. \n\n\n## RegExp\n\n*=~*\n\n\"Bacon is good\" =~ /lie/ #=> nil\n\"Bacon is good\" =~ /bacon/ #=> 0\n\"Bacon is good\" !~ /lie/ #=> true\n\n\n\n\n\n","source":"_posts/chef01.md","raw":"---\n  title: Chef Study 1 - Installation\n  categories: Cloud\n  tags: \n    - Chef\n    - Cloud-Computing\n---\n\n# Installation of Chef \n\n\n1. Download Chef in <a href=\"https://downloads.chef.io/\">Official Download Page</a>\n\n2. Install according to the version of Linux/Windows/Mac \n\n> rpm -Uvh ./chefdk-2.3.4-1.el7.x86_64.rpm\n> dpkg -i chefdk.deb\n\nOften, it will install the Chef and Ruby to /opt/chefdk/embedded we should add this to the PATH. \n\n~~~bash\necho 'eval \"$(chef shell-init bash)\"' >> ~/.bash_profile\necho 'export PATH=\"/opt/chefdk/embedded/bin:$PATH\"' >> ~/.bash_profile\nsource ~/.bash_profile\n~~~\n\n3. Check Installation\n\n> which ruby\n\n\n# Ruby Introduction\n\n## Comments\n\nRuby use # as comment \n\n## Variables\n\n~~~ruby\na=1\nb=\"hello\"\nc=Object.new\n~~~\n\n## Calculation, String\n\nNothing to say.\n\n## Here Doc Presentation\n\n~~~ruby\n<< HERE_IS_DOC\nblablabla \n\nsdjfijsidfj\n\nHERE_IS_DOC\n~~~\n\n## Array \n\ntypes = ['crispy', 'raw', 'crunchy']\ntypes.length\ntypes.size\ntypes.push 'smoked'\ntypes << 'deep fried'\n\ntypes[0]\ntypes.last\ntypes.first\n\n## Hash\n\nprices = { oscar: 4.55, boars: 5.23}\nprices[:oscar]\nprices.values\n\ninstead of :, the => is often used. \n\n\n## RegExp\n\n*=~*\n\n\"Bacon is good\" =~ /lie/ #=> nil\n\"Bacon is good\" =~ /bacon/ #=> 0\n\"Bacon is good\" !~ /lie/ #=> true\n\n\n\n\n\n","slug":"chef01","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0cg0012c5ccvg5rnslk","content":"<h1 id=\"Installation-of-Chef\"><a href=\"#Installation-of-Chef\" class=\"headerlink\" title=\"Installation of Chef\"></a>Installation of Chef</h1><ol>\n<li><p>Download Chef in <a href=\"https://downloads.chef.io/\" target=\"_blank\" rel=\"external\">Official Download Page</a></p>\n</li>\n<li><p>Install according to the version of Linux/Windows/Mac </p>\n</li>\n</ol>\n<blockquote>\n<p>rpm -Uvh ./chefdk-2.3.4-1.el7.x86_64.rpm<br>dpkg -i chefdk.deb</p>\n</blockquote>\n<p>Often, it will install the Chef and Ruby to /opt/chefdk/embedded we should add this to the PATH. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(chef shell-init bash)\"'</span> &gt;&gt; ~/.bash_profile</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'export PATH=\"/opt/chefdk/embedded/bin:$PATH\"'</span> &gt;&gt; ~/.bash_profile</div><div class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</div></pre></td></tr></table></figure>\n<ol>\n<li>Check Installation</li>\n</ol>\n<blockquote>\n<p>which ruby</p>\n</blockquote>\n<h1 id=\"Ruby-Introduction\"><a href=\"#Ruby-Introduction\" class=\"headerlink\" title=\"Ruby Introduction\"></a>Ruby Introduction</h1><h2 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h2><p>Ruby use # as comment </p>\n<h2 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">a=<span class=\"number\">1</span></div><div class=\"line\">b=<span class=\"string\">\"hello\"</span></div><div class=\"line\">c=Object.new</div></pre></td></tr></table></figure>\n<h2 id=\"Calculation-String\"><a href=\"#Calculation-String\" class=\"headerlink\" title=\"Calculation, String\"></a>Calculation, String</h2><p>Nothing to say.</p>\n<h2 id=\"Here-Doc-Presentation\"><a href=\"#Here-Doc-Presentation\" class=\"headerlink\" title=\"Here Doc Presentation\"></a>Here Doc Presentation</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;&lt; HERE_IS_DOC</div><div class=\"line\">blablabla </div><div class=\"line\"></div><div class=\"line\">sdjfijsidfj</div><div class=\"line\"></div><div class=\"line\">HERE_IS_DOC</div></pre></td></tr></table></figure>\n<h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><p>types = [‘crispy’, ‘raw’, ‘crunchy’]<br>types.length<br>types.size<br>types.push ‘smoked’<br>types &lt;&lt; ‘deep fried’</p>\n<p>types[0]<br>types.last<br>types.first</p>\n<h2 id=\"Hash\"><a href=\"#Hash\" class=\"headerlink\" title=\"Hash\"></a>Hash</h2><p>prices = { oscar: 4.55, boars: 5.23}<br>prices[:oscar]<br>prices.values</p>\n<p>instead of :, the =&gt; is often used. </p>\n<h2 id=\"RegExp\"><a href=\"#RegExp\" class=\"headerlink\" title=\"RegExp\"></a>RegExp</h2><p><em>=~</em></p>\n<p>“Bacon is good” =~ /lie/ #=&gt; nil<br>“Bacon is good” =~ /bacon/ #=&gt; 0<br>“Bacon is good” !~ /lie/ #=&gt; true</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Installation-of-Chef\"><a href=\"#Installation-of-Chef\" class=\"headerlink\" title=\"Installation of Chef\"></a>Installation of Chef</h1><ol>\n<li><p>Download Chef in <a href=\"https://downloads.chef.io/\" target=\"_blank\" rel=\"external\">Official Download Page</a></p>\n</li>\n<li><p>Install according to the version of Linux/Windows/Mac </p>\n</li>\n</ol>\n<blockquote>\n<p>rpm -Uvh ./chefdk-2.3.4-1.el7.x86_64.rpm<br>dpkg -i chefdk.deb</p>\n</blockquote>\n<p>Often, it will install the Chef and Ruby to /opt/chefdk/embedded we should add this to the PATH. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(chef shell-init bash)\"'</span> &gt;&gt; ~/.bash_profile</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'export PATH=\"/opt/chefdk/embedded/bin:$PATH\"'</span> &gt;&gt; ~/.bash_profile</div><div class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</div></pre></td></tr></table></figure>\n<ol>\n<li>Check Installation</li>\n</ol>\n<blockquote>\n<p>which ruby</p>\n</blockquote>\n<h1 id=\"Ruby-Introduction\"><a href=\"#Ruby-Introduction\" class=\"headerlink\" title=\"Ruby Introduction\"></a>Ruby Introduction</h1><h2 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h2><p>Ruby use # as comment </p>\n<h2 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">a=<span class=\"number\">1</span></div><div class=\"line\">b=<span class=\"string\">\"hello\"</span></div><div class=\"line\">c=Object.new</div></pre></td></tr></table></figure>\n<h2 id=\"Calculation-String\"><a href=\"#Calculation-String\" class=\"headerlink\" title=\"Calculation, String\"></a>Calculation, String</h2><p>Nothing to say.</p>\n<h2 id=\"Here-Doc-Presentation\"><a href=\"#Here-Doc-Presentation\" class=\"headerlink\" title=\"Here Doc Presentation\"></a>Here Doc Presentation</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;&lt; HERE_IS_DOC</div><div class=\"line\">blablabla </div><div class=\"line\"></div><div class=\"line\">sdjfijsidfj</div><div class=\"line\"></div><div class=\"line\">HERE_IS_DOC</div></pre></td></tr></table></figure>\n<h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><p>types = [‘crispy’, ‘raw’, ‘crunchy’]<br>types.length<br>types.size<br>types.push ‘smoked’<br>types &lt;&lt; ‘deep fried’</p>\n<p>types[0]<br>types.last<br>types.first</p>\n<h2 id=\"Hash\"><a href=\"#Hash\" class=\"headerlink\" title=\"Hash\"></a>Hash</h2><p>prices = { oscar: 4.55, boars: 5.23}<br>prices[:oscar]<br>prices.values</p>\n<p>instead of :, the =&gt; is often used. </p>\n<h2 id=\"RegExp\"><a href=\"#RegExp\" class=\"headerlink\" title=\"RegExp\"></a>RegExp</h2><p><em>=~</em></p>\n<p>“Bacon is good” =~ /lie/ #=&gt; nil<br>“Bacon is good” =~ /bacon/ #=&gt; 0<br>“Bacon is good” !~ /lie/ #=&gt; true</p>\n"},{"title":"香港回归20周年, 我作为一个小粉红要骂人!","_content":"\n事情要从朋友的一个wechat朋友圈文章说起. 大概朋友转的一个朋友圈是这样的:\n\n{% note info %}\n首先是一个大大的标题党 **就算被封号也不能粉饰太平**, 接下来是长篇的论述. 大概是说, 国内又出现了某些法令, 禁止了很多煽动性的文章, 还有一些淫乱, 同性恋的媒体不可以发表. 首先同性恋其实跟淫乱不能放在一起, 然后很多言论自由都没有被尊重, 种种不一而足. 说得那个捶胸顿足, 好想自己多么多么痛心疾首多么爱国,简直就是东林党在世一样.\n\n接下来, 我这位应该已经研究生毕业然后读博士的朋友, 这样评论: \"我看要不了多久中国就要变成北朝鲜了, 让没有出国的人拼命想要出国, 出了国的人, 没有一个回国. 感叹中国如何的被文化阉割, 只有台湾才抱有原始的中国文化\"\n{% endnote %}\n\n这篇文章给我看得简直是一脸懵逼. 具体表情可以参考黑人问号脸. 我实在没办法想象, 一个好歹也是高学历的30岁以上的成熟青年, 到底是抽了什么风, 居然会去随声附和这样不严谨的言论. 后来想想, 这大概就是所谓 信息不对等从而被煽动的愤青嘴脸吧.\n\n我作为一个从来不怎么混facebook和twitter, 一直都是wechat, QQ, 微博, 知乎上面混的人, 我在这里打包票, 我想吐槽的现象, 我想抒发的感情, 几乎完全没有什么障碍的, 全部都能说, 从来没有收到过什么审查和监视. 事实上中国网络监视的对象, 也从来都不是踏踏实实的小屁民. 而我这个同学, 接触的媒体很多都是西方的, 人家说啥就是啥, 缺少思考, 没有求证, 我想知道这样研究生论文到底是怎么过的.\n\n其次, 有关同性恋的议题并不能反映一个国家的发展和开放的程度. 北韩就算开放同性恋结婚了, 仍旧改变不了很多根本性的问题. 台湾开放同性恋结婚了, 大家都说好. 也许吧, 但是国内的团体更加对立, 社会矛盾更加激化, 把同性恋的人群推到了风口浪尖, 除了那些激进的LGBT维权, 很多更普通的LGBT团体事实上处在了一个政治工具的地位. 更何况, 我想, 有关媒体方面的问题, 所指并不是有关禁止真正同性恋接触的问题, 而是, 铺天盖地的*耽美小说*, *耽美动漫*的问题, 这已经不仅仅是同性恋的问题了, 试想一个没有是非观的小学生接触到耽美小说这种文体, 他虽然总觉得哪里不对, 但是说不定会有\"试试看\"这样的想法. 而且, 现在女生们天天以给各个男生组合配CP为乐, 真的没有问题吗? 我觉得, 小众的东西, 还不到可以拿到台面上来的程度. 我们还没有发展到那个程度, 所以应该放缓, 即使我自己也是LGBT的一员, 我是不赞成中国直接把我们推到台面上来的.\n\n而这样的一点, 居然就被人抨击说, 中国多么多么不民主, 如果真的民主, 我觉得LGBT肯定被封禁了才对. 我对于中国大众对这个群体的排斥性, 深有体会.\n\n至于朋友说, 台湾保有中国的原始文化, 我就真的笑了. 他一定是一个毫不关心中国大陆和台湾政治的人. 首先, 台湾已经搞了很多年去中国化了, 前段时间台湾已经把中国的历史, 改称为东亚史, 这是鲜为人知的事件, 2016年5月20日, 蔡英文上台之后, 跪舔美日臭脚, 拒不承认九二共识(不承认自己属于中华民族), 台湾大部分人以身为中国人为耻. 2013年的太阳花运动, 学生攻占立法院, 逼迫当届总统拒签服贸协议, 使得中国想要让利给台湾的协议告吹. 最近因为中国压缩了台湾的国际空间, 更是有台独人士叫嚣要造出原子弹, 美军昨天还是前天批准了台湾的军售, 参议院还是什么通过了美国军舰停靠台湾港口的立法, 并且当天, 台湾国防部就对此立法表示跪迎.\n\n这就是他口中有中国文化的台湾. 无知真是一件很可怕的事情.\n\n因为在以前, 我觉得此人是一个很不错的朋友, 所以我今天也提醒了他, 中国的国际形势十分危急, 内部不允许出现过多言论, 使用一切手段维稳是可以理解的. 然而人家根本不知道中国周围在发生什么...中印在边境有争端, 中国东海南海一直出事情, 最近越南还要越界, 美国不停地在台海制造事端压制中国. 我想作为一个爱国人士, 这些不知道, 就真的勿谈国事吧.\n\n7月1日习主席的在香港的讲话, 我觉得很多话大概是说出了他的内心 \"现在的形势非常严峻, 我们没有那个时间也没有那个底气内斗\"\n\n所以今天我作为一个小粉红怒了. 我气这些无知容易被煽动的\"爱国青年\", 也气我自己曾经也是他们中的一员, 这世界的水很深, 列强们很狡猾, 那些卖给我们毒品, 用枪炮抢劫了我们的人, 今天对我们指指点点, 说我们没人权, 说我们低下不懂得自由是多么可贵. 我只能咬咬牙, 每天更努力的学习和工作, 总有一天, 大家会知道中国这个civilization的生命力在什么地方. \n","source":"_posts/d0001-20170701.md","raw":"---\n  title: 香港回归20周年, 我作为一个小粉红要骂人!\n  categories: Diary\n  tags:\n    - 日记\n    - 台独\n    - 港独\n    - 文化\n---\n\n事情要从朋友的一个wechat朋友圈文章说起. 大概朋友转的一个朋友圈是这样的:\n\n{% note info %}\n首先是一个大大的标题党 **就算被封号也不能粉饰太平**, 接下来是长篇的论述. 大概是说, 国内又出现了某些法令, 禁止了很多煽动性的文章, 还有一些淫乱, 同性恋的媒体不可以发表. 首先同性恋其实跟淫乱不能放在一起, 然后很多言论自由都没有被尊重, 种种不一而足. 说得那个捶胸顿足, 好想自己多么多么痛心疾首多么爱国,简直就是东林党在世一样.\n\n接下来, 我这位应该已经研究生毕业然后读博士的朋友, 这样评论: \"我看要不了多久中国就要变成北朝鲜了, 让没有出国的人拼命想要出国, 出了国的人, 没有一个回国. 感叹中国如何的被文化阉割, 只有台湾才抱有原始的中国文化\"\n{% endnote %}\n\n这篇文章给我看得简直是一脸懵逼. 具体表情可以参考黑人问号脸. 我实在没办法想象, 一个好歹也是高学历的30岁以上的成熟青年, 到底是抽了什么风, 居然会去随声附和这样不严谨的言论. 后来想想, 这大概就是所谓 信息不对等从而被煽动的愤青嘴脸吧.\n\n我作为一个从来不怎么混facebook和twitter, 一直都是wechat, QQ, 微博, 知乎上面混的人, 我在这里打包票, 我想吐槽的现象, 我想抒发的感情, 几乎完全没有什么障碍的, 全部都能说, 从来没有收到过什么审查和监视. 事实上中国网络监视的对象, 也从来都不是踏踏实实的小屁民. 而我这个同学, 接触的媒体很多都是西方的, 人家说啥就是啥, 缺少思考, 没有求证, 我想知道这样研究生论文到底是怎么过的.\n\n其次, 有关同性恋的议题并不能反映一个国家的发展和开放的程度. 北韩就算开放同性恋结婚了, 仍旧改变不了很多根本性的问题. 台湾开放同性恋结婚了, 大家都说好. 也许吧, 但是国内的团体更加对立, 社会矛盾更加激化, 把同性恋的人群推到了风口浪尖, 除了那些激进的LGBT维权, 很多更普通的LGBT团体事实上处在了一个政治工具的地位. 更何况, 我想, 有关媒体方面的问题, 所指并不是有关禁止真正同性恋接触的问题, 而是, 铺天盖地的*耽美小说*, *耽美动漫*的问题, 这已经不仅仅是同性恋的问题了, 试想一个没有是非观的小学生接触到耽美小说这种文体, 他虽然总觉得哪里不对, 但是说不定会有\"试试看\"这样的想法. 而且, 现在女生们天天以给各个男生组合配CP为乐, 真的没有问题吗? 我觉得, 小众的东西, 还不到可以拿到台面上来的程度. 我们还没有发展到那个程度, 所以应该放缓, 即使我自己也是LGBT的一员, 我是不赞成中国直接把我们推到台面上来的.\n\n而这样的一点, 居然就被人抨击说, 中国多么多么不民主, 如果真的民主, 我觉得LGBT肯定被封禁了才对. 我对于中国大众对这个群体的排斥性, 深有体会.\n\n至于朋友说, 台湾保有中国的原始文化, 我就真的笑了. 他一定是一个毫不关心中国大陆和台湾政治的人. 首先, 台湾已经搞了很多年去中国化了, 前段时间台湾已经把中国的历史, 改称为东亚史, 这是鲜为人知的事件, 2016年5月20日, 蔡英文上台之后, 跪舔美日臭脚, 拒不承认九二共识(不承认自己属于中华民族), 台湾大部分人以身为中国人为耻. 2013年的太阳花运动, 学生攻占立法院, 逼迫当届总统拒签服贸协议, 使得中国想要让利给台湾的协议告吹. 最近因为中国压缩了台湾的国际空间, 更是有台独人士叫嚣要造出原子弹, 美军昨天还是前天批准了台湾的军售, 参议院还是什么通过了美国军舰停靠台湾港口的立法, 并且当天, 台湾国防部就对此立法表示跪迎.\n\n这就是他口中有中国文化的台湾. 无知真是一件很可怕的事情.\n\n因为在以前, 我觉得此人是一个很不错的朋友, 所以我今天也提醒了他, 中国的国际形势十分危急, 内部不允许出现过多言论, 使用一切手段维稳是可以理解的. 然而人家根本不知道中国周围在发生什么...中印在边境有争端, 中国东海南海一直出事情, 最近越南还要越界, 美国不停地在台海制造事端压制中国. 我想作为一个爱国人士, 这些不知道, 就真的勿谈国事吧.\n\n7月1日习主席的在香港的讲话, 我觉得很多话大概是说出了他的内心 \"现在的形势非常严峻, 我们没有那个时间也没有那个底气内斗\"\n\n所以今天我作为一个小粉红怒了. 我气这些无知容易被煽动的\"爱国青年\", 也气我自己曾经也是他们中的一员, 这世界的水很深, 列强们很狡猾, 那些卖给我们毒品, 用枪炮抢劫了我们的人, 今天对我们指指点点, 说我们没人权, 说我们低下不懂得自由是多么可贵. 我只能咬咬牙, 每天更努力的学习和工作, 总有一天, 大家会知道中国这个civilization的生命力在什么地方. \n","slug":"d0001-20170701","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0ck0016c5ccb1phv5qs","content":"<p>事情要从朋友的一个wechat朋友圈文章说起. 大概朋友转的一个朋友圈是这样的:</p>\n<div class=\"note info\"><p>首先是一个大大的标题党 <strong>就算被封号也不能粉饰太平</strong>, 接下来是长篇的论述. 大概是说, 国内又出现了某些法令, 禁止了很多煽动性的文章, 还有一些淫乱, 同性恋的媒体不可以发表. 首先同性恋其实跟淫乱不能放在一起, 然后很多言论自由都没有被尊重, 种种不一而足. 说得那个捶胸顿足, 好想自己多么多么痛心疾首多么爱国,简直就是东林党在世一样.</p>\n<p>接下来, 我这位应该已经研究生毕业然后读博士的朋友, 这样评论: “我看要不了多久中国就要变成北朝鲜了, 让没有出国的人拼命想要出国, 出了国的人, 没有一个回国. 感叹中国如何的被文化阉割, 只有台湾才抱有原始的中国文化”</p>\n</div>\n<p>这篇文章给我看得简直是一脸懵逼. 具体表情可以参考黑人问号脸. 我实在没办法想象, 一个好歹也是高学历的30岁以上的成熟青年, 到底是抽了什么风, 居然会去随声附和这样不严谨的言论. 后来想想, 这大概就是所谓 信息不对等从而被煽动的愤青嘴脸吧.</p>\n<p>我作为一个从来不怎么混facebook和twitter, 一直都是wechat, QQ, 微博, 知乎上面混的人, 我在这里打包票, 我想吐槽的现象, 我想抒发的感情, 几乎完全没有什么障碍的, 全部都能说, 从来没有收到过什么审查和监视. 事实上中国网络监视的对象, 也从来都不是踏踏实实的小屁民. 而我这个同学, 接触的媒体很多都是西方的, 人家说啥就是啥, 缺少思考, 没有求证, 我想知道这样研究生论文到底是怎么过的.</p>\n<p>其次, 有关同性恋的议题并不能反映一个国家的发展和开放的程度. 北韩就算开放同性恋结婚了, 仍旧改变不了很多根本性的问题. 台湾开放同性恋结婚了, 大家都说好. 也许吧, 但是国内的团体更加对立, 社会矛盾更加激化, 把同性恋的人群推到了风口浪尖, 除了那些激进的LGBT维权, 很多更普通的LGBT团体事实上处在了一个政治工具的地位. 更何况, 我想, 有关媒体方面的问题, 所指并不是有关禁止真正同性恋接触的问题, 而是, 铺天盖地的<em>耽美小说</em>, <em>耽美动漫</em>的问题, 这已经不仅仅是同性恋的问题了, 试想一个没有是非观的小学生接触到耽美小说这种文体, 他虽然总觉得哪里不对, 但是说不定会有”试试看”这样的想法. 而且, 现在女生们天天以给各个男生组合配CP为乐, 真的没有问题吗? 我觉得, 小众的东西, 还不到可以拿到台面上来的程度. 我们还没有发展到那个程度, 所以应该放缓, 即使我自己也是LGBT的一员, 我是不赞成中国直接把我们推到台面上来的.</p>\n<p>而这样的一点, 居然就被人抨击说, 中国多么多么不民主, 如果真的民主, 我觉得LGBT肯定被封禁了才对. 我对于中国大众对这个群体的排斥性, 深有体会.</p>\n<p>至于朋友说, 台湾保有中国的原始文化, 我就真的笑了. 他一定是一个毫不关心中国大陆和台湾政治的人. 首先, 台湾已经搞了很多年去中国化了, 前段时间台湾已经把中国的历史, 改称为东亚史, 这是鲜为人知的事件, 2016年5月20日, 蔡英文上台之后, 跪舔美日臭脚, 拒不承认九二共识(不承认自己属于中华民族), 台湾大部分人以身为中国人为耻. 2013年的太阳花运动, 学生攻占立法院, 逼迫当届总统拒签服贸协议, 使得中国想要让利给台湾的协议告吹. 最近因为中国压缩了台湾的国际空间, 更是有台独人士叫嚣要造出原子弹, 美军昨天还是前天批准了台湾的军售, 参议院还是什么通过了美国军舰停靠台湾港口的立法, 并且当天, 台湾国防部就对此立法表示跪迎.</p>\n<p>这就是他口中有中国文化的台湾. 无知真是一件很可怕的事情.</p>\n<p>因为在以前, 我觉得此人是一个很不错的朋友, 所以我今天也提醒了他, 中国的国际形势十分危急, 内部不允许出现过多言论, 使用一切手段维稳是可以理解的. 然而人家根本不知道中国周围在发生什么…中印在边境有争端, 中国东海南海一直出事情, 最近越南还要越界, 美国不停地在台海制造事端压制中国. 我想作为一个爱国人士, 这些不知道, 就真的勿谈国事吧.</p>\n<p>7月1日习主席的在香港的讲话, 我觉得很多话大概是说出了他的内心 “现在的形势非常严峻, 我们没有那个时间也没有那个底气内斗”</p>\n<p>所以今天我作为一个小粉红怒了. 我气这些无知容易被煽动的”爱国青年”, 也气我自己曾经也是他们中的一员, 这世界的水很深, 列强们很狡猾, 那些卖给我们毒品, 用枪炮抢劫了我们的人, 今天对我们指指点点, 说我们没人权, 说我们低下不懂得自由是多么可贵. 我只能咬咬牙, 每天更努力的学习和工作, 总有一天, 大家会知道中国这个civilization的生命力在什么地方. </p>\n","site":{"data":{}},"excerpt":"","more":"<p>事情要从朋友的一个wechat朋友圈文章说起. 大概朋友转的一个朋友圈是这样的:</p>\n<div class=\"note info\"><p>首先是一个大大的标题党 <strong>就算被封号也不能粉饰太平</strong>, 接下来是长篇的论述. 大概是说, 国内又出现了某些法令, 禁止了很多煽动性的文章, 还有一些淫乱, 同性恋的媒体不可以发表. 首先同性恋其实跟淫乱不能放在一起, 然后很多言论自由都没有被尊重, 种种不一而足. 说得那个捶胸顿足, 好想自己多么多么痛心疾首多么爱国,简直就是东林党在世一样.</p>\n<p>接下来, 我这位应该已经研究生毕业然后读博士的朋友, 这样评论: “我看要不了多久中国就要变成北朝鲜了, 让没有出国的人拼命想要出国, 出了国的人, 没有一个回国. 感叹中国如何的被文化阉割, 只有台湾才抱有原始的中国文化”</p>\n</div>\n<p>这篇文章给我看得简直是一脸懵逼. 具体表情可以参考黑人问号脸. 我实在没办法想象, 一个好歹也是高学历的30岁以上的成熟青年, 到底是抽了什么风, 居然会去随声附和这样不严谨的言论. 后来想想, 这大概就是所谓 信息不对等从而被煽动的愤青嘴脸吧.</p>\n<p>我作为一个从来不怎么混facebook和twitter, 一直都是wechat, QQ, 微博, 知乎上面混的人, 我在这里打包票, 我想吐槽的现象, 我想抒发的感情, 几乎完全没有什么障碍的, 全部都能说, 从来没有收到过什么审查和监视. 事实上中国网络监视的对象, 也从来都不是踏踏实实的小屁民. 而我这个同学, 接触的媒体很多都是西方的, 人家说啥就是啥, 缺少思考, 没有求证, 我想知道这样研究生论文到底是怎么过的.</p>\n<p>其次, 有关同性恋的议题并不能反映一个国家的发展和开放的程度. 北韩就算开放同性恋结婚了, 仍旧改变不了很多根本性的问题. 台湾开放同性恋结婚了, 大家都说好. 也许吧, 但是国内的团体更加对立, 社会矛盾更加激化, 把同性恋的人群推到了风口浪尖, 除了那些激进的LGBT维权, 很多更普通的LGBT团体事实上处在了一个政治工具的地位. 更何况, 我想, 有关媒体方面的问题, 所指并不是有关禁止真正同性恋接触的问题, 而是, 铺天盖地的<em>耽美小说</em>, <em>耽美动漫</em>的问题, 这已经不仅仅是同性恋的问题了, 试想一个没有是非观的小学生接触到耽美小说这种文体, 他虽然总觉得哪里不对, 但是说不定会有”试试看”这样的想法. 而且, 现在女生们天天以给各个男生组合配CP为乐, 真的没有问题吗? 我觉得, 小众的东西, 还不到可以拿到台面上来的程度. 我们还没有发展到那个程度, 所以应该放缓, 即使我自己也是LGBT的一员, 我是不赞成中国直接把我们推到台面上来的.</p>\n<p>而这样的一点, 居然就被人抨击说, 中国多么多么不民主, 如果真的民主, 我觉得LGBT肯定被封禁了才对. 我对于中国大众对这个群体的排斥性, 深有体会.</p>\n<p>至于朋友说, 台湾保有中国的原始文化, 我就真的笑了. 他一定是一个毫不关心中国大陆和台湾政治的人. 首先, 台湾已经搞了很多年去中国化了, 前段时间台湾已经把中国的历史, 改称为东亚史, 这是鲜为人知的事件, 2016年5月20日, 蔡英文上台之后, 跪舔美日臭脚, 拒不承认九二共识(不承认自己属于中华民族), 台湾大部分人以身为中国人为耻. 2013年的太阳花运动, 学生攻占立法院, 逼迫当届总统拒签服贸协议, 使得中国想要让利给台湾的协议告吹. 最近因为中国压缩了台湾的国际空间, 更是有台独人士叫嚣要造出原子弹, 美军昨天还是前天批准了台湾的军售, 参议院还是什么通过了美国军舰停靠台湾港口的立法, 并且当天, 台湾国防部就对此立法表示跪迎.</p>\n<p>这就是他口中有中国文化的台湾. 无知真是一件很可怕的事情.</p>\n<p>因为在以前, 我觉得此人是一个很不错的朋友, 所以我今天也提醒了他, 中国的国际形势十分危急, 内部不允许出现过多言论, 使用一切手段维稳是可以理解的. 然而人家根本不知道中国周围在发生什么…中印在边境有争端, 中国东海南海一直出事情, 最近越南还要越界, 美国不停地在台海制造事端压制中国. 我想作为一个爱国人士, 这些不知道, 就真的勿谈国事吧.</p>\n<p>7月1日习主席的在香港的讲话, 我觉得很多话大概是说出了他的内心 “现在的形势非常严峻, 我们没有那个时间也没有那个底气内斗”</p>\n<p>所以今天我作为一个小粉红怒了. 我气这些无知容易被煽动的”爱国青年”, 也气我自己曾经也是他们中的一员, 这世界的水很深, 列强们很狡猾, 那些卖给我们毒品, 用枪炮抢劫了我们的人, 今天对我们指指点点, 说我们没人权, 说我们低下不懂得自由是多么可贵. 我只能咬咬牙, 每天更努力的学习和工作, 总有一天, 大家会知道中国这个civilization的生命力在什么地方. </p>\n"},{"title":"作为LGBT的一员, 我不想被这些别有用心的人代表!","_content":"\n# 广电的原文:\n\n{% note info %}\n六. 渲染淫秽色情和庸俗低级趣味\n  1. 具体展现买赢嫖娼强奸等丑恶行为\n  2. 表现和展示非正常性关系, 性行为, 如乱伦, **同性恋** , 性变态, 性侵犯, 性虐待及暴力等\n  3. 展示和宣扬不健康的婚恋观和婚恋状态, 如婚外恋, 一夜情, 性自由等\n  4. 较多给人感官刺激镜头, 及类似性行为...etc\n  ...\n{% endnote %}\n\n# 正文:\n\n最近这个广电的条例经常被人利用, 用红字画起来, 说是把同性恋什么的内容放在这里是不恰当的. 是反人类的, 是不尊重人权的. 然后煽动LGBT和一些有正义感的人, 去反对政府, 反对广电, 把我们的制度说得一文不值, 然后说港台, 说美国是多么美好, 多么尊重人权.\n\n在这里, 我严重且认真的告诉各位, 你们标榜自由民主平等的美国那里, 对于LGBT的支持甚至不如欧洲, 在某些州, 安全上比不上中国. 如果你有幸能混上上层社会或者中游社会, 那么也许还好, 否则你将会体验到什么叫人间地狱. 我这不是危言耸听, 是一位美国姐妹的亲身经历. 在祖国, 或者你会承受白眼但是最大的问题来源是家庭, 根本不是社会.社会在这里是非常模糊的, 很多有一技之长的兄弟姐妹, 生活是很有保障的.\n\n然而最近一直被一些有政治倾向的人\"代表\", 这让我们感到非常困扰, 因为本身我也算是LGBT里面一员, 我确信圈子内和我一样, 对这一条并没有什么特别的感触或者愤慨, 原因有以下几点:\n\n1. 首先这并不是禁止, 而是禁止宣扬. 我本身是同意的, 同性恋毕竟是少数, 社会上可以科普, 但是不适合大肆宣扬耽美或者百合情结, 对年轻人进行误导.\n2. 排除同性恋之外, 我们也可以看到其他的条目句句在理, 我觉得不应该因为这百分之十, 否定其他的百分之九十, 这是完全错误的. 请注意中国是没有影片分级制度的, 所以任何事情都要考虑到青少年\n3. 我想很多愤慨的直男们, 根本不清楚, 现在耽美小说以及女性向动漫还有影视里面, 已经慢慢渗透到了中小学. \"各位基佬朋友\" \"gay里gay气\" \"你长得真受\", \"好帅气一定是攻\", 这些言语, 已经不知不觉散布到了我们难以想象的低龄人群, 因为没有正确的引导, 被莫名其妙的掰弯的现象已经数见不鲜. 所以, 我并不觉得这一条有什么不对.\n\n反过来看那些煽动闹事的人, 除了制造LGBT人群和正常社会人群的对立, 并没有什么真的功劳.\n\n我想说, 真正的解放LGBT人权, 靠的只能是社会的发展, 只能是人类的进步, 只能是文化的交流, 只能是科学教育的普及! 而不是随随便便的泛政治化!\n\n我很认真的说: 我不希望被代表, 我对中国有信心, 我对LGBT人群的未来充满希望. 我们从来就不是反政府反社会人群, 我们没有任何区别, 请那些带有特殊目的的人, 不要把我们当做工具, 那才是真正的不尊重!\n\n以上. \n","source":"_posts/d0002-20170703.md","raw":"---\n  title: 作为LGBT的一员, 我不想被这些别有用心的人代表!\n  categories: Diary\n  tags:\n    - 日记\n    - LGBT\n    - 同性恋\n    - 广电总局\n---\n\n# 广电的原文:\n\n{% note info %}\n六. 渲染淫秽色情和庸俗低级趣味\n  1. 具体展现买赢嫖娼强奸等丑恶行为\n  2. 表现和展示非正常性关系, 性行为, 如乱伦, **同性恋** , 性变态, 性侵犯, 性虐待及暴力等\n  3. 展示和宣扬不健康的婚恋观和婚恋状态, 如婚外恋, 一夜情, 性自由等\n  4. 较多给人感官刺激镜头, 及类似性行为...etc\n  ...\n{% endnote %}\n\n# 正文:\n\n最近这个广电的条例经常被人利用, 用红字画起来, 说是把同性恋什么的内容放在这里是不恰当的. 是反人类的, 是不尊重人权的. 然后煽动LGBT和一些有正义感的人, 去反对政府, 反对广电, 把我们的制度说得一文不值, 然后说港台, 说美国是多么美好, 多么尊重人权.\n\n在这里, 我严重且认真的告诉各位, 你们标榜自由民主平等的美国那里, 对于LGBT的支持甚至不如欧洲, 在某些州, 安全上比不上中国. 如果你有幸能混上上层社会或者中游社会, 那么也许还好, 否则你将会体验到什么叫人间地狱. 我这不是危言耸听, 是一位美国姐妹的亲身经历. 在祖国, 或者你会承受白眼但是最大的问题来源是家庭, 根本不是社会.社会在这里是非常模糊的, 很多有一技之长的兄弟姐妹, 生活是很有保障的.\n\n然而最近一直被一些有政治倾向的人\"代表\", 这让我们感到非常困扰, 因为本身我也算是LGBT里面一员, 我确信圈子内和我一样, 对这一条并没有什么特别的感触或者愤慨, 原因有以下几点:\n\n1. 首先这并不是禁止, 而是禁止宣扬. 我本身是同意的, 同性恋毕竟是少数, 社会上可以科普, 但是不适合大肆宣扬耽美或者百合情结, 对年轻人进行误导.\n2. 排除同性恋之外, 我们也可以看到其他的条目句句在理, 我觉得不应该因为这百分之十, 否定其他的百分之九十, 这是完全错误的. 请注意中国是没有影片分级制度的, 所以任何事情都要考虑到青少年\n3. 我想很多愤慨的直男们, 根本不清楚, 现在耽美小说以及女性向动漫还有影视里面, 已经慢慢渗透到了中小学. \"各位基佬朋友\" \"gay里gay气\" \"你长得真受\", \"好帅气一定是攻\", 这些言语, 已经不知不觉散布到了我们难以想象的低龄人群, 因为没有正确的引导, 被莫名其妙的掰弯的现象已经数见不鲜. 所以, 我并不觉得这一条有什么不对.\n\n反过来看那些煽动闹事的人, 除了制造LGBT人群和正常社会人群的对立, 并没有什么真的功劳.\n\n我想说, 真正的解放LGBT人权, 靠的只能是社会的发展, 只能是人类的进步, 只能是文化的交流, 只能是科学教育的普及! 而不是随随便便的泛政治化!\n\n我很认真的说: 我不希望被代表, 我对中国有信心, 我对LGBT人群的未来充满希望. 我们从来就不是反政府反社会人群, 我们没有任何区别, 请那些带有特殊目的的人, 不要把我们当做工具, 那才是真正的不尊重!\n\n以上. \n","slug":"d0002-20170703","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0cy0018c5ccx0ml7mps","content":"<h1 id=\"广电的原文\"><a href=\"#广电的原文\" class=\"headerlink\" title=\"广电的原文:\"></a>广电的原文:</h1><div class=\"note info\"><p>六. 渲染淫秽色情和庸俗低级趣味</p>\n<ol>\n<li>具体展现买赢嫖娼强奸等丑恶行为</li>\n<li>表现和展示非正常性关系, 性行为, 如乱伦, <strong>同性恋</strong> , 性变态, 性侵犯, 性虐待及暴力等</li>\n<li>展示和宣扬不健康的婚恋观和婚恋状态, 如婚外恋, 一夜情, 性自由等</li>\n<li>较多给人感官刺激镜头, 及类似性行为…etc<br>…</li>\n</ol>\n</div>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文:\"></a>正文:</h1><p>最近这个广电的条例经常被人利用, 用红字画起来, 说是把同性恋什么的内容放在这里是不恰当的. 是反人类的, 是不尊重人权的. 然后煽动LGBT和一些有正义感的人, 去反对政府, 反对广电, 把我们的制度说得一文不值, 然后说港台, 说美国是多么美好, 多么尊重人权.</p>\n<p>在这里, 我严重且认真的告诉各位, 你们标榜自由民主平等的美国那里, 对于LGBT的支持甚至不如欧洲, 在某些州, 安全上比不上中国. 如果你有幸能混上上层社会或者中游社会, 那么也许还好, 否则你将会体验到什么叫人间地狱. 我这不是危言耸听, 是一位美国姐妹的亲身经历. 在祖国, 或者你会承受白眼但是最大的问题来源是家庭, 根本不是社会.社会在这里是非常模糊的, 很多有一技之长的兄弟姐妹, 生活是很有保障的.</p>\n<p>然而最近一直被一些有政治倾向的人”代表”, 这让我们感到非常困扰, 因为本身我也算是LGBT里面一员, 我确信圈子内和我一样, 对这一条并没有什么特别的感触或者愤慨, 原因有以下几点:</p>\n<ol>\n<li>首先这并不是禁止, 而是禁止宣扬. 我本身是同意的, 同性恋毕竟是少数, 社会上可以科普, 但是不适合大肆宣扬耽美或者百合情结, 对年轻人进行误导.</li>\n<li>排除同性恋之外, 我们也可以看到其他的条目句句在理, 我觉得不应该因为这百分之十, 否定其他的百分之九十, 这是完全错误的. 请注意中国是没有影片分级制度的, 所以任何事情都要考虑到青少年</li>\n<li>我想很多愤慨的直男们, 根本不清楚, 现在耽美小说以及女性向动漫还有影视里面, 已经慢慢渗透到了中小学. “各位基佬朋友” “gay里gay气” “你长得真受”, “好帅气一定是攻”, 这些言语, 已经不知不觉散布到了我们难以想象的低龄人群, 因为没有正确的引导, 被莫名其妙的掰弯的现象已经数见不鲜. 所以, 我并不觉得这一条有什么不对.</li>\n</ol>\n<p>反过来看那些煽动闹事的人, 除了制造LGBT人群和正常社会人群的对立, 并没有什么真的功劳.</p>\n<p>我想说, 真正的解放LGBT人权, 靠的只能是社会的发展, 只能是人类的进步, 只能是文化的交流, 只能是科学教育的普及! 而不是随随便便的泛政治化!</p>\n<p>我很认真的说: 我不希望被代表, 我对中国有信心, 我对LGBT人群的未来充满希望. 我们从来就不是反政府反社会人群, 我们没有任何区别, 请那些带有特殊目的的人, 不要把我们当做工具, 那才是真正的不尊重!</p>\n<p>以上. </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"广电的原文\"><a href=\"#广电的原文\" class=\"headerlink\" title=\"广电的原文:\"></a>广电的原文:</h1><div class=\"note info\"><p>六. 渲染淫秽色情和庸俗低级趣味</p>\n<ol>\n<li>具体展现买赢嫖娼强奸等丑恶行为</li>\n<li>表现和展示非正常性关系, 性行为, 如乱伦, <strong>同性恋</strong> , 性变态, 性侵犯, 性虐待及暴力等</li>\n<li>展示和宣扬不健康的婚恋观和婚恋状态, 如婚外恋, 一夜情, 性自由等</li>\n<li>较多给人感官刺激镜头, 及类似性行为…etc<br>…</li>\n</ol>\n</div>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文:\"></a>正文:</h1><p>最近这个广电的条例经常被人利用, 用红字画起来, 说是把同性恋什么的内容放在这里是不恰当的. 是反人类的, 是不尊重人权的. 然后煽动LGBT和一些有正义感的人, 去反对政府, 反对广电, 把我们的制度说得一文不值, 然后说港台, 说美国是多么美好, 多么尊重人权.</p>\n<p>在这里, 我严重且认真的告诉各位, 你们标榜自由民主平等的美国那里, 对于LGBT的支持甚至不如欧洲, 在某些州, 安全上比不上中国. 如果你有幸能混上上层社会或者中游社会, 那么也许还好, 否则你将会体验到什么叫人间地狱. 我这不是危言耸听, 是一位美国姐妹的亲身经历. 在祖国, 或者你会承受白眼但是最大的问题来源是家庭, 根本不是社会.社会在这里是非常模糊的, 很多有一技之长的兄弟姐妹, 生活是很有保障的.</p>\n<p>然而最近一直被一些有政治倾向的人”代表”, 这让我们感到非常困扰, 因为本身我也算是LGBT里面一员, 我确信圈子内和我一样, 对这一条并没有什么特别的感触或者愤慨, 原因有以下几点:</p>\n<ol>\n<li>首先这并不是禁止, 而是禁止宣扬. 我本身是同意的, 同性恋毕竟是少数, 社会上可以科普, 但是不适合大肆宣扬耽美或者百合情结, 对年轻人进行误导.</li>\n<li>排除同性恋之外, 我们也可以看到其他的条目句句在理, 我觉得不应该因为这百分之十, 否定其他的百分之九十, 这是完全错误的. 请注意中国是没有影片分级制度的, 所以任何事情都要考虑到青少年</li>\n<li>我想很多愤慨的直男们, 根本不清楚, 现在耽美小说以及女性向动漫还有影视里面, 已经慢慢渗透到了中小学. “各位基佬朋友” “gay里gay气” “你长得真受”, “好帅气一定是攻”, 这些言语, 已经不知不觉散布到了我们难以想象的低龄人群, 因为没有正确的引导, 被莫名其妙的掰弯的现象已经数见不鲜. 所以, 我并不觉得这一条有什么不对.</li>\n</ol>\n<p>反过来看那些煽动闹事的人, 除了制造LGBT人群和正常社会人群的对立, 并没有什么真的功劳.</p>\n<p>我想说, 真正的解放LGBT人权, 靠的只能是社会的发展, 只能是人类的进步, 只能是文化的交流, 只能是科学教育的普及! 而不是随随便便的泛政治化!</p>\n<p>我很认真的说: 我不希望被代表, 我对中国有信心, 我对LGBT人群的未来充满希望. 我们从来就不是反政府反社会人群, 我们没有任何区别, 请那些带有特殊目的的人, 不要把我们当做工具, 那才是真正的不尊重!</p>\n<p>以上. </p>\n"},{"title":"Your title","_content":"","source":"_posts/model.md","raw":"---\n  title: Your title \n  categories: Testing\n  tags: \n    - Test\n    - another tag\n---\n","slug":"model","published":1,"date":"2018-06-22T15:39:09.146Z","updated":"2018-06-22T15:39:09.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir8d0d1001cc5cc5p2cotre","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cjir8d0av0007c5cce8ydb5jo","category_id":"cjir8d0ag0004c5cc0igkpuqm","_id":"cjir8d0b5000cc5cc3mw2ylh1"},{"post_id":"cjir8d09k0000c5ccii5klppg","category_id":"cjir8d0ag0004c5cc0igkpuqm","_id":"cjir8d0bh000gc5ccjb97engt"},{"post_id":"cjir8d0a70002c5cc3l0syg1l","category_id":"cjir8d0b00009c5cc1q9jbca2","_id":"cjir8d0bq000jc5ccthv3t8ka"},{"post_id":"cjir8d0b6000dc5cctxg6oksz","category_id":"cjir8d0ag0004c5cc0igkpuqm","_id":"cjir8d0bu000nc5ccnwzaujsf"},{"post_id":"cjir8d0bi000hc5cc1gok0r3u","category_id":"cjir8d0ag0004c5cc0igkpuqm","_id":"cjir8d0bz000qc5ccnifwr7fa"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","category_id":"cjir8d0b00009c5cc1q9jbca2","_id":"cjir8d0c7000vc5ccthja30q6"},{"post_id":"cjir8d0ay0008c5ccc6twwphd","category_id":"cjir8d0br000kc5cc9thgn9ii","_id":"cjir8d0ca000yc5cc63hvqwgn"},{"post_id":"cjir8d0b1000bc5cc9md7vv89","category_id":"cjir8d0c0000sc5cckt836szq","_id":"cjir8d0ci0013c5cc5vyuvhpn"},{"post_id":"cjir8d0bn000ic5ccx4eso8gi","category_id":"cjir8d0c0000sc5cckt836szq","_id":"cjir8d0d0001ac5cc5yrowveg"},{"post_id":"cjir8d0bt000mc5ccshyugbq8","category_id":"cjir8d0cj0015c5ccqe1g139h","_id":"cjir8d0db001gc5ccqbbd0uh4"},{"post_id":"cjir8d0bv000pc5cc8geyvokz","category_id":"cjir8d0cj0015c5ccqe1g139h","_id":"cjir8d0de001jc5ccckzcyaon"},{"post_id":"cjir8d0c1000uc5cc93gdhivk","category_id":"cjir8d0db001hc5cc5kn22344","_id":"cjir8d0df001mc5cc6yxm7a0b"},{"post_id":"cjir8d0c8000xc5cczrsxurr6","category_id":"cjir8d0de001kc5ccym5qp0dr","_id":"cjir8d0dg001pc5cckfg4lzvk"},{"post_id":"cjir8d0cc0011c5ccbkp8zkok","category_id":"cjir8d0df001nc5cc2bvstlvr","_id":"cjir8d0dj001uc5ccidg221os"},{"post_id":"cjir8d0cg0012c5ccvg5rnslk","category_id":"cjir8d0dh001qc5ccmhpushly","_id":"cjir8d0dn001zc5cc1l4aqu25"},{"post_id":"cjir8d0ck0016c5ccb1phv5qs","category_id":"cjir8d0dk001wc5ccsbsvnvu1","_id":"cjir8d0dq0025c5ccnjdvrl29"},{"post_id":"cjir8d0cy0018c5ccx0ml7mps","category_id":"cjir8d0dk001wc5ccsbsvnvu1","_id":"cjir8d0ds0029c5cclylr4fud"},{"post_id":"cjir8d0d1001cc5cc5p2cotre","category_id":"cjir8d0dq0026c5ccof6kbe4y","_id":"cjir8d0dt002dc5ccbps8v7i2"}],"PostTag":[{"post_id":"cjir8d09k0000c5ccii5klppg","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0bv000oc5cchcut2m6a"},{"post_id":"cjir8d09k0000c5ccii5klppg","tag_id":"cjir8d0b0000ac5ccs5xltyxg","_id":"cjir8d0bz000rc5ccuj8ej1ho"},{"post_id":"cjir8d09k0000c5ccii5klppg","tag_id":"cjir8d0bf000fc5cc0sv5k9wr","_id":"cjir8d0c7000wc5cct9km3nbc"},{"post_id":"cjir8d0a70002c5cc3l0syg1l","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0cx0017c5ccrg8cbzug"},{"post_id":"cjir8d0a70002c5cc3l0syg1l","tag_id":"cjir8d0b0000ac5ccs5xltyxg","_id":"cjir8d0d00019c5ccvz50k449"},{"post_id":"cjir8d0a70002c5cc3l0syg1l","tag_id":"cjir8d0bf000fc5cc0sv5k9wr","_id":"cjir8d0d8001ec5cc2fs085zs"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0dh001rc5cc8i1twui7"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","tag_id":"cjir8d0b0000ac5ccs5xltyxg","_id":"cjir8d0di001sc5ccwdibrdx7"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","tag_id":"cjir8d0bf000fc5cc0sv5k9wr","_id":"cjir8d0dk001vc5cc80dor8no"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","tag_id":"cjir8d0de001ic5ccxl83j5fg","_id":"cjir8d0dk001xc5cc9bavrurw"},{"post_id":"cjir8d0as0006c5cc9tb7a1nv","tag_id":"cjir8d0df001lc5ccalocxgd4","_id":"cjir8d0dn0020c5ccpa2x1i8y"},{"post_id":"cjir8d0av0007c5cce8ydb5jo","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0dq0022c5cccnlf79vo"},{"post_id":"cjir8d0av0007c5cce8ydb5jo","tag_id":"cjir8d0b0000ac5ccs5xltyxg","_id":"cjir8d0dq0024c5cctvc365s5"},{"post_id":"cjir8d0av0007c5cce8ydb5jo","tag_id":"cjir8d0bf000fc5cc0sv5k9wr","_id":"cjir8d0dr0027c5ccteeykh29"},{"post_id":"cjir8d0ay0008c5ccc6twwphd","tag_id":"cjir8d0dl001yc5ccngi5rjlb","_id":"cjir8d0ds002ac5ccnkzj1cl8"},{"post_id":"cjir8d0ay0008c5ccc6twwphd","tag_id":"cjir8d0dq0023c5cc6kbwow1m","_id":"cjir8d0ds002bc5cc51mzy7ta"},{"post_id":"cjir8d0b1000bc5cc9md7vv89","tag_id":"cjir8d0dr0028c5cc2l5qyao5","_id":"cjir8d0du002fc5ccx78s8lqb"},{"post_id":"cjir8d0b1000bc5cc9md7vv89","tag_id":"cjir8d0ds002cc5cc0fpvpbub","_id":"cjir8d0du002gc5cc4bijksqd"},{"post_id":"cjir8d0b6000dc5cctxg6oksz","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0dv002ic5ccwxwsiuza"},{"post_id":"cjir8d0b6000dc5cctxg6oksz","tag_id":"cjir8d0b0000ac5ccs5xltyxg","_id":"cjir8d0dx002jc5cc300qtsi5"},{"post_id":"cjir8d0b6000dc5cctxg6oksz","tag_id":"cjir8d0bf000fc5cc0sv5k9wr","_id":"cjir8d0dy002lc5ccuepbjj4g"},{"post_id":"cjir8d0bi000hc5cc1gok0r3u","tag_id":"cjir8d0du002hc5cc75f5cd59","_id":"cjir8d0e1002nc5cc8j92qcax"},{"post_id":"cjir8d0bi000hc5cc1gok0r3u","tag_id":"cjir8d0ar0005c5ccc4ly7hff","_id":"cjir8d0e2002oc5ccp8qdbvy9"},{"post_id":"cjir8d0bi000hc5cc1gok0r3u","tag_id":"cjir8d0dy002kc5ccnuaut6vq","_id":"cjir8d0e3002qc5cc39cur3ac"},{"post_id":"cjir8d0bn000ic5ccx4eso8gi","tag_id":"cjir8d0dr0028c5cc2l5qyao5","_id":"cjir8d0e4002sc5cc78nf8rwg"},{"post_id":"cjir8d0bn000ic5ccx4eso8gi","tag_id":"cjir8d0e2002pc5ccpacas1wy","_id":"cjir8d0e6002tc5ccra3nvjjx"},{"post_id":"cjir8d0bt000mc5ccshyugbq8","tag_id":"cjir8d0e3002rc5cc6zmhs68x","_id":"cjir8d0ea002vc5ccgdektkp5"},{"post_id":"cjir8d0bv000pc5cc8geyvokz","tag_id":"cjir8d0e7002uc5ccx13kypiy","_id":"cjir8d0ec002xc5cc15uxbavy"},{"post_id":"cjir8d0c1000uc5cc93gdhivk","tag_id":"cjir8d0dr0028c5cc2l5qyao5","_id":"cjir8d0ec002zc5cct41gjui9"},{"post_id":"cjir8d0c8000xc5cczrsxurr6","tag_id":"cjir8d0ec002yc5ccipsuu5ig","_id":"cjir8d0ef0032c5ccx27ybs61"},{"post_id":"cjir8d0c8000xc5cczrsxurr6","tag_id":"cjir8d0ed0030c5ccfqyzq5gv","_id":"cjir8d0ef0033c5cc7qol0vfc"},{"post_id":"cjir8d0cc0011c5ccbkp8zkok","tag_id":"cjir8d0ee0031c5ccuabxpveh","_id":"cjir8d0eh0036c5cck74colhp"},{"post_id":"cjir8d0cc0011c5ccbkp8zkok","tag_id":"cjir8d0ef0034c5cc7v3iai38","_id":"cjir8d0eh0037c5cc0sijmoli"},{"post_id":"cjir8d0cg0012c5ccvg5rnslk","tag_id":"cjir8d0eg0035c5cc02xzspgz","_id":"cjir8d0ep003ac5cckhxf1rql"},{"post_id":"cjir8d0cg0012c5ccvg5rnslk","tag_id":"cjir8d0eh0038c5ccdb354s22","_id":"cjir8d0ep003bc5ccusmg0iyf"},{"post_id":"cjir8d0ck0016c5ccb1phv5qs","tag_id":"cjir8d0eo0039c5cclzcvcoea","_id":"cjir8d0ew003gc5ccyghfkqtw"},{"post_id":"cjir8d0ck0016c5ccb1phv5qs","tag_id":"cjir8d0ep003cc5ccso6pojrd","_id":"cjir8d0ew003hc5cc0n307vnq"},{"post_id":"cjir8d0ck0016c5ccb1phv5qs","tag_id":"cjir8d0eq003dc5ccvk0782ph","_id":"cjir8d0ex003jc5cc2vko1tc8"},{"post_id":"cjir8d0ck0016c5ccb1phv5qs","tag_id":"cjir8d0eu003ec5ccg1ury7jb","_id":"cjir8d0ey003kc5cc06o1q7fi"},{"post_id":"cjir8d0cy0018c5ccx0ml7mps","tag_id":"cjir8d0eo0039c5cclzcvcoea","_id":"cjir8d0f3003oc5ccjy2rxecg"},{"post_id":"cjir8d0cy0018c5ccx0ml7mps","tag_id":"cjir8d0ew003ic5cc9nr3z2y8","_id":"cjir8d0f4003pc5cc7bclz31p"},{"post_id":"cjir8d0cy0018c5ccx0ml7mps","tag_id":"cjir8d0ey003lc5ccyinuxqup","_id":"cjir8d0f7003rc5ccmy4n6ike"},{"post_id":"cjir8d0cy0018c5ccx0ml7mps","tag_id":"cjir8d0ez003mc5cc6rge7kvx","_id":"cjir8d0f7003sc5ccbqbh5g1d"},{"post_id":"cjir8d0d1001cc5cc5p2cotre","tag_id":"cjir8d0f3003nc5ccdkhdp3vb","_id":"cjir8d0f8003tc5ccbb95i646"},{"post_id":"cjir8d0d1001cc5cc5p2cotre","tag_id":"cjir8d0f4003qc5ccfr48ro85","_id":"cjir8d0fa003uc5cc3i2l042u"}],"Tag":[{"name":"docker","_id":"cjir8d0ar0005c5ccc4ly7hff"},{"name":"supervisor","_id":"cjir8d0b0000ac5ccs5xltyxg"},{"name":"monitoring","_id":"cjir8d0bf000fc5cc0sv5k9wr"},{"name":"prometheus","_id":"cjir8d0de001ic5ccxl83j5fg"},{"name":"grafana","_id":"cjir8d0df001lc5ccalocxgd4"},{"name":"bash","_id":"cjir8d0dl001yc5ccngi5rjlb"},{"name":"string","_id":"cjir8d0dq0023c5cc6kbwow1m"},{"name":"vim","_id":"cjir8d0dr0028c5cc2l5qyao5"},{"name":"editor","_id":"cjir8d0ds002cc5cc0fpvpbub"},{"name":"cgroup","_id":"cjir8d0du002hc5cc75f5cd59"},{"name":"virtualization","_id":"cjir8d0dy002kc5ccnuaut6vq"},{"name":"spelling","_id":"cjir8d0e2002pc5ccpacas1wy"},{"name":"logger","_id":"cjir8d0e3002rc5cc6zmhs68x"},{"name":"java 8","_id":"cjir8d0e7002uc5ccx13kypiy"},{"name":"bracelet","_id":"cjir8d0ec002yc5ccipsuu5ig"},{"name":"life style","_id":"cjir8d0ed0030c5ccfqyzq5gv"},{"name":"ssh","_id":"cjir8d0ee0031c5ccuabxpveh"},{"name":"ops","_id":"cjir8d0ef0034c5cc7v3iai38"},{"name":"Chef","_id":"cjir8d0eg0035c5cc02xzspgz"},{"name":"Cloud-Computing","_id":"cjir8d0eh0038c5ccdb354s22"},{"name":"日记","_id":"cjir8d0eo0039c5cclzcvcoea"},{"name":"台独","_id":"cjir8d0ep003cc5ccso6pojrd"},{"name":"港独","_id":"cjir8d0eq003dc5ccvk0782ph"},{"name":"文化","_id":"cjir8d0eu003ec5ccg1ury7jb"},{"name":"LGBT","_id":"cjir8d0ew003ic5cc9nr3z2y8"},{"name":"同性恋","_id":"cjir8d0ey003lc5ccyinuxqup"},{"name":"广电总局","_id":"cjir8d0ez003mc5cc6rge7kvx"},{"name":"Test","_id":"cjir8d0f3003nc5ccdkhdp3vb"},{"name":"another tag","_id":"cjir8d0f4003qc5ccfr48ro85"}]}}